---
openapi: 3.0.3
info:
  version: 1.1.3
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com
tags:
- name: actions
  description: Endpoints to manage GitHub Actions using the REST API.
- name: activity
  description: Activity APIs provide access to notifications, subscriptions, and timelines.
- name: apps
  description: Information for integrations and installations.
- name: billing
  description: Monitor charges and usage from Actions and Packages.
- name: checks
  description: Rich interactions with checks run by your integrations.
- name: code-scanning
  description: Retrieve code scanning alerts from a repository.
- name: codes-of-conduct
  description: Insight into codes of conduct for your communities.
- name: emojis
  description: List emojis available to use on GitHub.
- name: gists
  description: View, modify your gists.
- name: git
  description: Raw Git functionality.
- name: gitignore
  description: View gitignore templates
- name: interactions
  description: Owner or admin management of users interactons.
- name: issues
  description: Interact with GitHub Issues.
- name: licenses
  description: View various OSS licenses.
- name: markdown
  description: Render Github flavored markdown
- name: meta
  description: Endpoints that give information about the API.
- name: migrations
  description: Move projects to or from GitHub.
- name: oauth-authorizations
  description: Manage access of OAuth applications
- name: orgs
  description: Interact with GitHub Orgs.
- name: projects
  description: Interact with GitHub Projects.
- name: pulls
  description: Interact with GitHub Pull Requests.
- name: rate-limit
  description: Check your current rate limit status
- name: reactions
  description: Interact with reactions to various GitHub entities.
- name: repos
  description: Interact with GitHub Repos.
- name: scim
  description: Provisioning of GitHub organization membership for SCIM-enabled providers.
- name: search
  description: Look for stuff on GitHub.
- name: teams
  description: Interact with GitHub Teams.
- name: users
  description: Interact with and view information about users and also current user.
servers:
- url: "{protocol}://{hostname}"
  variables:
    hostname:
      description: Self-hosted Enterprise Server or Enterprise Cloud hostname
      default: HOSTNAME
    protocol:
      description: Self-hosted Enterprise Server or Enterprise Cloud protocol
      default: http
externalDocs:
  description: GitHub Enterprise Developer Docs
  url: https://developer.github.com/enterprise/2.21/v3/
paths:
  "/":
    get:
      summary: GitHub API Root
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      tags:
      - meta
      operationId: meta/root
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_user_url:
                    type: string
                    format: uri
                  current_user_authorizations_html_url:
                    type: string
                    format: uri
                  authorizations_url:
                    type: string
                    format: uri
                  code_search_url:
                    type: string
                    format: uri
                  commit_search_url:
                    type: string
                    format: uri
                  emails_url:
                    type: string
                    format: uri
                  emojis_url:
                    type: string
                    format: uri
                  events_url:
                    type: string
                    format: uri
                  feeds_url:
                    type: string
                    format: uri
                  followers_url:
                    type: string
                    format: uri
                  following_url:
                    type: string
                    format: uri
                  gists_url:
                    type: string
                    format: uri
                  hub_url:
                    type: string
                    format: uri
                  issue_search_url:
                    type: string
                    format: uri
                  issues_url:
                    type: string
                    format: uri
                  keys_url:
                    type: string
                    format: uri
                  label_search_url:
                    type: string
                    format: uri
                  notifications_url:
                    type: string
                    format: uri
                  organization_url:
                    type: string
                    format: uri
                  organization_repositories_url:
                    type: string
                    format: uri
                  organization_teams_url:
                    type: string
                    format: uri
                  public_gists_url:
                    type: string
                    format: uri
                  rate_limit_url:
                    type: string
                    format: uri
                  repository_url:
                    type: string
                    format: uri
                  repository_search_url:
                    type: string
                    format: uri
                  current_user_repositories_url:
                    type: string
                    format: uri
                  starred_url:
                    type: string
                    format: uri
                  starred_gists_url:
                    type: string
                    format: uri
                  topic_search_url:
                    type: string
                    format: uri
                  user_url:
                    type: string
                    format: uri
                  user_organizations_url:
                    type: string
                    format: uri
                  user_repositories_url:
                    type: string
                    format: uri
                  user_search_url:
                    type: string
                    format: uri
                required:
                - current_user_url
                - current_user_authorizations_html_url
                - authorizations_url
                - code_search_url
                - commit_search_url
                - emails_url
                - emojis_url
                - events_url
                - feeds_url
                - followers_url
                - following_url
                - gists_url
                - hub_url
                - issue_search_url
                - issues_url
                - keys_url
                - label_search_url
                - notifications_url
                - organization_url
                - organization_repositories_url
                - organization_teams_url
                - public_gists_url
                - rate_limit_url
                - repository_url
                - repository_search_url
                - current_user_repositories_url
                - starred_url
                - starred_gists_url
                - user_url
                - user_organizations_url
                - user_repositories_url
                - user_search_url
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: meta
  "/admin/hooks":
    get:
      summary: List global webhooks
      description: ''
      operationId: enterprise-admin/list-global-webhooks
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#list-global-webhooks
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/global-hook"
              examples:
                default:
                  "$ref": "#/components/examples/global-hook-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
    post:
      summary: Create a global webhook
      description: ''
      operationId: enterprise-admin/create-global-webhook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#create-a-global-webhook
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/global-hook"
              examples:
                default:
                  "$ref": "#/components/examples/global-hook"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Must be passed as "web".
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                  required:
                  - url
                events:
                  type: array
                  description: 'The [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    that trigger this webhook. A global webhook can be triggered by
                    `user` and `organization` events. Default: `user` and `organization`.'
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
              required:
              - name
              - config
            example:
              name: web
              events:
              - organization
              - user
              config:
                url: https://example.com/webhook
                content_type: json
                secret: secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
  "/admin/hooks/{hook_id}":
    get:
      summary: Get a global webhook
      description: ''
      operationId: enterprise-admin/get-global-webhook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#get-a-global-webhook
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/global-hook"
              examples:
                default:
                  "$ref": "#/components/examples/global-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
    patch:
      summary: Update a global webhook
      description: Parameters that are not provided will be overwritten with the default
        value or removed if no default exists.
      operationId: enterprise-admin/update-global-webhook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#update-a-global-webhook
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/global-hook-2"
              examples:
                default:
                  "$ref": "#/components/examples/global-hook-2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                  required:
                  - url
                events:
                  type: array
                  description: 'The [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    that trigger this webhook. A global webhook can be triggered by
                    `user` and `organization` events. Default: `user` and `organization`.'
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
            example:
              events:
              - organization
              config:
                url: https://example.com/webhook
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
    delete:
      summary: Delete a global webhook
      description: ''
      operationId: enterprise-admin/delete-global-webhook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#delete-a-global-webhook
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
  "/admin/hooks/{hook_id}/pings":
    post:
      summary: Ping a global webhook
      description: This will trigger a [ping event](https://developer.github.com/enterprise/2.21/webhooks/#ping-event)
        to be sent to the webhook.
      operationId: enterprise-admin/ping-global-webhook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/global_webhooks/#ping-a-global-webhook
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.superpro-preview+json
        required: true
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: superpro
          note: |-
            The [Global Webhooks API](https://developer.github.com/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.superpro-preview+json
            ```
        category: enterprise-admin
        subcategory: global-webhooks
  "/admin/keys":
    get:
      summary: List public keys
      description: ''
      operationId: enterprise-admin/list-public-keys
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#list-public-keys
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/enterprise-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/enterprise-public-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/keys/{key_ids}":
    delete:
      summary: Delete a public key
      description: ''
      operationId: enterprise-admin/delete-public-key
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#delete-a-public-key
      parameters:
      - "$ref": "#/components/parameters/key-ids"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/ldap/teams/{team_id}/mapping":
    patch:
      summary: Update LDAP mapping for a team
      description: |-
        Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://developer.github.com/enterprise/2.21/v3/teams/#create-a-team) endpoint to create a team with LDAP mapping.

        You can also update the LDAP mapping of a child team.
      operationId: enterprise-admin/update-ldap-mapping-for-team
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-team
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ldap-mapping-team"
              examples:
                default:
                  "$ref": "#/components/examples/ldap-mapping-team"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ldap_dn:
                  type: string
                  description: The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns)
                    (DN) of the LDAP entry to map to a team.
            example:
              ldap_dn: cn=Enterprise Ops,ou=teams,dc=github,dc=com
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: ldap
  "/admin/ldap/teams/{team_id}/sync":
    post:
      summary: Sync LDAP mapping for a team
      description: Note that this API call does not automatically initiate an LDAP
        sync. Rather, if a `201` is returned, the sync job is queued successfully,
        and is performed when the instance is ready.
      operationId: enterprise-admin/sync-ldap-mapping-for-team
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-team
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: queued
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: ldap
  "/admin/ldap/users/{username}/mapping":
    patch:
      summary: Update LDAP mapping for a user
      description: ''
      operationId: enterprise-admin/update-ldap-mapping-for-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ldap-mapping-user"
              examples:
                default:
                  "$ref": "#/components/examples/ldap-mapping-user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ldap_dn:
                  type: string
                  description: The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns)
                    (DN) of the LDAP entry to map to a team.
            example:
              ldap_dn: uid=asdf,ou=users,dc=github,dc=com
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: ldap
  "/admin/ldap/users/{username}/sync":
    post:
      summary: Sync LDAP mapping for a user
      description: Note that this API call does not automatically initiate an LDAP
        sync. Rather, if a `201` is returned, the sync job is queued successfully,
        and is performed when the instance is ready.
      operationId: enterprise-admin/sync-ldap-mapping-for-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: queued
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: ldap
  "/admin/organizations":
    post:
      summary: Create an organization
      description: ''
      operationId: enterprise-admin/create-org
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/orgs/#create-an-organization
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The organization's username.
                admin:
                  type: string
                  description: The login of the user who will manage this organization.
                profile_name:
                  type: string
                  description: The organization's display name.
              required:
              - login
              - admin
            example:
              login: github
              profile_name: GitHub, Inc.
              admin: monalisaoctocat
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: orgs
  "/admin/organizations/{org}":
    patch:
      summary: Update an organization name
      description: ''
      operationId: enterprise-admin/update-org-name
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/orgs/#update-an-organization-name
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              example:
                message: Job queued to rename organization. It may take a few minutes
                  to complete.
                url: https://<hostname>/api/v3/organizations/1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The organization's new name.
              required:
              - login
            example:
              login: the-new-octocats
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: orgs
  "/admin/pre-receive-environments":
    get:
      summary: List pre-receive environments
      description: ''
      operationId: enterprise-admin/list-pre-receive-environments
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pre-receive-environment"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-environment-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
    post:
      summary: Create a pre-receive environment
      description: ''
      operationId: enterprise-admin/create-pre-receive-environment
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-environment"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-environment"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new pre-receive environment's name.
                image_url:
                  type: string
                  description: URL from which to download a tarball of this environment.
              required:
              - name
              - image_url
            example:
              name: DevTools Hook Env
              image_url: https://my_file_server/path/to/devtools_env.tar.gz
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}":
    get:
      summary: Get a pre-receive environment
      description: ''
      operationId: enterprise-admin/get-pre-receive-environment
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environment
      parameters:
      - "$ref": "#/components/parameters/pre-receive-environment-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-environment"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-environment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
    patch:
      summary: Update a pre-receive environment
      description: You cannot modify the default environment. If you attempt to modify
        the default environment, you will receive a `422 Unprocessable Entity` response.
      operationId: enterprise-admin/update-pre-receive-environment
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#update-a-pre-receive-environment
      parameters:
      - "$ref": "#/components/parameters/pre-receive-environment-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-environment"
              examples:
                default-response:
                  "$ref": "#/components/examples/pre-receive-environment-default-response"
        '422':
          description: Client Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: string
                        code:
                          type: string
                        message:
                          type: string
              examples:
                client-errors:
                  value:
                    message: Validation Failed
                    errors:
                    - resource: PreReceiveEnvironment
                      code: custom
                      message: Cannot modify or delete the default environment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: This pre-receive environment's new name.
                image_url:
                  type: string
                  description: URL from which to download a tarball of this environment.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
    delete:
      summary: Delete a pre-receive environment
      description: |-
        If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.

        The possible error messages are:

        *   _Cannot modify or delete the default environment_
        *   _Cannot delete environment that has hooks_
        *   _Cannot delete environment when download is in progress_
      operationId: enterprise-admin/delete-pre-receive-environment
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment
      parameters:
      - "$ref": "#/components/parameters/pre-receive-environment-id"
      responses:
        '204':
          description: Empty response
        '422':
          description: Client Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: string
                        code:
                          type: string
                        message:
                          type: string
              examples:
                client-errors:
                  value:
                    message: Validation Failed
                    errors:
                    - resource: PreReceiveEnvironment
                      code: custom
                      message: Cannot modify or delete the default environment
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads":
    post:
      summary: Start a pre-receive environment download
      description: |-
        Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.

        If a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.

        The possible error messages are:

        * _Cannot modify or delete the default environment_
        * _Can not start a new download when a download is in progress_
      operationId: enterprise-admin/start-pre-receive-environment-download
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#start-a-pre-receive-environment-download
      parameters:
      - "$ref": "#/components/parameters/pre-receive-environment-id"
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-environment-download-status"
              examples:
                default-response:
                  "$ref": "#/components/examples/pre-receive-environment-download-status-default-response"
        '422':
          description: Client Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: string
                        code:
                          type: string
                        message:
                          type: string
              examples:
                client-errors:
                  value:
                    message: Validation Failed
                    errors:
                    - resource: PreReceiveEnvironment
                      code: custom
                      message: Can not start a new download when a download is in
                        progress
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest":
    get:
      summary: Get the download status for a pre-receive environment
      description: In addition to seeing the download status at the "[Get a pre-receive
        environment](#get-a-pre-receive-environment)" endpoint, there is also this
        separate endpoint for just the download status.
      operationId: enterprise-admin/get-download-status-for-pre-receive-environment
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_environments/#get-the-download-status-for-a-pre-receive-environment
      parameters:
      - "$ref": "#/components/parameters/pre-receive-environment-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-environment-download-status"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-environment-download-status"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-environments
  "/admin/pre-receive-hooks":
    get:
      summary: List pre-receive hooks
      description: ''
      operationId: enterprise-admin/list-pre-receive-hooks
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_hooks/#list-pre-receive-hooks
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-hook-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-hooks
    post:
      summary: Create a pre-receive hook
      description: ''
      operationId: enterprise-admin/create-pre-receive-hook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_hooks/#create-a-pre-receive-hook
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-hook"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the hook.
                script:
                  type: string
                  description: The script that the hook runs.
                script_repository:
                  type: object
                  description: The GitHub repository where the script is kept.
                  properties: {}
                  additionalProperties: true
                environment:
                  type: object
                  description: The pre-receive environment where the script is executed.
                  properties: {}
                  additionalProperties: true
                enforcement:
                  type: string
                  description: 'The state of enforcement for this hook. default: `disabled`'
                allow_downstream_configuration:
                  type: boolean
                  description: 'Whether enforcement can be overridden at the org or
                    repo level. default: `false`'
              required:
              - name
              - script
              - script_repository
              - environment
            example:
              name: Check Commits
              script: scripts/commit_check.sh
              enforcement: disabled
              allow_downstream_configuration: false
              script_repository:
                full_name: DevIT/hooks
              environment:
                id: 2
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-hooks
  "/admin/pre-receive-hooks/{pre_receive_hook_id}":
    get:
      summary: Get a pre-receive hook
      description: ''
      operationId: enterprise-admin/get-pre-receive-hook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_hooks/#get-a-pre-receive-hook
      parameters:
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-hooks
    patch:
      summary: Update a pre-receive hook
      description: ''
      operationId: enterprise-admin/update-pre-receive-hook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_hooks/#update-a-pre-receive-hook
      parameters:
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/pre-receive-hook-2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the hook.
                script:
                  type: string
                  description: The script that the hook runs.
                script_repository:
                  type: object
                  description: The GitHub repository where the script is kept.
                  properties: {}
                  additionalProperties: true
                environment:
                  type: object
                  description: The pre-receive environment where the script is executed.
                  properties: {}
                  additionalProperties: true
                enforcement:
                  type: string
                  description: The state of enforcement for this hook.
                allow_downstream_configuration:
                  type: boolean
                  description: Whether enforcement can be overridden at the org or
                    repo level.
            example:
              name: Check Commits
              environment:
                id: 1
              allow_downstream_configuration: true
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-hooks
    delete:
      summary: Delete a pre-receive hook
      description: ''
      operationId: enterprise-admin/delete-pre-receive-hook
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/pre_receive_hooks/#delete-a-pre-receive-hook
      parameters:
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: pre-receive-hooks
  "/admin/tokens":
    get:
      summary: List personal access tokens
      description: Lists personal access tokens for all users, including admin users.
      operationId: enterprise-admin/list-personal-access-tokens
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#list-personal-access-tokens
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/tokens/{token_id}":
    delete:
      summary: Delete a personal access token
      description: Deletes a personal access token. Returns a `403 - Forbidden` status
        when a personal access token is in use. For example, if you access this endpoint
        with the same personal access token that you are trying to delete, you will
        receive this error.
      operationId: enterprise-admin/delete-personal-access-token
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#delete-a-personal-access-token
      parameters:
      - "$ref": "#/components/parameters/token-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/users":
    post:
      summary: Create a user
      description: |-
        If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://developer.github.com/enterprise/2.21/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user) for the user.

        The login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `"octo_cat"` as the login, a user named `"octo-cat"` will be created.

        If the login name or email address is already associated with an account, the server will return a `422` response.
      operationId: enterprise-admin/create-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#create-a-user
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The user's username.
                email:
                  type: string
                  description: "**Required for built-in authentication.** The user's
                    email address. This parameter can be omitted when using CAS, LDAP,
                    or SAML. For details on built-in and centrally-managed authentication,
                    see the the [GitHub authentication guide](https://help.github.com/enterprise/2.21/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/)."
              required:
              - login
            example:
              login: monalisa
              email: octocat@github.com
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/users/{username}":
    patch:
      summary: Update the username for a user
      description: ''
      operationId: enterprise-admin/update-username-for-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#update-the-username-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              example:
                message: Job queued to rename user. It may take a few minutes to complete.
                url: https://api.github.com/user/1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The user's new username.
              required:
              - login
            example:
              login: thenewmonalisa
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Delete a user
      description: |-
        Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#suspend-a-user) is often a better option.

        You can delete any user account except your own.
      operationId: enterprise-admin/delete-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#delete-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/admin/users/{username}/authorizations":
    post:
      summary: Create an impersonation OAuth token
      description: ''
      operationId: enterprise-admin/create-impersonation-o-auth-token
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#create-an-impersonation-oauth-token
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  type: array
                  description: A list of [scopes](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
                  items:
                    type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Delete an impersonation OAuth token
      description: ''
      operationId: enterprise-admin/delete-impersonation-o-auth-token
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#delete-an-impersonation-oauth-token
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/app":
    get:
      summary: Get the authenticated app
      description: |-
        Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the "[List installations for the authenticated app](https://developer.github.com/enterprise/2.21/v3/apps/#list-installations-for-the-authenticated-app)" endpoint.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-the-authenticated-app
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/app-manifests/{code}/conversions":
    post:
      summary: Create a GitHub App from a manifest
      description: Use this endpoint to complete the handshake necessary when implementing
        the [GitHub App Manifest flow](https://developer.github.com/enterprise/2.21/apps/building-github-apps/creating-github-apps-from-a-manifest/).
        When you create a GitHub App with the manifest flow, you receive a temporary
        `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.
      tags:
      - apps
      operationId: apps/create-from-manifest
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#create-a-github-app-from-a-manifest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/integration"
                - type: object
                  properties:
                    client_id:
                      type: string
                    client_secret:
                      type: string
                    webhook_secret:
                      type: string
                    pem:
                      type: string
                  required:
                  - client_id
                  - client_secret
                  - webhook_secret
                  - pem
                  additionalProperties: true
              examples:
                default:
                  "$ref": "#/components/examples/integration-from-manifest"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: apps
        subcategory: 
  "/app/installations":
    get:
      summary: List installations for the authenticated app
      description: |-
        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.

        The permissions the installation has are included under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installations
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#list-installations-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: The permissions the installation has are included under the
            `permissions` key.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/app/installations/{installation_id}":
    get:
      summary: Get an installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-an-installation-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/installation_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
    delete:
      summary: Delete an installation for the authenticated app
      description: Uninstalls a GitHub App on a user, organization, or business account.
        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      tags:
      - apps
      operationId: apps/delete-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#delete-an-installation-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/installation_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/app/installations/{installation_id}/access_tokens":
    post:
      summary: Create an installation access token for an app
      description: |-
        Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/create-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#create-an-installation-access-token-for-an-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/installation_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  description: List of repository names that the token should have
                    access to
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: List of repository IDs that the token should have access
                    to
                  example:
                  - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  type: object
                  properties:
                    contents:
                      type: string
                    issues:
                      type: string
                    deployments:
                      type: string
                    single_file:
                      type: string
                    def_not_a_repo:
                      type: string
                      example: '"read"'
                  example:
                    contents: read
                    issues: read
                    deployments: write
                    single_file: read
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation-token"
              examples:
                default:
                  "$ref": "#/components/examples/installation-token"
        '403':
          "$ref": "#/components/responses/forbidden"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/applications/grants":
    get:
      summary: List your grants
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `["repo", "user"]`.
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/list-grants
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#list-your-grants
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/application-grant"
              examples:
                default:
                  "$ref": "#/components/examples/application-grant-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/applications/grants/{grant_id}":
    get:
      summary: Get a single grant
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/),
        which is used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/)
        will be removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/get-grant
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#get-a-single-grant
      parameters:
      - "$ref": "#/components/parameters/grant_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/application-grant"
              examples:
                default:
                  "$ref": "#/components/examples/application-grant"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
    delete:
      summary: Delete a grant
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/delete-grant
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#delete-a-grant
      parameters:
      - "$ref": "#/components/parameters/grant_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/applications/{client_id}/grant":
    delete:
      summary: Delete an app authorization
      description: |-
        OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.
        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      operationId: apps/delete-authorization
      tags:
      - apps
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#delete-an-app-authorization
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the
                    GitHub API.
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Empty response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: apps
        subcategory: oauth-applications
  "/applications/{client_id}/grants/{access_token}":
    delete:
      summary: Revoke a grant for an application
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-app-endpoint/).

        OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.

        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under "Authorized OAuth Apps" on GitHub Enterprise Server](https://github.com/settings/applications#authorized).
      tags:
      - apps
      operationId: apps/revoke-grant-for-application
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#revoke-a-grant-for-an-application
      parameters:
      - "$ref": "#/components/parameters/client-id"
      - "$ref": "#/components/parameters/access-token"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2021-05-05'
        deprecationDate: '2020-02-14'
        category: apps
        subcategory: oauth-applications
      deprecated: true
  "/applications/{client_id}/token":
    post:
      summary: Check a token
      description: OAuth applications can use a special API method for checking OAuth
        token validity without exceeding the normal rate limits for failed login attempts.
        Authentication works differently with this particular endpoint. You must use
        [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication)
        to use this endpoint, where the username is the OAuth application `client_id`
        and the password is its `client_secret`. Invalid tokens will return `404 NOT
        FOUND`.
      tags:
      - apps
      operationId: apps/check-token
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#check-a-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
              - access_token
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: apps
        subcategory: oauth-applications
    patch:
      summary: Reset a token
      description: OAuth applications can use this API method to reset a valid OAuth
        token without end-user involvement. Applications must save the "token" property
        in the response because changes take effect immediately. You must use [Basic
        Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id` and
        `client_secret` as the username and password. Invalid tokens will return `404
        NOT FOUND`.
      tags:
      - apps
      operationId: apps/reset-token
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#reset-a-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
              - access_token
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: apps
        subcategory: oauth-applications
    delete:
      summary: Delete an app token
      description: OAuth application owners can revoke a single token for an OAuth
        application. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id` and
        `client_secret` as the username and password.
      tags:
      - apps
      operationId: apps/delete-token
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#delete-an-app-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the
                    GitHub API.
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Empty response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: apps
        subcategory: oauth-applications
  "/applications/{client_id}/tokens/{access_token}":
    get:
      summary: Check an authorization
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-app-endpoint/).

        OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      tags:
      - apps
      operationId: apps/check-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#check-an-authorization
      parameters:
      - "$ref": "#/components/parameters/client-id"
      - "$ref": "#/components/parameters/access-token"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                nullable: true
                allOf:
                - "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2021-05-05'
        deprecationDate: '2020-02-14'
        category: apps
        subcategory: oauth-applications
      deprecated: true
    post:
      summary: Reset an authorization
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-app-endpoint/).

        OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      tags:
      - apps
      operationId: apps/reset-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#reset-an-authorization
      parameters:
      - "$ref": "#/components/parameters/client-id"
      - "$ref": "#/components/parameters/access-token"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2021-05-05'
        deprecationDate: '2020-02-14'
        category: apps
        subcategory: oauth-applications
      deprecated: true
    delete:
      summary: Revoke an authorization for an application
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-app-endpoint/).

        OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.
      tags:
      - apps
      operationId: apps/revoke-authorization-for-application
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/oauth_applications/#revoke-an-authorization-for-an-application
      parameters:
      - "$ref": "#/components/parameters/client-id"
      - "$ref": "#/components/parameters/access-token"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2021-05-05'
        deprecationDate: '2020-02-14'
        category: apps
        subcategory: oauth-applications
      deprecated: true
  "/apps/{app_slug}":
    get:
      summary: Get an app
      description: |-
        **Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).

        If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-by-slug
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-an-app
      parameters:
      - "$ref": "#/components/parameters/app_slug"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/authorizations":
    get:
      summary: List your authorizations
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/),
        which is used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/)
        will be removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/list-authorizations
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#list-your-authorizations
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
    post:
      summary: Create a new authorization
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        Creates OAuth tokens using [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://developer.github.com/enterprise/2.21/v3/auth/#working-with-two-factor-authentication)."

        To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.

        You can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).

        Organizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/create-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#create-a-new-authorization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                  - public_repo
                  - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                client_id:
                  description: The OAuth app client key for which to create the token.
                  maxLength: 20
                  type: string
                client_secret:
                  description: The OAuth app client secret for which to create the
                    token.
                  maxLength: 40
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from
                    others created for the same client ID and user.
                  type: string
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization"
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '410':
          "$ref": "#/components/responses/gone"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/authorizations/clients/{client_id}":
    put:
      summary: Get-or-create an authorization for a specific app
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://developer.github.com/enterprise/2.21/v3/auth/#working-with-two-factor-authentication)."

        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/get-or-create-authorization-for-app
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the
                    token.
                  maxLength: 40
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                  - public_repo
                  - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from
                    others created for the same client ID and user.
                  type: string
              required:
              - client_secret
              type: object
      responses:
        '200':
          description: Response if returning an existing token
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                response-if-returning-an-existing-token:
                  "$ref": "#/components/examples/authorization-response-if-returning-an-existing-token-2"
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '201':
          description: "**Deprecation Notice:** GitHub will discontinue the [OAuth
            Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/),
            which is used by integrations to create personal access tokens and OAuth
            tokens, and you must now create these tokens using our [web application
            flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
            The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/)
            will be removed on November, 13, 2020. For more information, including
            scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization"
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/authorizations/clients/{client_id}/{fingerprint}":
    put:
      summary: Get-or-create an authorization for a specific app and fingerprint
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://developer.github.com/enterprise/2.21/v3/auth/#working-with-two-factor-authentication)."
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint
      parameters:
      - "$ref": "#/components/parameters/client-id"
      - name: fingerprint
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the
                    token.
                  maxLength: 40
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                  - public_repo
                  - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
              required:
              - client_secret
              type: object
      responses:
        '200':
          description: Response if returning an existing token
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                response-if-returning-an-existing-token:
                  "$ref": "#/components/examples/authorization-response-if-returning-an-existing-token"
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '201':
          description: Response if returning a new token
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-3"
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/authorizations/{authorization_id}":
    get:
      summary: Get a single authorization
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/),
        which is used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/)
        will be removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/get-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#get-a-single-authorization
      parameters:
      - "$ref": "#/components/parameters/authorization_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-2"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
    patch:
      summary: Update an existing authorization
      description: |-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://developer.github.com/enterprise/2.21/v3/auth/#working-with-two-factor-authentication)."

        You can only send one of these scope keys at a time.
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/update-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#update-an-existing-authorization
      parameters:
      - "$ref": "#/components/parameters/authorization_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                  - public_repo
                  - user
                  nullable: true
                add_scopes:
                  description: A list of scopes to add to this authorization.
                  type: array
                  items:
                    type: string
                remove_scopes:
                  description: A list of scopes to remove from this authorization.
                  type: array
                  items:
                    type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from
                    others created for the same client ID and user.
                  type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-2"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
    delete:
      summary: Delete an authorization
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/),
        which is used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application flow](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/)
        will be removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
      tags:
      - oauth-authorizations
      operationId: oauth-authorizations/delete-authorization
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#delete-an-authorization
      parameters:
      - "$ref": "#/components/parameters/authorization_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: 
      deprecated: true
  "/codes_of_conduct":
    get:
      summary: Get all codes of conduct
      description: ''
      tags:
      - codes-of-conduct
      operationId: codes-of-conduct/get-all-codes-of-conduct
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/codes_of_conduct/#get-all-codes-of-conduct
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-of-conduct"
              examples:
                default:
                  "$ref": "#/components/examples/code-of-conduct-simple-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: scarlet-witch
          note: |-
            The Codes of Conduct API is currently available for developers to preview.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.scarlet-witch-preview+json
            ```
        category: codes-of-conduct
        subcategory: 
  "/codes_of_conduct/{key}":
    get:
      summary: Get a code of conduct
      description: ''
      tags:
      - codes-of-conduct
      operationId: codes-of-conduct/get-conduct-code
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/codes_of_conduct/#get-a-code-of-conduct
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-of-conduct"
              examples:
                default:
                  "$ref": "#/components/examples/code-of-conduct"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: scarlet-witch
          note: |-
            The Codes of Conduct API is currently available for developers to preview.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.scarlet-witch-preview+json
            ```
        category: codes-of-conduct
        subcategory: 
  "/content_references/{content_reference_id}/attachments":
    post:
      summary: Create a content attachment
      description: |-
        Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#content_reference) to create an attachment.

        The app must create a content attachment within six hours of the content reference URL being posted. See "[Using content attachments](https://developer.github.com/enterprise/2.21/apps/using-content-attachments/)" for details about content attachments.

        You must use an [installation access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/create-content-attachment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#create-a-content-attachment
      parameters:
      - name: content_reference_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title:
                  description: The title of the attachment
                  example: Title of the attachment
                  type: string
                  maxLength: 1024
                body:
                  description: The body of the attachment
                  example: Body of the attachment
                  type: string
                  maxLength: 262144
              required:
              - title
              - body
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/content-reference-attachment"
              examples:
                default:
                  "$ref": "#/components/examples/content-reference-attachment"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: corsair
          note: |-
            To access the Content Attachments API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.corsair-preview+json
            ```
        category: apps
        subcategory: installations
  "/emojis":
    get:
      summary: Get emojis
      description: Lists all the emojis available to use on GitHub Enterprise Server.
      operationId: emojis/get
      tags:
      - emojis
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/emojis/#get-emojis
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
          description: response
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: emojis
        subcategory: 
  "/enterprise/settings/license":
    get:
      summary: Get license information
      description: ''
      operationId: enterprise-admin/get-license-information
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/license/#get-license-information
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/license-info"
              examples:
                default:
                  "$ref": "#/components/examples/license-info"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: license
  "/enterprise/stats/{type}":
    get:
      summary: Get statistics
      description: |-
        There are a variety of types to choose from:

        | Type         | Description                                                                                         |
        | ------------ | --------------------------------------------------------------------------------------------------- |
        | `issues`     | The number of open and closed issues.                                                               |
        | `hooks`      | The number of active and inactive hooks.                                                            |
        | `milestones` | The number of open and closed milestones.                                                           |
        | `orgs`       | The number of organizations, teams, team members, and disabled organizations.                       |
        | `comments`   | The number of comments on issues, pull requests, commits, and gists.                                |
        | `pages`      | The number of GitHub Pages sites.                                                                   |
        | `users`      | The number of suspended and admin users.                                                            |
        | `gists`      | The number of private and public gists.                                                             |
        | `pulls`      | The number of merged, mergeable, and unmergeable pull requests.                                     |
        | `repos`      | The number of organization-owned repositories, root repositories, forks, pushed commits, and wikis. |
        | `all`        | All of the statistics listed above.                                                                 |

        These statistics are cached and will be updated approximately every 10 minutes.
      operationId: enterprise-admin/get-type-stats
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/admin_stats/#get-statistics
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/enterprise-overview"
              examples:
                default:
                  "$ref": "#/components/examples/enterprise-overview"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: admin-stats
  "/events":
    get:
      summary: List public events
      description: We delay the public events feed by five minutes, which means the
        most recent event returned by the public events API actually occurred at least
        five minutes ago.
      tags:
      - activity
      operationId: activity/list-public-events
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-public-events
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/feeds":
    get:
      summary: Get feeds
      description: |-
        GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:

        *   **Timeline**: The GitHub Enterprise Server global public timeline
        *   **User**: The public timeline for any user, using [URI template](https://developer.github.com/enterprise/2.21/v3/#hypermedia)
        *   **Current user public**: The public timeline for the authenticated user
        *   **Current user**: The private timeline for the authenticated user
        *   **Current user actor**: The private timeline for activity created by the authenticated user
        *   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.
        *   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.

        **Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/enterprise/2.21/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.
      tags:
      - activity
      operationId: activity/get-feeds
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/feeds/#get-feeds
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/feed"
              examples:
                default:
                  "$ref": "#/components/examples/feed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: feeds
  "/gists":
    get:
      summary: List gists for the authenticated user
      description: 'Lists the authenticated user''s gists or if called anonymously,
        this endpoint returns all public gists:'
      tags:
      - gists
      operationId: gists/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-gists-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    post:
      summary: Create a gist
      description: |-
        Allows you to add a new gist with one or more files.

        **Note:** Don't name your files "gistfile" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.
      operationId: gists/create
      tags:
      - gists
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#create-a-gist
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the gist
                  example: Example Ruby script
                  type: string
                files:
                  description: Names and content for the files that make up the gist
                  example:
                    hello.rb:
                      content: puts "Hello, World!"
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      content:
                        description: Content of the file
                        readOnly: false
                        type: string
                    required:
                    - content
                public:
                  oneOf:
                  - description: Flag indicating whether the gist is public
                    example: true
                    type: boolean
                    default: false
                  - type: string
                    example: 'true'
                    default: 'false'
                    enum:
                    - 'true'
                    - 'false'
              required:
              - files
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-full"
              examples:
                default:
                  "$ref": "#/components/examples/gist"
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/public":
    get:
      summary: List public gists
      description: |-
        List public gists sorted by most recently updated to least recently updated.

        Note: With [pagination](https://developer.github.com/enterprise/2.21/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.
      tags:
      - gists
      operationId: gists/list-public
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-public-gists
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/starred":
    get:
      summary: List starred gists
      description: 'List the authenticated user''s starred gists:'
      tags:
      - gists
      operationId: gists/list-starred
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-starred-gists
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/{gist_id}":
    get:
      summary: Get a gist
      description: ''
      tags:
      - gists
      operationId: gists/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#get-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-full"
              examples:
                default:
                  "$ref": "#/components/examples/gist"
        '403':
          "$ref": "#/components/responses/forbidden_gist"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    patch:
      summary: Update a gist
      description: Allows you to update or delete a gist file and rename gist files.
        Files from the previous version of the gist that aren't explicitly changed
        during an edit are unchanged.
      tags:
      - gists
      operationId: gists/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#update-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the gist
                  example: Example Ruby script
                  type: string
                files:
                  description: Names of files to be updated
                  example:
                    hello.rb:
                      content: blah
                      filename: goodbye.rb
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      content:
                        description: The new content of the file
                        type: string
                      filename:
                        description: The new filename for the file
                        type: string
                        nullable: true
                    nullable: true
              anyOf:
              - required:
                - description
              - required:
                - files
              type: object
              nullable: true
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-full"
              examples:
                default:
                  "$ref": "#/components/examples/gist-3"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    delete:
      summary: Delete a gist
      description: ''
      tags:
      - gists
      operationId: gists/delete
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#delete-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/{gist_id}/comments":
    get:
      summary: List gist comments
      description: ''
      tags:
      - gists
      operationId: gists/list-comments
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/comments/#list-gist-comments
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: comments
    post:
      summary: Create a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/create-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/comments/#create-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  type: string
                  maxLength: 65535
                  example: Body of the attachment
              type: object
              required:
              - body
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
          headers:
            Location:
              example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: comments
  "/gists/{gist_id}/comments/{comment_id}":
    get:
      summary: Get a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/get-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/comments/#get-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden_gist"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: comments
    patch:
      summary: Update a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/update-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/comments/#update-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  type: string
                  maxLength: 65535
                  example: Body of the attachment
              type: object
              required:
              - body
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: comments
    delete:
      summary: Delete a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/delete-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/comments/#delete-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: comments
  "/gists/{gist_id}/commits":
    get:
      summary: List gist commits
      description: ''
      tags:
      - gists
      operationId: gists/list-commits
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-gist-commits
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-commit"
              examples:
                default:
                  "$ref": "#/components/examples/gist-commit-items"
          headers:
            Link:
              example: <https://api.github.com/resource?page=2>; rel="next"
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/{gist_id}/forks":
    get:
      summary: List gist forks
      description: ''
      tags:
      - gists
      operationId: gists/list-forks
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-gist-forks
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-full"
              examples:
                default:
                  "$ref": "#/components/examples/gist-fork-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    post:
      summary: Fork a gist
      description: "**Note**: This was previously `/gists/:gist_id/fork`."
      tags:
      - gists
      operationId: gists/fork
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#fork-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist"
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/{gist_id}/star":
    get:
      summary: Check if a gist is starred
      description: ''
      tags:
      - gists
      operationId: gists/check-is-starred
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#check-if-a-gist-is-starred
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '204':
          description: Response if gist is starred
        '404':
          description: Response if gist is not starred
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    put:
      summary: Star a gist
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - gists
      operationId: gists/star
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#star-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
    delete:
      summary: Unstar a gist
      description: ''
      tags:
      - gists
      operationId: gists/unstar
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#unstar-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gists/{gist_id}/{sha}":
    get:
      summary: Get a gist revision
      description: ''
      tags:
      - gists
      operationId: gists/get-revision
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#get-a-gist-revision
      parameters:
      - "$ref": "#/components/parameters/gist_id"
      - name: sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-full"
              examples:
                default:
                  "$ref": "#/components/examples/gist-2"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/gitignore/templates":
    get:
      summary: Get all gitignore templates
      description: List all templates available to pass as an option when [creating
        a repository](https://developer.github.com/enterprise/2.21/v3/repos/#create-a-repository-for-the-authenticated-user).
      operationId: gitignore/get-all-templates
      tags:
      - gitignore
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gitignore/#get-all-gitignore-templates
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Actionscript
              - Android
              - AppceleratorTitanium
              - Autotools
              - Bancha
              - C
              - C++
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: gitignore
        subcategory: 
  "/gitignore/templates/{name}":
    get:
      summary: Get a gitignore template
      description: |-
        The API also allows fetching the source of a single template.
        Use the raw [media type](https://developer.github.com/enterprise/2.21/v3/media/) to get the raw contents.
      operationId: gitignore/get-template
      tags:
      - gitignore
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gitignore/#get-a-gitignore-template
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gitignore-template"
              examples:
                default:
                  "$ref": "#/components/examples/gitignore-template"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: gitignore
        subcategory: 
  "/installation/repositories":
    get:
      summary: List repositories accessible to the app installation
      description: |-
        List repositories that an app installation can access.

        You must use an [installation access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/list-repos-accessible-to-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#list-repositories-accessible-to-the-app-installation
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/repository"
                  repository_selection:
                    type: string
                    example: selected
              examples:
                default:
                  "$ref": "#/components/examples/repository-paginated-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        - required: false
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: apps
        subcategory: installations
  "/installation/token":
    delete:
      summary: Revoke an installation access token
      description: |-
        Revokes the installation token you're using to authenticate as an installation and access this endpoint.

        Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "[Create an installation access token for an app](https://developer.github.com/enterprise/2.21/v3/apps/#create-an-installation-access-token-for-an-app)" endpoint.

        You must use an [installation access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/revoke-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#revoke-an-installation-access-token
      parameters: []
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: apps
        subcategory: installations
  "/issues":
    get:
      summary: List issues assigned to the authenticated user
      description: |-
        List issues assigned to the authenticated user across all visible repositories including owned repositories, member
        repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not
        necessarily assigned to you. See the [Parameters table](https://developer.github.com/enterprise/2.21/v3/issues/#parameters) for more
        information.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#list-issues-assigned-to-the-authenticated-user
      parameters:
      - name: filter
        description: "Indicates which sorts of issues to return. Can be one of:  \n\\*
          `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you
          \ \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're
          subscribed to updates for  \n\\* `all`: All issues the authenticated user
          can see, regardless of participation or creation"
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return. Can be either `open`,
          `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by. Can be either `created`, `updated`,
          `comments`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - name: collab
        in: query
        required: false
        schema:
          type: boolean
      - name: orgs
        in: query
        required: false
        schema:
          type: boolean
      - name: owned
        in: query
        required: false
        schema:
          type: boolean
      - name: pulls
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
  "/licenses":
    get:
      summary: Get all commonly used licenses
      description: ''
      tags:
      - licenses
      operationId: licenses/get-all-commonly-used
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/licenses/#get-all-commonly-used-licenses
      parameters:
      - name: featured
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per_page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/license-simple"
              examples:
                default:
                  "$ref": "#/components/examples/license-simple-items"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: licenses
        subcategory: 
  "/licenses/{license}":
    get:
      summary: Get a license
      description: ''
      tags:
      - licenses
      operationId: licenses/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/licenses/#get-a-license
      parameters:
      - name: license
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/license"
              examples:
                default:
                  "$ref": "#/components/examples/license"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: licenses
        subcategory: 
  "/markdown":
    post:
      summary: Render a Markdown document
      description: ''
      operationId: markdown/render
      tags:
      - markdown
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/markdown/#render-a-markdown-document
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  description: The Markdown text to render in HTML.
                  type: string
                mode:
                  description: The rendering mode.
                  enum:
                  - markdown
                  - gfm
                  default: markdown
                  example: markdown
                  type: string
                context:
                  description: The repository context to use when creating references
                    in `gfm` mode.
                  type: string
              required:
              - text
              type: object
      responses:
        '200':
          description: response
          headers:
            Content-Type:
              "$ref": "#/components/headers/content-type"
            Content-Length:
              example: '279'
              schema:
                type: string
            X-CommonMarker-Version:
              "$ref": "#/components/headers/x-common-marker-version"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: markdown
        subcategory: 
  "/markdown/raw":
    post:
      summary: Render a Markdown document in raw mode
      description: You must send Markdown as plain text (using a `Content-Type` header
        of `text/plain` or `text/x-markdown`) to this endpoint, rather than using
        JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/)
        is not supported and Markdown will be rendered in plain format like a README.md
        file. Markdown content must be 400 KB or less.
      operationId: markdown/render-raw
      tags:
      - markdown
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/markdown/#render-a-markdown-document-in-raw-mode
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/x-markdown:
            schema:
              type: string
      responses:
        '200':
          description: response
          headers:
            X-CommonMarker-Version:
              "$ref": "#/components/headers/x-common-marker-version"
          content:
            text/html:
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: markdown
        subcategory: 
  "/meta":
    get:
      summary: Get GitHub Enterprise Server meta information
      description: This endpoint provides a list of GitHub's IP addresses. For more
        information, see "[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/)."
      tags:
      - meta
      operationId: meta/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/meta/#get-github-meta-information
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/api-overview"
              examples:
                default:
                  "$ref": "#/components/examples/api-overview"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: meta
        subcategory: 
  "/networks/{owner}/{repo}/events":
    get:
      summary: List public events for a network of repositories
      description: ''
      tags:
      - activity
      operationId: activity/list-public-events-for-repo-network
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-public-events-for-a-network-of-repositories
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '304':
          "$ref": "#/components/responses/not_modified"
        '301':
          "$ref": "#/components/responses/moved_permanently"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/notifications":
    get:
      summary: List notifications for the authenticated user
      description: List all notifications for the current user, sorted by most recently
        updated.
      tags:
      - activity
      operationId: activity/list-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#list-notifications-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/all"
      - "$ref": "#/components/parameters/participating"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/before"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
    put:
      summary: Mark notifications as read
      description: Marks all notifications as "read" removes it from the [default
        view on GitHub Enterprise Server](https://github.com/notifications). If the
        number of notifications is too large to complete in one request, you will
        receive a `202 Accepted` status and GitHub Enterprise Server will run an asynchronous
        process to mark notifications as "read." To check whether any "unread" notifications
        remain, you can use the [List notifications for the authenticated user](https://developer.github.com/enterprise/2.21/v3/activity/notifications/#list-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
      - activity
      operationId: activity/mark-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#mark-notifications-as-read
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  description: Describes the last point that notifications were checked.
                  type: string
                  format: date-time
                read:
                  description: Whether the notification has been read.
                  type: boolean
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '205':
          description: response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
  "/notifications/threads/{thread_id}":
    get:
      summary: Get a thread
      description: ''
      tags:
      - activity
      operationId: activity/get-thread
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#get-a-thread
      parameters:
      - "$ref": "#/components/parameters/thread_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
    patch:
      summary: Mark a thread as read
      description: ''
      tags:
      - activity
      operationId: activity/mark-thread-as-read
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#mark-a-thread-as-read
      parameters:
      - "$ref": "#/components/parameters/thread_id"
      responses:
        '205':
          description: response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
  "/notifications/threads/{thread_id}/subscription":
    get:
      summary: Get a thread subscription for the authenticated user
      description: |-
        This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://developer.github.com/enterprise/2.21/v3/activity/watching/#get-a-repository-subscription).

        Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.
      tags:
      - activity
      operationId: activity/get-thread-subscription-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#get-a-thread-subscription-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/thread_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/thread-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/thread-subscription"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
    put:
      summary: Set a thread subscription
      description: |-
        If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.

        You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.

        Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://developer.github.com/enterprise/2.21/v3/activity/notifications/#delete-a-thread-subscription) endpoint.
      tags:
      - activity
      operationId: activity/set-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#set-a-thread-subscription
      parameters:
      - "$ref": "#/components/parameters/thread_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ignored:
                  description: Whether to block all notifications from a thread.
                  default: false
                  type: boolean
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/thread-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/thread-subscription"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
    delete:
      summary: Delete a thread subscription
      description: Mutes all future notifications for a conversation until you comment
        on the thread or get an **@mention**. If you are watching the repository of
        the thread, you will still receive notifications. To ignore future notifications
        for a repository you are watching, use the [Set a thread subscription](https://developer.github.com/enterprise/2.21/v3/activity/notifications/#set-a-thread-subscription)
        endpoint and set `ignore` to `true`.
      tags:
      - activity
      operationId: activity/delete-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#delete-a-thread-subscription
      parameters:
      - "$ref": "#/components/parameters/thread_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
  "/octocat":
    get:
      summary: Get Octocat
      description: Get the octocat as ASCII art
      tags:
      - meta
      operationId: meta/get-octocat
      parameters:
      - name: s
        in: query
        description: The words to show in Octocat's speech bubble
        schema:
          type: string
        required: false
      responses:
        '200':
          description: response
          content:
            application/octocat-stream:
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: meta
  "/organizations":
    get:
      summary: List organizations
      description: |-
        Lists all organizations, in the order that they were created on GitHub Enterprise Server.

        **Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/enterprise/2.21/v3/#link-header) to get the URL for the next page of organizations.
      tags:
      - orgs
      operationId: orgs/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#list-organizations
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              example: <https://api.github.com/organizations?since=135>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: 
  "/orgs/{org}":
    get:
      summary: Get an organization
      description: |-
        To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).

        GitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See "[Authenticating with GitHub Apps](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/)" for details. For an example response, see "[Response with GitHub Enterprise Server plan information](https://developer.github.com/enterprise/2.21/v3/orgs/#response-with-github-plan-information)."
      tags:
      - orgs
      operationId: orgs/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#get-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-full"
              examples:
                default-response:
                  "$ref": "#/components/examples/organization-full-default-response"
                response-with-git-hub-plan-information:
                  "$ref": "#/components/examples/organization-full-response-with-git-hub-plan-information"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: surtur
          note: |-
            New repository creation permissions are available to preview. You can now use `members_can_create_public_repositories`, `members_can_create_private_repositories`, and `members_can_create_internal_repositories`. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.

            To access these new parameters during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.surtur-preview+json
            ```
        category: orgs
        subcategory: 
    patch:
      summary: Update an organization
      description: |-
        **Parameter Deprecation Notice:** GitHub Enterprise Server will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-12-03-internal-visibility-changes).

        Enables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.
      tags:
      - orgs
      operationId: orgs/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#update-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                billing_email:
                  type: string
                  description: Billing email address. This address is not publicized.
                company:
                  type: string
                  description: The company name.
                email:
                  type: string
                  description: The publicly visible email address.
                twitter_username:
                  type: string
                  description: The Twitter username of the company.
                location:
                  type: string
                  description: The location.
                name:
                  type: string
                  description: The shorthand name of the company.
                description:
                  type: string
                  description: The description of the company.
                has_organization_projects:
                  type: boolean
                  description: Toggles whether an organization can use organization
                    projects.
                has_repository_projects:
                  type: boolean
                  description: Toggles whether repositories that belong to the organization
                    can use repository projects.
                default_repository_permission:
                  type: string
                  description: "Default permission level members have for organization
                    repositories:  \n\\* `read` - can pull, but not push to or administer
                    this repository.  \n\\* `write` - can pull and push, but not administer
                    this repository.  \n\\* `admin` - can pull, push, and administer
                    this repository.  \n\\* `none` - no permissions granted by default."
                  enum:
                  - read
                  - write
                  - admin
                  - none
                  default: read
                members_can_create_repositories:
                  type: boolean
                  description: "Toggles the ability of non-admin organization members
                    to create repositories. Can be one of:  \n\\* `true` - all organization
                    members can create repositories.  \n\\* `false` - only organization
                    owners can create repositories.  \nDefault: `true`  \n**Note:**
                    A parameter can override this parameter. See `members_allowed_repository_creation_type`
                    in this table for details. **Note:** A parameter can override
                    this parameter. See `members_allowed_repository_creation_type`
                    in this table for details."
                  default: true
                members_can_create_internal_repositories:
                  type: boolean
                  description: "Toggles whether organization members can create internal
                    repositories, which are visible to all enterprise members. You
                    can only allow members to create internal repositories if your
                    organization is associated with an enterprise account using GitHub
                    Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one
                    of:  \n\\* `true` - all organization members can create internal
                    repositories.  \n\\* `false` - only organization owners can create
                    internal repositories.  \nDefault: `true`. For more information,
                    see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\"
                    in the GitHub Help documentation."
                members_can_create_private_repositories:
                  type: boolean
                  description: "Toggles whether organization members can create private
                    repositories, which are visible to organization members with permission.
                    Can be one of:  \n\\* `true` - all organization members can create
                    private repositories.  \n\\* `false` - only organization owners
                    can create private repositories.  \nDefault: `true`. For more
                    information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\"
                    in the GitHub Help documentation."
                members_can_create_public_repositories:
                  type: boolean
                  description: "Toggles whether organization members can create public
                    repositories, which are visible to anyone. Can be one of:  \n\\*
                    `true` - all organization members can create public repositories.
                    \ \n\\* `false` - only organization owners can create public repositories.
                    \ \nDefault: `true`. For more information, see \"[Restricting
                    repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\"
                    in the GitHub Help documentation."
                members_allowed_repository_creation_type:
                  type: string
                  description: "Specifies which types of repositories non-admin organization
                    members can create. Can be one of:  \n\\* `all` - all organization
                    members can create public and private repositories.  \n\\* `private`
                    - members can create private repositories. This option is only
                    available to repositories that are part of an organization on
                    GitHub Enterprise Cloud.  \n\\* `none` - only admin members can
                    create repositories.  \n**Note:** This parameter is deprecated
                    and will be removed in the future. Its return value ignores internal
                    repositories. Using this parameter overrides values set in `members_can_create_repositories`.
                    See [this note](https://developer.github.com/enterprise/2.21/v3/orgs/#members_can_create_repositories)
                    for details."
                  enum:
                  - all
                  - private
                  - none
                members_can_create_pages:
                  type: boolean
                  description: "Toggles whether organization members can create GitHub
                    Pages sites. Can be one of:  \n\\* `true` - all organization members
                    can create GitHub Pages sites.  \n\\* `false` - no organization
                    members can create GitHub Pages sites. Existing published sites
                    will not be impacted.  \nDefault: `true`. "
                blog:
                  type: string
                  example: '"http://github.blog"'
            example:
              billing_email: mona@github.com
              company: GitHub
              email: mona@github.com
              twitter_username: github
              location: San Francisco
              name: github
              description: GitHub, the company.
              default_repository_permission: read
              members_can_create_repositories: true
              members_allowed_repository_creation_type: all
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-full"
              examples:
                default:
                  "$ref": "#/components/examples/organization-full"
        '422':
          description: Validation Failed
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/validation-error"
                - "$ref": "#/components/schemas/validation-error-simple"
        '409':
          "$ref": "#/components/responses/conflict"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: surtur
          note: |-
            New repository creation permissions are available to preview. You can now use `members_can_create_public_repositories`, `members_can_create_private_repositories`, and `members_can_create_internal_repositories`. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.

            To access these new parameters during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.surtur-preview+json
            ```
        category: orgs
        subcategory: 
  "/orgs/{org}/events":
    get:
      summary: List public organization events
      description: ''
      tags:
      - activity
      operationId: activity/list-public-org-events
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-public-organization-events
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/orgs/{org}/hooks":
    get:
      summary: List organization webhooks
      description: ''
      tags:
      - orgs
      operationId: orgs/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#list-organization-webhooks
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
    post:
      summary: Create an organization webhook
      description: 'Here''s how you can create a hook that posts payloads in JSON
        format:'
      tags:
      - orgs
      operationId: orgs/create-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#create-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Must be passed as "web".
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                    [These are defined below](https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#create-hook-config-params).
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                    username:
                      type: string
                      example: '"kdaigle"'
                    password:
                      type: string
                      example: '"password"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
              required:
              - name
              - config
            example:
              name: web
              active: true
              events:
              - push
              - pull_request
              config:
                url: http://example.com/webhook
                content_type: json
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook"
          headers:
            Location:
              example: https://api.github.com/orgs/octocat/hooks/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
  "/orgs/{org}/hooks/{hook_id}":
    get:
      summary: Get an organization webhook
      description: ''
      tags:
      - orgs
      operationId: orgs/get-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#get-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
    patch:
      summary: Update an organization webhook
      description: ''
      tags:
      - orgs
      operationId: orgs/update-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#update-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                    [These are defined below](https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#update-hook-config-params).
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
                name:
                  type: string
                  example: '"web"'
            example:
              active: true
              events:
              - pull_request
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook-2"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
    delete:
      summary: Delete an organization webhook
      description: ''
      tags:
      - orgs
      operationId: orgs/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#delete-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
  "/orgs/{org}/hooks/{hook_id}/pings":
    post:
      summary: Ping an organization webhook
      description: This will trigger a [ping event](https://developer.github.com/enterprise/2.21/webhooks/#ping-event)
        to be sent to the hook.
      tags:
      - orgs
      operationId: orgs/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/hooks/#ping-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: hooks
  "/orgs/{org}/installation":
    get:
      summary: Get an organization installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the organization's installation information.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-org-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-an-organization-installation-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/orgs/{org}/installations":
    get:
      summary: List app installations for an organization
      description: Lists all GitHub Apps in an organization. The installation count
        includes all GitHub Apps installed on repositories in the organization. You
        must be an organization owner with `admin:read` scope to use this endpoint.
      tags:
      - orgs
      operationId: orgs/list-app-installations
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#list-app-installations-for-an-organization
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: orgs
  "/orgs/{org}/issues":
    get:
      summary: List organization issues assigned to the authenticated user
      description: |-
        List issues in an organization assigned to the authenticated user.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#list-organization-issues-assigned-to-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: "Indicates which sorts of issues to return. Can be one of:  \n\\*
          `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you
          \ \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're
          subscribed to updates for  \n\\* `all`: All issues the authenticated user
          can see, regardless of participation or creation"
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return. Can be either `open`,
          `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by. Can be either `created`, `updated`,
          `comments`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
  "/orgs/{org}/members":
    get:
      summary: List organization members
      description: List all users who are members of an organization. If the authenticated
        user is also a member of this organization then both concealed and public
        members will be returned.
      tags:
      - orgs
      operationId: orgs/list-members
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#list-organization-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled`
          - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication)
          enabled. Available for organization owners.  \n\\* `all` - All members the
          authenticated user can see."
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - all
          default: all
      - name: role
        description: "Filter members returned by their role. Can be one of:  \n\\*
          `all` - All members of the organization, regardless of role.  \n\\* `admin`
          - Organization owners.  \n\\* `member` - Non-owner organization members."
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - admin
          - member
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '302':
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
  "/orgs/{org}/members/{username}":
    get:
      summary: Check organization membership for a user
      description: Check if a user is, publicly or privately, a member of the organization.
      tags:
      - orgs
      operationId: orgs/check-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#check-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if requester is an organization member and user is
            a member
        '302':
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members/pezra
              schema:
                type: string
        '404':
          description: Response if requester is an organization member and user is
            not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
    delete:
      summary: Remove an organization member
      description: Removing a user from this list will remove them from all teams
        and they will no longer have any access to the organization's repositories.
      tags:
      - orgs
      operationId: orgs/remove-member
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#remove-an-organization-member
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
  "/orgs/{org}/memberships/{username}":
    get:
      summary: Get organization membership for a user
      description: In order to get a user's membership with an organization, the authenticated
        user must be an organization member.
      tags:
      - orgs
      operationId: orgs/get-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#get-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                response-if-user-has-an-active-admin-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization"
                response-if-user-has-an-active-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-has-an-active-membership-with-organization"
                response-if-user-has-a-pending-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-has-a-pending-membership-with-organization"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
    put:
      summary: Set organization membership for a user
      description: "Only authenticated organization owners can add a member to the
        organization or update the member's role.\n\n*   If the authenticated user
        is _adding_ a member to the organization, the invited user will receive an
        email inviting them to the organization. The user's [membership status](https://developer.github.com/enterprise/2.21/v3/orgs/members/#get-organization-membership-for-a-user)
        will be `pending` until they accept the invitation.\n    \n*   Authenticated
        users can _update_ a user's membership by passing the `role` parameter. If
        the authenticated user changes a member's role to `admin`, the affected user
        will receive an email notifying them that they've been made an organization
        owner. If the authenticated user changes an owner's role to `member`, no email
        will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user
        is limited to 50 organization invitations per 24 hour period. If the organization
        is more than one month old or on a paid plan, the limit is 500 invitations
        per 24 hour period."
      tags:
      - orgs
      operationId: orgs/set-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#set-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "The role to give the user in the organization. Can
                    be one of:  \n\\* `admin` - The user will become an owner of the
                    organization.  \n\\* `member` - The user will become a non-owner
                    member of the organization."
                  enum:
                  - admin
                  - member
                  default: member
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                response-if-user-was-previously-unaffiliated-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-was-previously-unaffiliated-with-organization"
                response-if-user-already-had-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-already-had-membership-with-organization"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
    delete:
      summary: Remove organization membership for a user
      description: |-
        In order to remove a user's membership with an organization, the authenticated user must be an organization owner.

        If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.
      tags:
      - orgs
      operationId: orgs/remove-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#remove-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
  "/orgs/{org}/outside_collaborators":
    get:
      summary: List outside collaborators for an organization
      description: List all users who are outside collaborators of an organization.
      tags:
      - orgs
      operationId: orgs/list-outside-collaborators
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#list-outside-collaborators-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: "Filter the list of outside collaborators. Can be one of:  \n\\*
          `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication)
          enabled.  \n\\* `all`: All outside collaborators."
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - all
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: outside-collaborators
  "/orgs/{org}/outside_collaborators/{username}":
    put:
      summary: Convert an organization member to outside collaborator
      description: When an organization member is converted to an outside collaborator,
        they'll only have access to the repositories that their current team membership
        allows. The user will no longer be a member of the organization. For more
        information, see "[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)".
      tags:
      - orgs
      operationId: orgs/convert-member-to-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#convert-an-organization-member-to-outside-collaborator
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '202':
          description: User is getting converted asynchronously
        '204':
          description: User was converted
        '403':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-user-is-the-last-owner-of-the-organization:
                  summary: Response if user is the last owner of the organization
                  value:
                    message: Cannot convert the last owner to an outside collaborator
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator
                response-if-user-is-not-a-member-of-the-organization:
                  summary: Response if user is not a member of the organization
                  value:
                    message: "<user> is not a member of the <organization> organization."
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: outside-collaborators
    delete:
      summary: Remove outside collaborator from an organization
      description: Removing a user from this list will remove them from all the organization's
        repositories.
      tags:
      - orgs
      operationId: orgs/remove-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#remove-outside-collaborator-from-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '422':
          description: Response if user is a member of the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-user-is-a-member-of-the-organization:
                  value:
                    message: You cannot specify an organization member to remove as
                      an outside collaborator.
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/orgs/outside_collaborators/#remove-outside-collaborator
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: outside-collaborators
  "/orgs/{org}/pre-receive-hooks":
    get:
      summary: List pre-receive hooks for an organization
      description: List all pre-receive hooks that are enabled or testing for this
        organization as well as any disabled hooks that can be configured at the organization
        level. Globally disabled pre-receive hooks that do not allow downstream configuration
        are not listed.
      operationId: enterprise-admin/list-pre-receive-hooks-for-org
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/org_pre_receive_hooks/#list-pre-receive-hooks-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/org-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-pre-receive-hook-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
  "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}":
    get:
      summary: Get a pre-receive hook for an organization
      description: ''
      operationId: enterprise-admin/get-pre-receive-hook-for-org
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/org_pre_receive_hooks/#get-a-pre-receive-hook-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-pre-receive-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
    patch:
      summary: Update pre-receive hook enforcement for an organization
      description: For pre-receive hooks which are allowed to be configured at the
        org level, you can set `enforcement` and `allow_downstream_configuration`
      operationId: enterprise-admin/update-pre-receive-hook-enforcement-for-org
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/org_pre_receive_hooks/#update-pre-receive-hook-enforcement-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-pre-receive-hook-2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enforcement:
                  description: The state of enforcement for the hook on this repository.
                  type: string
                allow_downstream_configuration:
                  description: Whether repositories can override enforcement.
                  type: boolean
            example:
              enforcement: enabled
              allow_downstream_configuration: false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
    delete:
      summary: Remove pre-receive hook enforcement for an organization
      description: Removes any overrides for this hook at the org level for this org.
      operationId: enterprise-admin/remove-pre-receive-hook-enforcement-for-org
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/org_pre_receive_hooks/#remove-pre-receive-hook-enforcement-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-pre-receive-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
  "/orgs/{org}/projects":
    get:
      summary: List organization projects
      description: Lists the projects in an organization. Returns a `404 Not Found`
        status if projects are disabled in the organization. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/list-for-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#list-organization-projects
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: state
        description: Indicates the state of the projects to return. Can be either
          `open`, `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
    post:
      summary: Create an organization project
      description: Creates an organization project board. Returns a `404 Not Found`
        status if projects are disabled in the organization. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/create-for-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#create-an-organization-project
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
              - name
            example:
              name: Organization Roadmap
              body: High-level roadmap for the upcoming year.
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-2"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
  "/orgs/{org}/public_members":
    get:
      summary: List public organization members
      description: Members of an organization can choose to have their membership
        publicized or not.
      tags:
      - orgs
      operationId: orgs/list-public-members
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#list-public-organization-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
  "/orgs/{org}/public_members/{username}":
    get:
      summary: Check public organization membership for a user
      description: ''
      tags:
      - orgs
      operationId: orgs/check-public-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#check-public-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if user is a public member
        '404':
          description: Response if user is not a public member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: members
    put:
      summary: Set public organization membership for the authenticated user
      description: |-
        The user can publicize their own membership. (A user cannot publicize the membership for another user.)

        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - orgs
      operationId: orgs/set-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#set-public-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: members
    delete:
      summary: Remove public organization membership for the authenticated user
      description: ''
      tags:
      - orgs
      operationId: orgs/remove-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#remove-public-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: members
  "/orgs/{org}/repos":
    get:
      summary: List organization repositories
      description: Lists repositories for the specified organization.
      tags:
      - repos
      operationId: repos/list-for-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-organization-repositories
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: type
        description: 'Specifies the types of repositories you want returned. Can be
          one of `all`, `public`, `private`, `forks`, `sources`, `member`, `internal`.
          Default: `all`. If your organization is associated with an enterprise account
          using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type`
          can also be `internal`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          - forks
          - sources
          - member
          - internal
      - name: sort
        description: Can be one of `created`, `updated`, `pushed`, `full_name`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: created
      - name: direction
        description: 'Can be one of `asc` or `desc`. Default: when using `full_name`:
          `asc`, otherwise `desc`'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        - required: false
          name: baptiste
          note: |-
            The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://developer.github.com/v3/repos/#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.baptiste-preview+json
            ```
        category: repos
        subcategory: 
    post:
      summary: Create an organization repository
      description: |-
        Creates a new repository in the specified organization. The authenticated user must be a member of the organization.

        **OAuth scope requirements**

        When using [OAuth](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository
        *   `repo` scope to create a private repository
      tags:
      - repos
      operationId: repos/create-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#create-an-organization-repository
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: Either `true` to create a private repository or `false`
                    to create a public one.
                  default: false
                visibility:
                  type: string
                  description: "Can be `public` or `private`. If your organization
                    is associated with an enterprise account using GitHub Enterprise
                    Cloud or GitHub Enterprise Server 2.20+, `visibility` can also
                    be `internal`. For more information, see \"[Creating an internal
                    repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\"
                    in the GitHub Help documentation.  \nThe `visibility` parameter
                    overrides the `private` parameter when you use both parameters
                    with the `nebula-preview` preview header."
                  enum:
                  - public
                  - private
                  - visibility
                  - internal
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository
                    or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository
                    or `false` to disable them. **Note:** If you're creating a repository
                    in an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns an
                    error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository
                    or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template
                    repository or `false` to prevent it.
                  default: false
                team_id:
                  type: integer
                  description: The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in an
                    organization.
                auto_init:
                  type: boolean
                  description: Pass `true` to create an initial commit with empty
                    README.
                  default: false
                gitignore_template:
                  type: string
                  description: Desired language or platform [.gitignore template](https://github.com/github/gitignore)
                    to apply. Use the name of the template without the extension.
                    For example, "Haskell".
                license_template:
                  type: string
                  description: Choose an [open source license template](https://choosealicense.com/)
                    that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type)
                    as the `license_template` string. For example, "mit" or "mpl-2.0".
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests,
                    or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a
                    merge commit, or `false` to prevent merging pull requests with
                    merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests,
                    or `false` to prevent rebase-merging.
                  default: true
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head
                    branches when pull requests are merged, or `false` to prevent
                    automatic deletion.
                  default: false
              required:
              - name
            example:
              name: Hello-World
              description: This is your first repository
              homepage: https://github.com
              private: false
              has_issues: true
              has_projects: true
              has_wiki: true
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        - required: false
          name: baptiste
          note: |-
            The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://developer.github.com/v3/repos/#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.baptiste-preview+json
            ```
        category: repos
        subcategory: 
  "/orgs/{org}/teams":
    get:
      summary: List teams
      description: Lists all teams in an organization that are visible to the authenticated
        user.
      tags:
      - teams
      operationId: teams/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
    post:
      summary: Create a team
      description: |-
        To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see "[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization)."

        When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see "[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)".
      tags:
      - teams
      operationId: teams/create
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#create-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                maintainers:
                  type: array
                  description: List GitHub IDs for organization members who will become
                    team maintainers.
                  items:
                    type: string
                repo_names:
                  type: array
                  description: The full name (e.g., "organization-name/repository-name")
                    of repositories to add the team to.
                  items:
                    type: string
                privacy:
                  type: string
                  description: "The level of privacy this team should have. The options
                    are:  \n**For a non-nested team:**  \n\\* `secret` - only visible
                    to organization owners and members of this team.  \n\\* `closed`
                    - visible to all members of this organization.  \nDefault: `secret`
                    \ \n**For a parent or child team:**  \n\\* `closed` - visible
                    to all members of this organization.  \nDefault for child team:
                    `closed`"
                  enum:
                  - secret
                  - closed
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified. Can be
                    one of:  \n\\* `pull` - team members can pull, but not push to
                    or administer newly-added repositories.  \n\\* `push` - team members
                    can pull and push, but not administer newly-added repositories.
                    \ \n\\* `admin` - team members can pull, push and administer newly-added
                    repositories."
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
              required:
              - name
            example:
              name: Justice League
              description: A great team
              permission: admin
              privacy: closed
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}":
    get:
      summary: Get a team by name
      description: |-
        Gets a team using the team's `slug`. GitHub Enterprise Server generates the `slug` from the team `name`.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/get-by-name
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#get-a-team-by-name
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
    patch:
      summary: Update a team
      description: |-
        To edit a team, the authenticated user must either be an organization owner or a team maintainer.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/update-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#update-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing
                    teams without specifying this parameter leaves `privacy` intact.
                    When a team is nested, the `privacy` for parent teams cannot be
                    `secret`. The options are:  \n**For a non-nested team:**  \n\\*
                    `secret` - only visible to organization owners and members of
                    this team.  \n\\* `closed` - visible to all members of this organization.
                    \ \n**For a parent or child team:**  \n\\* `closed` - visible
                    to all members of this organization."
                  enum:
                  - secret
                  - closed
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified. Can be
                    one of:  \n\\* `pull` - team members can pull, but not push to
                    or administer newly-added repositories.  \n\\* `push` - team members
                    can pull and push, but not administer newly-added repositories.
                    \ \n\\* `admin` - team members can pull, push and administer newly-added
                    repositories."
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
              required:
              - name
            example:
              name: new team name
              description: new team description
              privacy: closed
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
    delete:
      summary: Delete a team
      description: |-
        To delete a team, the authenticated user must be an organization owner or team maintainer.

        If you are an organization owner, deleting a parent team will delete all of its child teams as well.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/delete-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#delete-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/discussions":
    get:
      summary: List discussions
      description: |-
        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.
      tags:
      - teams
      operationId: teams/list-discussions-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#list-discussions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussions
    post:
      summary: Create a discussion
      description: |-
        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.
      tags:
      - teams
      operationId: teams/create-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#create-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to all
                    members of the organization. Set to `true` to create a private
                    post.
                  default: false
              required:
              - title
              - body
            example:
              title: Our first team post
              body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}":
    get:
      summary: Get a discussion
      description: |-
        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/get-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#get-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussions
    patch:
      summary: Update a discussion
      description: |-
        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/update-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#update-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            example:
              title: Welcome to our first team post
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussions
    delete:
      summary: Delete a discussion
      description: |-
        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/delete-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#delete-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: discussions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments":
    get:
      summary: List discussion comments
      description: |-
        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      tags:
      - teams
      operationId: teams/list-discussion-comments-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#list-discussion-comments
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussion-comments
    post:
      summary: Create a discussion comment
      description: |-
        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      tags:
      - teams
      operationId: teams/create-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#create-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            example:
              body: Do you like apples?
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussion-comments
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}":
    get:
      summary: Get a discussion comment
      description: |-
        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/get-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#get-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussion-comments
    patch:
      summary: Update a discussion comment
      description: |-
        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/update-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#update-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            example:
              body: Do you like pineapples?
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: teams
        subcategory: discussion-comments
    delete:
      summary: Delete a discussion comment
      description: |-
        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/delete-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#delete-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: discussion-comments
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      summary: List reactions for a team discussion comment
      description: |-
        List the reactions to a [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for a team discussion comment
      description: |-
        Create a reaction to a [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the team discussion comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}":
    delete:
      summary: Delete team discussion comment reaction
      description: |-
        **Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.

        Delete a reaction to a [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-team-discussion-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions":
    get:
      summary: List reactions for a team discussion
      description: |-
        List the reactions to a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for a team discussion
      description: |-
        Create a reaction to a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the team discussion.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}":
    delete:
      summary: Delete team discussion reaction
      description: |-
        **Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.

        Delete a reaction to a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-team-discussion-reaction
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/members":
    get:
      summary: List team members
      description: |-
        Team members will include the members of child teams.

        To list members in a team, the team must be visible to the authenticated user.
      tags:
      - teams
      operationId: teams/list-members-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#list-team-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - name: role
        description: "Filters members returned by their role in the team. Can be one
          of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` -
          team maintainers.  \n\\* `all` - all members of the team."
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/memberships/{username}":
    get:
      summary: Get team membership for a user
      description: |-
        Team members will include the members of child teams.

        To get a user's membership with a team, the team must be visible to the authenticated user.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.

        **Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://developer.github.com/enterprise/2.21/v3/teams/#create-a-team).
      tags:
      - teams
      operationId: teams/get-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#get-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-user-has-an-active-membership-with-team:
                  "$ref": "#/components/examples/team-membership-response-if-user-has-an-active-membership-with-team"
                response-if-user-is-a-team-maintainer:
                  "$ref": "#/components/examples/team-membership-response-if-user-is-a-team-maintainer"
                response-if-user-has-a-pending-membership-with-team:
                  "$ref": "#/components/examples/team-membership-response-if-user-has-a-pending-membership-with-team"
        '404':
          description: Response if user has no team membership
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: members
    put:
      summary: Add or update team membership for a user
      description: |-
        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        An organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.

        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#add-or-update-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "The role that this user should have in the team. Can
                    be one of:  \n\\* `member` - a normal member of the team.  \n\\*
                    `maintainer` - a team maintainer. Able to add/remove other team
                    members, promote other team members to team maintainer, and edit
                    the team's name and description."
                  enum:
                  - member
                  - maintainer
                  default: member
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-users-membership-with-team-is-now-active:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-active"
                response-if-users-membership-with-team-is-now-pending:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending"
        '403':
          description: Response if team synchronization is set up
        '422':
          description: Response if you attempt to add an organization to a team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        field:
                          type: string
                        resource:
                          type: string
              examples:
                response-if-you-attempt-to-add-an-organization-to-a-team:
                  value:
                    message: Cannot add an organization as a member.
                    errors:
                    - code: org
                      field: user
                      resource: TeamMember
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: members
    delete:
      summary: Remove team membership for a user
      description: |-
        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
      - teams
      operationId: teams/remove-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#remove-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '403':
          description: Response if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/projects":
    get:
      summary: List team projects
      description: |-
        Lists the organization projects for a team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.
      tags:
      - teams
      operationId: teams/list-projects-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-team-projects
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}":
    get:
      summary: Check team permissions for a project
      description: |-
        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/check-permissions-for-project-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-project
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project"
        '404':
          description: Response if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: teams
        subcategory: 
    put:
      summary: Add or update team project permissions
      description: |-
        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-project-permissions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: "The permission to grant to the team for this project.
                    Can be one of:  \n\\* `read` - team members can read, but not
                    write to or administer this project.  \n\\* `write` - team members
                    can read and write, but not administer this project.  \n\\* `admin`
                    - team members can read, write and administer this project.  \nDefault:
                    the team's `permission` attribute will be used to determine what
                    permission to grant the team on this project. Note that, if you
                    choose not to pass any parameters, you'll need to set `Content-Length`
                    to zero when calling out to this endpoint. For more information,
                    see \"[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs).\""
                  enum:
                  - read
                  - write
                  - admin
      responses:
        '204':
          description: Empty response
        '403':
          description: Response if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-project-permissions
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: teams
        subcategory: 
    delete:
      summary: Remove a project from a team
      description: |-
        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/remove-project-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-project-from-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/repos":
    get:
      summary: List team repositories
      description: |-
        Lists a team's repositories visible to the authenticated user.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.
      tags:
      - teams
      operationId: teams/list-repos-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-team-repositories
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}":
    get:
      summary: Check team permissions for a repository
      description: |-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.

        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/enterprise/2.21/v3/media/) via the `application/vnd.github.v3.repository+json` accept header.

        If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Alternative response with repository permissions
          content:
            application/vnd.github.v3.repository+json:
              schema:
                "$ref": "#/components/schemas/team-repository"
              examples:
                alternative-response-with-repository-permissions:
                  "$ref": "#/components/examples/team-repository-alternative-response-with-repository-permissions"
        '204':
          description: Response if team has permission for the repository
        '404':
          description: Response if team does not have permission for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
    put:
      summary: Add or update team repository permissions
      description: |-
        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.

        For more information about the permission levels, see "[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-repository-permissions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: "The permission to grant the team on this repository.
                    Can be one of:  \n\\* `pull` - team members can pull, but not
                    push to or administer this repository.  \n\\* `push` - team members
                    can pull and push, but not administer this repository.  \n\\*
                    `admin` - team members can pull, push and administer this repository.
                    \ \n\\* `maintain` - team members can manage the repository without
                    access to sensitive or destructive actions. Recommended for project
                    managers. Only applies to repositories owned by organizations.
                    \ \n\\* `triage` - team members can proactively manage issues
                    and pull requests without write access. Recommended for contributors
                    who triage a repository. Only applies to repositories owned by
                    organizations.  \n  \nIf no permission is specified, the team's
                    `permission` attribute will be used to determine what permission
                    to grant the team on this repository."
                  enum:
                  - pull
                  - push
                  - admin
                  - maintain
                  - triage
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
    delete:
      summary: Remove a repository from a team
      description: |-
        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
      - teams
      operationId: teams/remove-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-repository-from-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/orgs/{org}/teams/{team_slug}/teams":
    get:
      summary: List child teams
      description: |-
        Lists the child teams of the team specified by `{team_slug}`.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.
      tags:
      - teams
      operationId: teams/list-child-in-org
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-child-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team_slug"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                response-if-child-teams-exist:
                  "$ref": "#/components/examples/team-items-response-if-child-teams-exist"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: teams
        subcategory: 
  "/projects/columns/cards/{card_id}":
    get:
      summary: Get a project card
      description: ''
      tags:
      - projects
      operationId: projects/get-card
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#get-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
    patch:
      summary: Update an existing project card
      description: ''
      tags:
      - projects
      operationId: projects/update-card
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#update-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  description: The project card's note
                  example: Update all gems
                  type: string
                  nullable: true
                archived:
                  description: Whether or not the card is archived
                  example: false
                  type: boolean
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
    delete:
      summary: Delete a project card
      description: ''
      tags:
      - projects
      operationId: projects/delete-card
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#delete-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
  "/projects/columns/cards/{card_id}/moves":
    post:
      summary: Move a project card
      description: ''
      tags:
      - projects
      operationId: projects/move-card
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#move-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                position:
                  description: The position of the card in a column
                  example: bottom
                  type: string
                  pattern: "^(?:top|bottom|after:\\d+)$"
                column_id:
                  description: The unique identifier of the column the card should
                    be moved to
                  example: 42
                  type: integer
              required:
              - position
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                        field:
                          type: string
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
  "/projects/columns/{column_id}":
    get:
      summary: Get a project column
      description: ''
      tags:
      - projects
      operationId: projects/get-column
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#get-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
    patch:
      summary: Update an existing project column
      description: ''
      tags:
      - projects
      operationId: projects/update-column
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#update-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
              - name
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
    delete:
      summary: Delete a project column
      description: ''
      tags:
      - projects
      operationId: projects/delete-column
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#delete-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
  "/projects/columns/{column_id}/cards":
    get:
      summary: List project cards
      description: ''
      tags:
      - projects
      operationId: projects/list-cards
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#list-project-cards
      parameters:
      - "$ref": "#/components/parameters/column_id"
      - name: archived_state
        description: Filters the project cards that are returned by the card's state.
          Can be one of `all`,`archived`, or `not_archived`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - archived
          - not_archived
          default: not_archived
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
    post:
      summary: Create a project card
      description: |-
        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.

        Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - projects
      operationId: projects/create-card
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/cards/#create-a-project-card
      parameters:
      - "$ref": "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  note:
                    description: The project card's note
                    example: Update all gems
                    type: string
                    nullable: true
                required:
                - note
              - type: object
                properties:
                  content_id:
                    description: The unique identifier of the content associated with
                      the card
                    example: 42
                    type: integer
                  content_type:
                    description: The piece of content associated with the card
                    example: PullRequest
                    type: string
                required:
                - content_id
                - content_type
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '422':
          description: Validation Failed
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/validation-error"
                - "$ref": "#/components/schemas/validation-error-simple"
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: cards
  "/projects/columns/{column_id}/moves":
    post:
      summary: Move a project column
      description: ''
      tags:
      - projects
      operationId: projects/move-column
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#move-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                position:
                  description: The position of the column in a project
                  example: last
                  type: string
                  pattern: "^(?:first|last|after:\\d+)$"
              required:
              - position
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
  "/projects/{project_id}":
    get:
      summary: Get a project
      description: Gets a project by its `id`. Returns a `404 Not Found` status if
        projects are disabled. If you do not have sufficient privileges to perform
        this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
      - projects
      operationId: projects/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#get-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
    patch:
      summary: Update a project
      description: Updates a project board's information. Returns a `404 Not Found`
        status if projects are disabled. If you do not have sufficient privileges
        to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      operationId: projects/update
      tags:
      - projects
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#update-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in
                    January
                  type: string
                  nullable: true
                state:
                  description: State of the project; either 'open' or 'closed'
                  example: open
                  type: string
                organization_permission:
                  description: The baseline permission that all organization members
                    have on this project
                  type: string
                  enum:
                  - read
                  - write
                  - admin
                  - none
                private:
                  description: Whether or not this project can be seen by everyone.
                  type: boolean
              type: object
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '404':
          description: Response if the authenticated user does not have access to
            the project
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
    delete:
      summary: Delete a project
      description: Deletes a project board. Returns a `404 Not Found` status if projects
        are disabled.
      operationId: projects/delete
      tags:
      - projects
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#delete-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Delete Success
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '410':
          "$ref": "#/components/responses/gone"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
  "/projects/{project_id}/collaborators":
    get:
      summary: List project collaborators
      description: Lists the collaborators for an organization project. For a project,
        the list of collaborators includes outside collaborators, organization members
        that are direct collaborators, organization members with access through team
        memberships, organization members with access through default organization
        permissions, and organization owners. You must be an organization owner or
        a project `admin` to list collaborators.
      tags:
      - projects
      operationId: projects/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/collaborators/#list-project-collaborators
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - name: affiliation
        description: "Filters the collaborators by their affiliation. Can be one of:
          \ \n\\* `outside`: Outside collaborators of a project that are not a member
          of the project's organization.  \n\\* `direct`: Collaborators with permissions
          to a project, regardless of organization membership status.  \n\\* `all`:
          All collaborators the authenticated user can see."
        in: query
        required: false
        schema:
          type: string
          enum:
          - outside
          - direct
          - all
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}":
    put:
      summary: Add project collaborator
      description: Adds a collaborator to an organization project and sets their permission
        level. You must be an organization owner or a project `admin` to add a collaborator.
      tags:
      - projects
      operationId: projects/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/collaborators/#add-project-collaborator
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  description: The permission to grant the collaborator.
                  enum:
                  - read
                  - write
                  - admin
                  default: write
                  example: write
                  type: string
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: collaborators
    delete:
      summary: Remove user as a collaborator
      description: Removes a collaborator from an organization project. You must be
        an organization owner or a project `admin` to remove a collaborator.
      tags:
      - projects
      operationId: projects/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/collaborators/#remove-project-collaborator
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}/permission":
    get:
      summary: Get project permission for a user
      description: 'Returns the collaborator''s permission level for an organization
        project. Possible values for the `permission` key: `admin`, `write`, `read`,
        `none`. You must be an organization owner or a project `admin` to review a
        user''s permission level.'
      tags:
      - projects
      operationId: projects/get-permission-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/collaborators/#get-project-permission-for-a-user
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-collaborator-permission"
              examples:
                default:
                  "$ref": "#/components/examples/repository-collaborator-permission"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/columns":
    get:
      summary: List project columns
      description: ''
      tags:
      - projects
      operationId: projects/list-columns
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#list-project-columns
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
    post:
      summary: Create a project column
      description: ''
      tags:
      - projects
      operationId: projects/create-column
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/columns/#create-a-project-column
      parameters:
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
              - name
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              example:
                url: https://api.github.com/projects/columns/367
                project_url: https://api.github.com/projects/120
                cards_url: https://api.github.com/projects/columns/367/cards
                id: 367
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                name: To Do
                created_at: '2016-09-05T14:18:44Z'
                updated_at: '2016-09-05T14:22:28Z'
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: columns
  "/rate_limit":
    get:
      summary: Get rate limit status for the authenticated user
      description: |-
        **Note:** Accessing this endpoint does not count against your REST API rate limit.

        **Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.
      tags:
      - rate-limit
      operationId: rate-limit/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/rate_limit/#get-rate-limit-status-for-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rate-limit-overview"
              examples:
                default:
                  "$ref": "#/components/examples/rate-limit-overview"
          headers:
            X-RateLimit-Limit:
              "$ref": "#/components/headers/x-rate-limit-limit"
            X-RateLimit-Remaining:
              "$ref": "#/components/headers/x-rate-limit-remaining"
            X-RateLimit-Reset:
              "$ref": "#/components/headers/x-rate-limit-reset"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: rate-limit
        subcategory: 
  "/reactions/{reaction_id}":
    delete:
      summary: Delete a reaction (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this [blog post](https://developer.github.com/enterprise/2.21/changes/2020-02-26-new-delete-reactions-endpoints/).

        OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/).
      tags:
      - reactions
      operationId: reactions/delete-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-a-reaction-legacy
      parameters:
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '410':
          "$ref": "#/components/responses/gone"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: 
      deprecated: true
  "/repos/{owner}/{repo}":
    get:
      summary: Get a repository
      description: |-
        When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.

        The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.
      tags:
      - repos
      operationId: repos/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#get-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/full-repository"
              examples:
                default-response:
                  "$ref": "#/components/examples/full-repository-default-response"
                response-with-scarlet-witch-preview-media-type:
                  "$ref": "#/components/examples/full-repository-response-with-scarlet-witch-preview-media-type"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '301':
          "$ref": "#/components/responses/moved_permanently"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        - required: false
          name: scarlet-witch
          note: |-
            The Codes of Conduct API is currently available for developers to preview.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.scarlet-witch-preview+json
            ```
        category: repos
        subcategory: 
    patch:
      summary: Update a repository
      description: "**Note**: To edit a repository's topics, use the [Replace all
        repository topics](https://developer.github.com/enterprise/2.21/v3/repos/#replace-all-repository-topics)
        endpoint."
      tags:
      - repos
      operationId: repos/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#update-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: "Either `true` to make the repository private or `false`
                    to make it public. Default: `false`.  \n**Note**: You will get
                    a `422` error if the organization restricts [changing repository
                    visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories)
                    to organization owners and a non-owner tries to change the value
                    of private. **Note**: You will get a `422` error if the organization
                    restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories)
                    to organization owners and a non-owner tries to change the value
                    of private."
                  default: false
                visibility:
                  type: string
                  description: Can be `public` or `private`. If your organization
                    is associated with an enterprise account using GitHub Enterprise
                    Cloud or GitHub Enterprise Server 2.20+, `visibility` can also
                    be `internal`. The `visibility` parameter overrides the `private`
                    parameter when you use both along with the `nebula-preview` preview
                    header.
                  enum:
                  - public
                  - private
                  - visibility
                  - internal
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository
                    or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository
                    or `false` to disable them. **Note:** If you're creating a repository
                    in an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns an
                    error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository
                    or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template
                    repository or `false` to prevent it.
                  default: false
                default_branch:
                  type: string
                  description: Updates the default branch for this repository.
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests,
                    or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a
                    merge commit, or `false` to prevent merging pull requests with
                    merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests,
                    or `false` to prevent rebase-merging.
                  default: true
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head
                    branches when pull requests are merged, or `false` to prevent
                    automatic deletion.
                  default: false
                archived:
                  type: boolean
                  description: "`true` to archive this repository. **Note**: You cannot
                    unarchive repositories through the API."
                  default: false
            example:
              name: Hello-World
              description: This is your first repository
              homepage: https://github.com
              private: true
              has_issues: true
              has_projects: true
              has_wiki: true
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/full-repository"
              examples:
                default:
                  "$ref": "#/components/examples/full-repository"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        - required: false
          name: baptiste
          note: |-
            The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://developer.github.com/v3/repos/#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.baptiste-preview+json
            ```
        category: repos
        subcategory: 
    delete:
      summary: Delete a repository
      description: |-
        Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.

        If an organization owner has configured the organization to prevent members from deleting organization-owned
        repositories, you will get a `403 Forbidden` response.
      tags:
      - repos
      operationId: repos/delete
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#delete-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
        '403':
          description: 'If an organization owner has configured the organization to
            prevent members from deleting organization-owned repositories, a member
            will get this response:'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              example:
                message: Organization members cannot delete repositories.
                documentation_url: https://developer.github.com/enterprise/2.21/v3/repos/#delete-a-repository
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/assignees":
    get:
      summary: List assignees
      description: Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/)
        for issues in a repository.
      tags:
      - issues
      operationId: issues/list-assignees
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/assignees/#list-assignees
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/assignees/{assignee}":
    get:
      summary: Check if a user can be assigned
      description: |-
        Checks if a user has permission to be assigned to an issue in this repository.

        If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.

        Otherwise a `404` status code is returned.
      tags:
      - issues
      operationId: issues/check-user-can-be-assigned
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/assignees/#check-if-a-user-can-be-assigned
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: assignee
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: If the `assignee` can be assigned to issues in the repository,
            a `204` header with no content is returned.
        '404':
          description: Otherwise a `404` status code is returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/branches":
    get:
      summary: List branches
      description: ''
      tags:
      - repos
      operationId: repos/list-branches
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#list-branches
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: protected
        description: Setting to `true` returns only protected branches. When set to
          `false`, only unprotected branches are returned. Omitting this parameter
          returns all branches.
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/short-branch"
              examples:
                default:
                  "$ref": "#/components/examples/short-branch-items"
                with-protection:
                  "$ref": "#/components/examples/short-branch-with-protection-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}":
    get:
      summary: Get a branch
      description: ''
      tags:
      - repos
      operationId: repos/get-branch
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-with-protection"
              examples:
                default:
                  "$ref": "#/components/examples/branch-with-protection"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection":
    get:
      summary: Get branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-protection"
              examples:
                default:
                  "$ref": "#/components/examples/branch-protection"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: luke-cage
          note: |-
            The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.luke-cage-preview+json
            ```
        category: repos
        subcategory: branches
    put:
      summary: Update branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Protecting a branch requires admin or owner permissions to the repository.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.

        **Note**: The list of users, apps, and teams in total is limited to 100 items.
      tags:
      - repos
      operationId: repos/update-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#update-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                required_status_checks:
                  type: object
                  description: Require status checks to pass before merging. Set to
                    `null` to disable.
                  nullable: true
                  properties:
                    strict:
                      type: boolean
                      description: Require branches to be up to date before merging.
                    contexts:
                      type: array
                      description: The list of status checks to require in order to
                        merge into this branch
                      items:
                        type: string
                  required:
                  - strict
                  - contexts
                enforce_admins:
                  type: boolean
                  description: Enforce all configured restrictions for administrators.
                    Set to `true` to enforce required status checks for repository
                    administrators. Set to `null` to disable.
                  nullable: true
                required_pull_request_reviews:
                  type: object
                  description: Require at least one approving review on a pull request,
                    before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    dismissal_restrictions:
                      type: object
                      description: Specify which users and teams can dismiss pull
                        request reviews. Pass an empty `dismissal_restrictions` object
                        to disable. User and team `dismissal_restrictions` are only
                        available for organization-owned repositories. Omit this parameter
                        for personal repositories.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s with dismissal access
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s with dismissal access
                          items:
                            type: string
                    dismiss_stale_reviews:
                      type: boolean
                      description: Set to `true` if you want to automatically dismiss
                        approving reviews when someone pushes a new commit.
                    require_code_owner_reviews:
                      type: boolean
                      description: Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/)
                        review them.
                    required_approving_review_count:
                      type: integer
                      description: Specify the number of reviewers required to approve
                        pull requests. Use a number between 1 and 6.
                restrictions:
                  type: object
                  description: Restrict who can push to the protected branch. User,
                    app, and team `restrictions` are only available for organization-owned
                    repositories. Set to `null` to disable.
                  nullable: true
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with push access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with push access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with push access
                      items:
                        type: string
                  required:
                  - users
                  - teams
                required_linear_history:
                  type: boolean
                  description: 'Enforces a linear commit Git history, which prevents
                    anyone from pushing merge commits to a branch. Set to `true` to
                    enforce a linear commit history. Set to `false` to disable a linear
                    commit Git history. Your repository must allow squash merging
                    or rebase merging before you can enable a linear commit history.
                    Default: `false`. For more information, see "[Requiring a linear
                    commit history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)"
                    in the GitHub Help documentation.'
                allow_force_pushes:
                  type: boolean
                  description: 'Permits force pushes to the protected branch by anyone
                    with write access to the repository. Set to `true` to allow force
                    pushes. Set to `false` or `null` to block force pushes. Default:
                    `false`. For more information, see "[Enabling force pushes to
                    a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation."'
                  nullable: true
                allow_deletions:
                  type: boolean
                  description: 'Allows deletion of the protected branch by anyone
                    with write access to the repository. Set to `false` to prevent
                    deletion of the protected branch. Default: `false`. For more information,
                    see "[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation.'
              required:
              - required_status_checks
              - enforce_admins
              - required_pull_request_reviews
              - restrictions
            example:
              required_status_checks:
                strict: true
                contexts:
                - continuous-integration/travis-ci
              enforce_admins: true
              required_pull_request_reviews:
                dismissal_restrictions:
                  users:
                  - octocat
                  teams:
                  - justice-league
                dismiss_stale_reviews: true
                require_code_owner_reviews: true
                required_approving_review_count: 2
              restrictions:
                users:
                - octocat
                teams:
                - justice-league
                apps:
                - super-ci
              required_linear_history: true
              allow_force_pushes: true
              allow_deletions: true
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch"
        '403':
          "$ref": "#/components/responses/forbidden"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: luke-cage
          note: |-
            The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.luke-cage-preview+json
            ```
        category: repos
        subcategory: branches
    delete:
      summary: Delete branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#delete-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins":
    get:
      summary: Get admin branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    post:
      summary: Set admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/set-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#set-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    delete:
      summary: Delete admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/delete-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#delete-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: No Content
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews":
    get:
      summary: Get pull request review protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/vnd.github.luke-cage-preview+json:
              schema:
                "$ref": "#/components/schemas/protected-branch-pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-pull-request-review"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: luke-cage
          note: |-
            The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.luke-cage-preview+json
            ```
        category: repos
        subcategory: branches
    patch:
      summary: Update pull request review protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.
      tags:
      - repos
      operationId: repos/update-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#update-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dismissal_restrictions:
                  type: object
                  description: Specify which users and teams can dismiss pull request
                    reviews. Pass an empty `dismissal_restrictions` object to disable.
                    User and team `dismissal_restrictions` are only available for
                    organization-owned repositories. Omit this parameter for personal
                    repositories.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with dismissal access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with dismissal access
                      items:
                        type: string
                dismiss_stale_reviews:
                  type: boolean
                  description: Set to `true` if you want to automatically dismiss
                    approving reviews when someone pushes a new commit.
                require_code_owner_reviews:
                  type: boolean
                  description: Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/)
                    have reviewed.
                required_approving_review_count:
                  type: integer
                  description: Specifies the number of reviewers required to approve
                    pull requests. Use a number between 1 and 6.
            example:
              dismissal_restrictions:
                users:
                - octocat
                teams:
                - justice-league
              dismiss_stale_reviews: true
              require_code_owner_reviews: true
              required_approving_review_count: 2
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-pull-request-review"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: luke-cage
          note: |-
            The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.luke-cage-preview+json
            ```
        category: repos
        subcategory: branches
    delete:
      summary: Delete pull request review protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#delete-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: No Content
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures":
    get:
      summary: Get commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.

        **Note**: You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/get-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: zzzax
          note: |-
            Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.zzzax-preview+json
            ```
        category: repos
        subcategory: branches
    post:
      summary: Create commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/create-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#create-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: zzzax
          note: |-
            Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.zzzax-preview+json
            ```
        category: repos
        subcategory: branches
    delete:
      summary: Delete commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/delete-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#delete-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: No Content
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: zzzax
          note: |-
            Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.zzzax-preview+json
            ```
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks":
    get:
      summary: Get status checks protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-status-checks-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-status-checks-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status-check-policy"
              examples:
                default:
                  "$ref": "#/components/examples/status-check-policy"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    patch:
      summary: Update status check protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/update-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#update-status-check-potection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                strict:
                  type: boolean
                  description: Require branches to be up to date before merging.
                contexts:
                  type: array
                  description: The list of status checks to require in order to merge
                    into this branch
                  items:
                    type: string
            example:
              strict: true
              contexts:
              - continuous-integration/travis-ci
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status-check-policy"
              examples:
                default:
                  "$ref": "#/components/examples/status-check-policy"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    delete:
      summary: Remove status check protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#remove-status-check-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: No Content
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts":
    get:
      summary: Get all status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-all-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-all-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - continuous-integration/travis-ci
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    post:
      summary: Add status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/add-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#add-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: contexts parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - continuous-integration/travis-ci
              - continuous-integration/jenkins
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
    put:
      summary: Set status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/set-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#set-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: contexts parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - continuous-integration/travis-ci
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
    delete:
      summary: Remove status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#remove-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: contexts parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - continuous-integration/travis-ci
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions":
    get:
      summary: Get access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists who has access to this protected branch.

        **Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.
      tags:
      - repos
      operationId: repos/get-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#get-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-restriction-policy"
              examples:
                default:
                  "$ref": "#/components/examples/branch-restriction-policy"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    delete:
      summary: Delete access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Disables the ability to restrict who can push to this branch.
      tags:
      - repos
      operationId: repos/delete-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#delete-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: No Content
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps":
    get:
      summary: Get apps with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
      - repos
      operationId: repos/get-apps-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#list-apps-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    post:
      summary: Add app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/add-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#add-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: apps parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
    put:
      summary: Set app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/set-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#set-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: apps parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
    delete:
      summary: Remove app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/remove-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#remove-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: apps parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams":
    get:
      summary: Get teams with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the teams who have push access to this branch. The list includes child teams.
      tags:
      - repos
      operationId: repos/get-teams-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#list-teams-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    post:
      summary: Add team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified teams push access for this branch. You can also give push access to child teams.

        | Type    | Description                                                                                                                                |
        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/add-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#add-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: teams parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
    put:
      summary: Set team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.

        | Type    | Description                                                                                                                                |
        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/set-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#set-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: teams parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
    delete:
      summary: Remove team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a team to push to this branch. You can also remove push access for child teams.

        | Type    | Description                                                                                                                                         |
        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/remove-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#remove-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: teams parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users":
    get:
      summary: Get users with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the people who have push access to this branch.
      tags:
      - repos
      operationId: repos/get-users-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#list-users-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: branches
    post:
      summary: Add user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified people push access for this branch.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/add-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#add-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: users parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: users
        category: repos
        subcategory: branches
    put:
      summary: Set user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/set-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#set-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: users parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: users
        category: repos
        subcategory: branches
    delete:
      summary: Remove user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a user to push to this branch.

        | Type    | Description                                                                                                                                   |
        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/remove-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/branches/#remove-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: users parameter
              items:
                type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        requestBodyParameterName: users
        category: repos
        subcategory: branches
  "/repos/{owner}/{repo}/check-runs":
    post:
      summary: Create a check run
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Creates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.

        In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.
      tags:
      - checks
      operationId: checks/create
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#create-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                head_sha:
                  type: string
                  description: The SHA of the commit.
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full
                    details of the check. If the integrator does not provide this,
                    then the homepage of the GitHub app is used.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                status:
                  type: string
                  description: The current status. Can be one of `queued`, `in_progress`,
                    or `completed`.
                  enum:
                  - queued
                  - in_progress
                  - completed
                  default: queued
                started_at:
                  type: string
                  description: 'The time that the check run began. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status`
                    of `completed`**. The final conclusion of the check. Can be one
                    of `success`, `failure`, `neutral`, `cancelled`, `skipped`, `timed_out`,
                    or `action_required`. When the conclusion is `action_required`,
                    additional details should be provided on the site specified by
                    `details_url`.  \n**Note:** Providing `conclusion` will automatically
                    set the `status` parameter to `completed`. Only GitHub can change
                    a check run conclusion to `stale`."
                  enum:
                  - success
                  - failure
                  - neutral
                  - cancelled
                  - skipped
                  - timed_out
                  - action_required
                completed_at:
                  type: string
                  description: 'The time the check completed. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output`
                    object, including a `title` and `summary` and can optionally provide
                    descriptive details about the run. See the [`output` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#output-object)
                    description.
                  properties:
                    title:
                      type: string
                      description: The title of the check run.
                    summary:
                      type: string
                      description: The summary of the check run. This parameter supports
                        Markdown.
                    text:
                      type: string
                      description: The details of the check run. This parameter supports
                        Markdown.
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific
                        lines of code. Annotations are visible on GitHub in the **Checks**
                        and **Files changed** tab of the pull request. The Checks
                        API limits the number of annotations to a maximum of 50 per
                        API request. To create more than 50 annotations, you have
                        to make multiple requests to the [Update a check run](https://developer.github.com/enterprise/2.21/v3/checks/runs/#update-a-check-run)
                        endpoint. Each time you update the check run, annotations
                        are appended to the list of annotations that already exist
                        for the check run. For details about how you can view annotations
                        on GitHub, see "[About status checks](https://help.github.com/articles/about-status-checks#checks)".
                        See the [`annotations` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#annotations-object)
                        description for details about how to use this parameter.
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation
                              to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation. Can be one of
                              `notice`, `warning`, or `failure`.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these
                              lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation.
                              The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum
                              size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub
                        pull request UI. See the [`images` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#images-object)
                        description for details.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - title
                  - summary
                actions:
                  type: array
                  description: Displays a button on GitHub that can be clicked to
                    alert your app to do additional tasks. For example, a code linting
                    app can display a button that automatically fixes detected errors.
                    The button created in this object is displayed after the check
                    run completes. When a user clicks the button, GitHub sends the
                    [`check_run.requested_action` webhook](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#check_run)
                    to your app. Each action includes a `label`, `identifier` and
                    `description`. A maximum of three actions are accepted. See the
                    [`actions` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#actions-object)
                    description. To learn more about check runs and requested actions,
                    see "[Check runs and requested actions](https://developer.github.com/enterprise/2.21/v3/checks/runs/#check-runs-and-requested-actions)."
                    To learn more about check runs and requested actions, see "[Check
                    runs and requested actions](https://developer.github.com/enterprise/2.21/v3/checks/runs/#check-runs-and-requested-actions)."
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        description: The text to be displayed on a button in the web
                          UI. The maximum size is 20 characters.
                      description:
                        type: string
                        description: A short explanation of what this action would
                          do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        description: A reference for the action on the integrator's
                          system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
              required:
              - name
              - head_sha
            examples:
              example-of-in-progress-conclusion:
                summary: Example of in_progress conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: in_progress
                  external_id: '42'
                  started_at: '2018-05-04T01:14:52Z'
                  output:
                    title: Mighty Readme report
                    summary: ''
                    text: ''
              example-of-completed-conclusion:
                summary: Example of completed conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: completed
                  started_at: '2017-11-30T19:39:10Z'
                  conclusion: success
                  completed_at: '2017-11-30T19:49:10Z'
                  output:
                    title: Mighty Readme report
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You
                      also may want to add a section in your README about how to install
                      your app.
                    annotations:
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'banaas'.
                      raw_details: Do you mean 'bananas' or 'banana'?
                      start_line: 2
                      end_line: 2
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'aples'
                      raw_details: Do you mean 'apples' or 'Naples'
                      start_line: 4
                      end_line: 4
                    images:
                    - alt: Super bananas
                      image_url: http://example.com/images/42
                  actions:
                  - label: Fix
                    identifier: fix_errors
                    description: Allow us to fix these errors for you
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                example-of-in-progress-conclusion:
                  "$ref": "#/components/examples/check-run-example-of-in-progress-conclusion"
                example-of-completed-conclusion:
                  "$ref": "#/components/examples/check-run-example-of-completed-conclusion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}":
    get:
      summary: Get a check run
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Gets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      tags:
      - checks
      operationId: checks/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#get-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_run_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
    patch:
      summary: Update a check run
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Updates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.
      tags:
      - checks
      operationId: checks/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#update-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_run_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full
                    details of the check.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                started_at:
                  type: string
                  description: 'This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                    format: `YYYY-MM-DDTHH:MM:SSZ`.'
                status:
                  type: string
                  description: The current status. Can be one of `queued`, `in_progress`,
                    or `completed`.
                  enum:
                  - queued
                  - in_progress
                  - completed
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status`
                    of `completed`**. The final conclusion of the check. Can be one
                    of `success`, `failure`, `neutral`, `cancelled`, `skipped`, `timed_out`,
                    or `action_required`.  \n**Note:** Providing `conclusion` will
                    automatically set the `status` parameter to `completed`. Only
                    GitHub can change a check run conclusion to `stale`."
                  enum:
                  - success
                  - failure
                  - neutral
                  - cancelled
                  - skipped
                  - timed_out
                  - action_required
                completed_at:
                  type: string
                  description: 'The time the check completed. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output`
                    object, including a `title` and `summary` and can optionally provide
                    descriptive details about the run. See the [`output` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#output-object-1)
                    description.
                  properties:
                    title:
                      type: string
                      description: "**Required**."
                    summary:
                      type: string
                      description: Can contain Markdown.
                    text:
                      type: string
                      description: Can contain Markdown.
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific
                        lines of code. Annotations are visible in GitHub's pull request
                        UI. Annotations are visible in GitHub's pull request UI. The
                        Checks API limits the number of annotations to a maximum of
                        50 per API request. To create more than 50 annotations, you
                        have to make multiple requests to the [Update a check run](https://developer.github.com/enterprise/2.21/v3/checks/runs/#update-a-check-run)
                        endpoint. Each time you update the check run, annotations
                        are appended to the list of annotations that already exist
                        for the check run. For details about annotations in the UI,
                        see "[About status checks](https://help.github.com/articles/about-status-checks#checks)".
                        See the [`annotations` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#annotations-object-1)
                        description for details.
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation
                              to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation. Can be one of
                              `notice`, `warning`, or `failure`.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these
                              lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation.
                              The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum
                              size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub
                        pull request UI. See the [`images` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#annotations-object-1)
                        description for details.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - summary
                actions:
                  type: array
                  description: Possible further actions the integrator can perform,
                    which a user may trigger. Each action includes a `label`, `identifier`
                    and `description`. A maximum of three actions are accepted. See
                    the [`actions` object](https://developer.github.com/enterprise/2.21/v3/checks/runs/#actions-object)
                    description. To learn more about check runs and requested actions,
                    see "[Check runs and requested actions](https://developer.github.com/enterprise/2.21/v3/checks/runs/#check-runs-and-requested-actions)."
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        description: The text to be displayed on a button in the web
                          UI. The maximum size is 20 characters.
                      description:
                        type: string
                        description: A short explanation of what this action would
                          do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        description: A reference for the action on the integrator's
                          system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
            example:
              name: mighty_readme
              started_at: '2018-05-04T01:14:52Z'
              status: completed
              conclusion: success
              completed_at: '2018-05-04T01:14:52Z'
              output:
                title: Mighty Readme report
                summary: There are 0 failures, 2 warnings, and 1 notices.
                text: You may have some misspelled words on lines 2 and 4. You also
                  may want to add a section in your README about how to install your
                  app.
                annotations:
                - path: README.md
                  annotation_level: warning
                  title: Spell Checker
                  message: Check your spelling for 'banaas'.
                  raw_details: Do you mean 'bananas' or 'banana'?
                  start_line: 2
                  end_line: 2
                - path: README.md
                  annotation_level: warning
                  title: Spell Checker
                  message: Check your spelling for 'aples'
                  raw_details: Do you mean 'apples' or 'Naples'
                  start_line: 4
                  end_line: 4
                images:
                - alt: Super bananas
                  image_url: http://example.com/images/42
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations":
    get:
      summary: List check run annotations
      description: Lists annotations for a check run using the annotation `id`. GitHub
        Apps must have the `checks:read` permission on a private repository or pull
        access to a public repository to get annotations for a check run. OAuth Apps
        and authenticated users must have the `repo` scope to get annotations for
        a check run in a private repository.
      tags:
      - checks
      operationId: checks/list-annotations
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#list-check-run-annotations
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_run_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/check-annotation"
              examples:
                default:
                  "$ref": "#/components/examples/check-annotation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites":
    post:
      summary: Create a check suite
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.

        By default, check suites are automatically created when you create a [check run](https://developer.github.com/enterprise/2.21/v3/checks/runs/). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using "[Update repository preferences for check suites](https://developer.github.com/enterprise/2.21/v3/checks/suites/#update-repository-preferences-for-check-suites)". Your GitHub App must have the `checks:write` permission to create check suites.
      tags:
      - checks
      operationId: checks/create-suite
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/suites/#create-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                head_sha:
                  type: string
                  description: The sha of the head commit.
              required:
              - head_sha
            example:
              head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/preferences":
    patch:
      summary: Update repository preferences for check suites
      description: Changes the default automatic flow when creating check suites.
        By default, a check suite is automatically created each time code is pushed
        to a repository. When you disable the automatic creation of check suites,
        you can manually [Create a check suite](https://developer.github.com/enterprise/2.21/v3/checks/suites/#create-a-check-suite).
        You must have admin permissions in the repository to set preferences for check
        suites.
      tags:
      - checks
      operationId: checks/set-suites-preferences
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/suites/#update-repository-preferences-for-check-suites
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_trigger_checks:
                  type: array
                  description: Enables or disables automatic creation of CheckSuite
                    events upon pushes to the repository. Enabled by default. See
                    the [`auto_trigger_checks` object](https://developer.github.com/enterprise/2.21/v3/checks/suites/#auto_trigger_checks-object)
                    description for details.
                  items:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        description: The `id` of the GitHub App.
                      setting:
                        type: boolean
                        description: Set to `true` to enable automatic creation of
                          CheckSuite events upon pushes to the repository, or `false`
                          to disable them.
                        default: true
                    required:
                    - app_id
                    - setting
            example:
              auto_trigger_checks:
              - app_id: 4
                setting: false
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite-preference"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite-preference"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}":
    get:
      summary: Get a check suite
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.

        Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
      tags:
      - checks
      operationId: checks/get-suite
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/suites/#get-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_suite_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs":
    get:
      summary: List check runs in a check suite
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Lists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      tags:
      - checks
      operationId: checks/list-for-suite
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#list-check-runs-in-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_suite_id"
      - "$ref": "#/components/parameters/check_name"
      - "$ref": "#/components/parameters/status"
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. Can be
          one of `latest` (returning the most recent check runs) or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  check_runs:
                    type: array
                    items:
                      "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest":
    post:
      summary: Rerequest a check suite
      description: |-
        Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.

        To rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.
      tags:
      - checks
      operationId: checks/rerequest-suite
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/suites/#rerequest-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check_suite_id"
      responses:
        '201':
          description: response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/collaborators":
    get:
      summary: List repository collaborators
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        Team members will include the members of child teams.
      tags:
      - repos
      operationId: repos/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/collaborators/#list-repository-collaborators
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: affiliation
        description: "Filter collaborators returned by their affiliation. Can be one
          of:  \n\\* `outside`: All outside collaborators of an organization-owned
          repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned
          repository, regardless of organization membership status.  \n\\* `all`:
          All collaborators the authenticated user can see."
        in: query
        required: false
        schema:
          type: string
          enum:
          - outside
          - direct
          - all
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/collaborator"
              examples:
                default:
                  "$ref": "#/components/examples/collaborator-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: collaborators
  "/repos/{owner}/{repo}/collaborators/{username}":
    get:
      summary: Check if a user is a repository collaborator
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        Team members will include the members of child teams.
      tags:
      - repos
      operationId: repos/check-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/collaborators/#check-if-a-user-is-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if user is a collaborator
        '404':
          description: Response if user is not a collaborator
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: collaborators
    put:
      summary: Add a repository collaborator
      description: |-
        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

        For more information the permission levels, see "[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."

        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://developer.github.com/enterprise/2.21/v3/repos/invitations/).

        **Rate limits**

        To prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
      tags:
      - repos
      operationId: repos/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/collaborators/#add-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: "The permission to grant the collaborator. **Only valid
                    on organization-owned repositories.** Can be one of:  \n\\* `pull`
                    - can pull, but not push to or administer this repository.  \n\\*
                    `push` - can pull and push, but not administer this repository.
                    \ \n\\* `admin` - can pull, push and administer this repository.
                    \ \n\\* `maintain` - Recommended for project managers who need
                    to manage the repository without access to sensitive or destructive
                    actions.  \n\\* `triage` - Recommended for contributors who need
                    to proactively manage issues and pull requests without write access."
                  enum:
                  - pull
                  - push
                  - admin
                  - maintain
                  - triage
                  default: push
                permissions:
                  type: string
                  example: '"push"'
      responses:
        '201':
          description: Response when a new invitation is created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-invitation"
              examples:
                response-when-a-new-invitation-is-created:
                  "$ref": "#/components/examples/repository-invitation-response-when-a-new-invitation-is-created"
        '204':
          description: Response when person is already a collaborator
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: collaborators
    delete:
      summary: Remove a repository collaborator
      description: ''
      tags:
      - repos
      operationId: repos/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/collaborators/#remove-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: collaborators
  "/repos/{owner}/{repo}/collaborators/{username}/permission":
    get:
      summary: Get repository permissions for a user
      description: Checks the repository permission of a collaborator. The possible
        repository permissions are `admin`, `write`, `read`, and `none`.
      tags:
      - repos
      operationId: repos/get-collaborator-permission-level
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/collaborators/#get-repository-permissions-for-a-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response if user has admin permissions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-collaborator-permission"
              examples:
                response-if-user-has-admin-permissions:
                  "$ref": "#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: collaborators
  "/repos/{owner}/{repo}/comments":
    get:
      summary: List commit comments for a repository
      description: |-
        Commit Comments use [these custom media types](https://developer.github.com/enterprise/2.21/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/enterprise/2.21/v3/media/).

        Comments are ordered by ascending ID.
      tags:
      - repos
      operationId: repos/list-commit-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#list-commit-comments-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: repos
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}":
    get:
      summary: Get a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/get-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#get-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: repos
        subcategory: comments
    patch:
      summary: Update a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/update-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#update-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment
              required:
              - body
            example:
              body: Nice change
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: comments
    delete:
      summary: Delete a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/delete-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#delete-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions":
    get:
      summary: List reactions for a commit comment
      description: List the reactions to a [commit comment](https://developer.github.com/enterprise/2.21/v3/repos/comments/).
      tags:
      - reactions
      operationId: reactions/list-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a commit comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for a commit comment
      description: 'Create a reaction to a [commit comment](https://developer.github.com/enterprise/2.21/v3/repos/comments/).
        A response with a `Status: 200 OK` means that you already added the reaction
        type to this commit comment.'
      tags:
      - reactions
      operationId: reactions/create-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the commit comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete a commit comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.

        Delete a reaction to a [commit comment](https://developer.github.com/enterprise/2.21/v3/repos/comments/).
      tags:
      - reactions
      operationId: reactions/delete-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-a-commit-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/commits":
    get:
      summary: List commits
      description: |-
        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/list-commits
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-commits
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        description: 'SHA or branch to start listing commits from. Default: the repository’s
          default branch (usually `master`).'
        in: query
        required: false
        schema:
          type: string
      - name: path
        description: Only commits containing this file path will be returned.
        in: query
        required: false
        schema:
          type: string
      - name: author
        description: GitHub login or email address by which to filter by commit author.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/since"
      - name: until
        description: 'Only commits before this date will be returned. This is a timestamp
          in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-commit"
              examples:
                default:
                  "$ref": "#/components/examples/simple-commit-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '500':
          "$ref": "#/components/responses/internal_error"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head":
    get:
      summary: List branches for HEAD commit
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.
      tags:
      - repos
      operationId: repos/list-branches-for-head-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-branches-for-head-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit_sha"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/branch-short"
              examples:
                default:
                  "$ref": "#/components/examples/branch-short-items"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: groot
          note: |-
            Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.groot-preview+json
            ```
        category: repos
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments":
    get:
      summary: List commit comments
      description: Use the `:commit_sha` to specify the commit that will have its
        comments listed.
      tags:
      - repos
      operationId: repos/list-comments-for-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#list-commit-comments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit_sha"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: repos
        subcategory: comments
    post:
      summary: Create a commit comment
      description: |-
        Create a comment for a commit using its `:commit_sha`.

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - repos
      operationId: repos/create-commit-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/comments/#create-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit_sha"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
                path:
                  type: string
                  description: Relative path of the file to comment on.
                position:
                  type: integer
                  description: Line index in the diff to comment on.
                line:
                  type: integer
                  description: "**Deprecated**. Use **position** parameter instead.
                    Line number in the file to comment on."
              required:
              - body
            example:
              body: Great stuff
              path: file1.txt
              position: 4
              line: 1
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/comments/1
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: comments
  "/repos/{owner}/{repo}/commits/{commit_sha}/pulls":
    get:
      summary: List pull requests associated with a commit
      description: Lists all pull requests containing the provided commit SHA, which
        can be from any point in the commit history. The results will include open
        and closed pull requests. Additional preview headers may be required to see
        certain details for associated pull requests, such as whether a pull request
        is in a draft state. For more information about previews that might affect
        this endpoint, see the [List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)
        endpoint.
      tags:
      - repos
      operationId: repos/list-pull-requests-associated-with-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-pull-requests-associated-with-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit_sha"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: groot
          note: |-
            Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.groot-preview+json
            ```
        category: repos
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}":
    get:
      summary: Get a commit
      description: |-
        Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.

        **Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.

        You can pass the appropriate [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.

        To return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/get-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/commits/#get-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}/check-runs":
    get:
      summary: List check runs for a Git reference
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Lists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      tags:
      - checks
      operationId: checks/list-for-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/runs/#list-check-runs-for-a-git-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/check_name"
      - "$ref": "#/components/parameters/status"
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. Can be
          one of `latest` (returning the most recent check runs) or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  check_runs:
                    type: array
                    items:
                      "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/commits/{ref}/check-suites":
    get:
      summary: List check suites for a Git reference
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.

        Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
      tags:
      - checks
      operationId: checks/list-suites-for-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/checks/suites/#list-check-suites-for-a-git-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      - name: app_id
        description: Filters check suites by GitHub App `id`.
        in: query
        required: false
        schema:
          type: integer
        example: 1
      - "$ref": "#/components/parameters/check_name"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  check_suites:
                    type: array
                    items:
                      "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: antiope
          note: |-
            The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.antiope-preview+json
            ```
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/commits/{ref}/status":
    get:
      summary: Get the combined status for a specific reference
      description: |-
        Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.

        The most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/enterprise/2.21/v3/#pagination) if there are over 100 contexts.

        Additionally, a combined `state` is returned. The `state` is one of:

        *   **failure** if any of the contexts report as `error` or `failure`
        *   **pending** if there are no statuses or a context is `pending`
        *   **success** if the latest status for all contexts is `success`
      tags:
      - repos
      operationId: repos/get-combined-status-for-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statuses/#get-the-combined-status-for-a-specific-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/combined-commit-status"
              examples:
                default:
                  "$ref": "#/components/examples/combined-commit-status"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statuses
  "/repos/{owner}/{repo}/commits/{ref}/statuses":
    get:
      summary: List commit statuses for a reference
      description: |-
        Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.

        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.
      tags:
      - repos
      operationId: repos/list-commit-statuses-for-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statuses/#list-commit-statuses-for-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/status"
              examples:
                default:
                  "$ref": "#/components/examples/status-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '301':
          "$ref": "#/components/responses/moved_permanently"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statuses
  "/repos/{owner}/{repo}/community/code_of_conduct":
    get:
      summary: Get the code of conduct for a repository
      description: This method returns the contents of the repository's code of conduct
        file, if one is detected.
      tags:
      - codes-of-conduct
      operationId: codes-of-conduct/get-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/codes_of_conduct/#get-the-code-of-conduct-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-of-conduct"
              examples:
                default:
                  "$ref": "#/components/examples/code-of-conduct-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: scarlet-witch
          note: |-
            The Codes of Conduct API is currently available for developers to preview.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.scarlet-witch-preview+json
            ```
        category: codes-of-conduct
        subcategory: 
  "/repos/{owner}/{repo}/compare/{base}...{head}":
    get:
      summary: Compare two commits
      description: |-
        Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.

        The response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.

        The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.

        **Working with large comparisons**

        The response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-commits) to enumerate all commits in the range.

        For comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long
        to generate. You can typically resolve this error by using a smaller commit range.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/compare-commits
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/commits/#compare-two-commits
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: base
        in: path
        required: true
        schema:
          type: string
      - name: head
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comparison"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comparison"
        '500':
          "$ref": "#/components/responses/internal_error"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: commits
  "/repos/{owner}/{repo}/contents/{path}":
    get:
      summary: Get repository content
      description: "Gets the contents of a file or directory in a repository. Specify
        the file path or directory in `:path`. If you omit\n`:path`, you will receive
        the contents of all files in the repository.\n\nFiles and symlinks support
        [a custom media type](https://developer.github.com/enterprise/2.21/v3/repos/contents/#custom-media-types)
        for\nretrieving the raw content or rendered HTML (when supported). All content
        types support [a custom media\ntype](https://developer.github.com/enterprise/2.21/v3/repos/contents/#custom-media-types)
        to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*
        \  To get a repository's contents recursively, you can [recursively get the
        tree](https://developer.github.com/enterprise/2.21/v3/git/trees/).\n*   This
        API has an upper limit of 1,000 files for a directory. If you need to retrieve
        more files, use the [Git Trees\nAPI](https://developer.github.com/enterprise/2.21/v3/git/trees/#get-a-tree).\n*
        \  This API supports files up to 1 megabyte in size.\n\n#### If the content
        is a directory\nThe response will be an array of objects, one object for each
        item in the directory.\nWhen listing the contents of a directory, submodules
        have their \"type\" specified as \"file\". Logically, the value\n_should_
        be \"submodule\". This behavior exists in API v3 [for backwards compatibility
        purposes](https://git.io/v1YCW).\nIn the next major version of the API, the
        type will be returned as \"submodule\".\n\n#### If the content is a symlink
        \nIf the requested `:path` points to a symlink, and the symlink's target is
        a normal file in the repository, then the\nAPI responds with the content of
        the file (in the format shown in the example. Otherwise, the API responds
        with an object \ndescribing the symlink itself.\n\n#### If the content is
        a submodule\nThe `submodule_git_url` identifies the location of the submodule
        repository, and the `sha` identifies a specific\ncommit within the submodule
        repository. Git uses the given URL when cloning the submodule repository,
        and checks out\nthe submodule at that specific commit.\n\nIf the submodule
        repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`)
        and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null
        values."
      tags:
      - repos
      operationId: repos/get-content
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#get-repository-content
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path+ parameter
        in: path
        required: true
        schema:
          type: string
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s
          default branch (usually `master`)'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/vnd.github.v3.object:
              schema:
                "$ref": "#/components/schemas/content-tree"
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/content-directory"
                - "$ref": "#/components/schemas/content-file"
                - "$ref": "#/components/schemas/content-symlink"
                - "$ref": "#/components/schemas/content-submodule"
              examples:
                response-if-content-is-a-file:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-file"
                response-if-content-is-a-directory:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-directory"
                response-if-content-is-a-symlink:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-symlink"
                response-if-content-is-a-submodule:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-submodule"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '302':
          "$ref": "#/components/responses/found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
    put:
      summary: Create or update file contents
      description: Creates a new file or replaces an existing file in a repository.
      tags:
      - repos
      operationId: repos/create-or-update-file-contents
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#create-or-update-file-contents
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path+ parameter
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                content:
                  type: string
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  description: "**Required if you are updating a file**. The blob
                    SHA of the file being replaced."
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default
                    branch (usually `master`)'
                committer:
                  type: object
                  description: 'The person that committed the file. Default: the authenticated
                    user.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit.
                        You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit.
                        You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-05T13:13:22+05:00"'
                  required:
                  - name
                  - email
                author:
                  type: object
                  description: 'The author of the file. Default: The `committer` or
                    the authenticated user if you omit `committer`.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit.
                        You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit.
                        You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-15T17:13:22+05:00"'
                  required:
                  - name
                  - email
              required:
              - message
              - content
            examples:
              example-for-creating-a-file:
                summary: Example for creating a file
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgbmV3IGZpbGUgY29udGVudHM=
              example-for-updating-a-file:
                summary: Example for updating a file
                value:
                  message: a new commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                example-for-updating-a-file:
                  "$ref": "#/components/examples/file-commit-example-for-updating-a-file"
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                example-for-creating-a-file:
                  "$ref": "#/components/examples/file-commit-example-for-creating-a-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
    delete:
      summary: Delete a file
      description: |-
        Deletes a file in a repository.

        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.

        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.

        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.
      tags:
      - repos
      operationId: repos/delete-file
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#delete-a-file
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path+ parameter
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                sha:
                  type: string
                  description: The blob SHA of the file being replaced.
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default
                    branch (usually `master`)'
                committer:
                  type: object
                  description: object containing information about the committer.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                author:
                  type: object
                  description: object containing information about the author.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
              required:
              - message
              - sha
            example:
              message: my commit message
              committer:
                name: Monalisa Octocat
                email: octocat@github.com
              sha: 329688480d39049927147c162b9d2deaf885005f
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                default:
                  "$ref": "#/components/examples/file-commit"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/contributors":
    get:
      summary: List repository contributors
      description: |-
        Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.

        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.
      tags:
      - repos
      operationId: repos/list-contributors
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repository-contributors
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: anon
        description: Set to `1` or `true` to include anonymous contributors in results.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response if repository contains content
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/contributor"
              examples:
                response-if-repository-contains-content:
                  "$ref": "#/components/examples/contributor-items-response-if-repository-contains-content"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '204':
          description: Response if repository is empty
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/deployments":
    get:
      summary: List deployments
      description: 'Simple filtering of deployments is available via query parameters:'
      tags:
      - repos
      operationId: repos/list-deployments
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#list-deployments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        description: The SHA recorded at creation time.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: ref
        description: The name of the ref. This can be a branch, tag, or SHA.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: task
        description: The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: environment
        description: The name of the environment that was deployed to (e.g., `staging`
          or `production`).
        in: query
        required: false
        schema:
          type: string
          default: none
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deployment"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
    post:
      summary: Create a deployment
      description: |-
        Deployments offer a few configurable parameters with certain defaults.

        The `ref` parameter can be any named branch, tag, or SHA. At GitHub Enterprise Server we often deploy branches and verify them
        before we merge a pull request.

        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have
        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter
        makes it easier to track which environments have requested deployments. The default environment is `production`.

        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If
        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,
        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will
        return a failure response.

        By default, [commit statuses](https://developer.github.com/enterprise/2.21/v3/repos/statuses) for every submitted context must be in a `success`
        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to
        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do
        not require any contexts or create any commit statuses, the deployment will always succeed.

        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text
        field that will be passed on when a deployment event is dispatched.

        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might
        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an
        application with debugging enabled.

        Users with `repo` or `repo_deployment` scopes can create a deployment for a given ref.

        #### Merged branch response
        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating
        a deployment. This auto-merge happens when:
        *   Auto-merge option is enabled in the repository
        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example
        *   There are no merge conflicts

        If there are no new commits in the base branch, a new request to create a deployment should give a successful
        response.

        #### Merge conflict response
        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't
        be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.

        #### Failed commit status checks
        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`
        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.
      tags:
      - repos
      operationId: repos/create-deployment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#create-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The ref to deploy. This can be a branch, tag, or SHA.
                task:
                  type: string
                  description: Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
                  default: deploy
                auto_merge:
                  type: boolean
                  description: Attempts to automatically merge the default branch
                    into the requested ref, if it's behind the default branch.
                  default: true
                required_contexts:
                  type: array
                  description: The [status](https://developer.github.com/enterprise/2.21/v3/repos/statuses/)
                    contexts to verify against commit status checks. If you omit this
                    parameter, GitHub verifies all unique contexts before creating
                    a deployment. To bypass checking entirely, pass an empty array.
                    Defaults to all unique contexts.
                  items:
                    type: string
                payload:
                  type: string
                  description: JSON payload with extra information about the deployment.
                  default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment (e.g., `production`,
                    `staging`, `qa`).
                  default: production
                description:
                  type: string
                  description: Short description of the deployment.
                  default: ''
                  nullable: true
                transient_environment:
                  type: boolean
                  description: "Specifies if the given environment is specific to
                    the deployment and will no longer exist at some point in the future.
                    Default: `false`  \n**Note:** This parameter requires you to use
                    the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type. **Note:** This parameter requires you to use
                    the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type."
                  default: false
                production_environment:
                  type: boolean
                  description: "Specifies if the given environment is one that end-users
                    directly interact with. Default: `true` when `environment` is
                    `production` and `false` otherwise.  \n**Note:** This parameter
                    requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type."
                created_at:
                  type: string
                  example: '"1776-07-04T00:00:00.000-07:52"'
              required:
              - ref
            examples:
              simple-example:
                summary: Simple example
                value:
                  ref: topic-branch
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
              advanced-example:
                summary: Advanced example
                value:
                  ref: topic-branch
                  auto_merge: false
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
                  required_contexts:
                  - ci/janky
                  - security/brakeman
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment"
              examples:
                simple-example:
                  "$ref": "#/components/examples/deployment-simple-example"
                advanced-example:
                  "$ref": "#/components/examples/deployment-advanced-example"
        '202':
          description: Merged branch response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                merged-branch-response:
                  value:
                    message: Auto-merged master into topic-branch on deployment.
        '409':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                    example: '"https://developer.github.com/enterprise/2.21/v3/repos/deployments/#create-a-deployment"'
              examples:
                merge-conflict-response:
                  summary: Merge conflict response
                  value:
                    message: Conflict merging master into topic-branch
                failed-commit-status-checks:
                  summary: Failed commit status checks
                  value:
                    message: 'Conflict: Commit status checks failed for topic-branch.'
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}":
    get:
      summary: Get a deployment
      description: ''
      tags:
      - repos
      operationId: repos/get-deployment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#get-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment"
              examples:
                default:
                  "$ref": "#/components/examples/deployment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
    delete:
      summary: Delete a deployment
      description: |-
        To ensure there can always be an active deployment, you can only delete an _inactive_ deployment. Anyone with `repo` or `repo_deployment` scopes can delete an inactive deployment.

        To set a deployment as inactive, you must:

        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.
        *   Mark the active deployment as inactive by adding any non-successful deployment status.

        For more information, see "[Create a deployment](https://developer.github.com/enterprise/2.21/v3/repos/deployments/#create-a-deployment)" and "[Create a deployment status](https://developer.github.com/enterprise/2.21/v3/repos/deployments/#create-a-deployment-status)."
      tags:
      - repos
      operationId: repos/delete-deployment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#delete-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses":
    get:
      summary: List deployment statuses
      description: 'Users with pull access can view deployment statuses for a deployment:'
      tags:
      - repos
      operationId: repos/list-deployment-statuses
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#list-deployment-statuses
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: flash
          note: |-
            New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.

            To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.flash-preview+json
            ```
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
    post:
      summary: Create a deployment status
      description: |-
        Users with `push` access can create deployment statuses for a given deployment.

        GitHub Apps require `read & write` access to "Deployments" and `read-only` access to "Repo contents" (for private repos). OAuth Apps require the `repo_deployment` scope.
      tags:
      - repos
      operationId: repos/create-deployment-status
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#create-a-deployment-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. Can be one of `error`, `failure`,
                    `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:**
                    To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type. To use the `in_progress` and `queued` states,
                    you must provide the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#deployment-statuses)
                    custom media type. When you set a transient deployment to `inactive`,
                    the deployment will be shown as `destroyed` in GitHub.
                  enum:
                  - error
                  - failure
                  - inactive
                  - in_progress
                  - queued
                  - pending
                  - success
                target_url:
                  type: string
                  description: The target URL to associate with this status. This
                    URL should contain output to keep the user updated while the task
                    is running or serve as historical information for what happened
                    in the deployment. **Note:** It's recommended to use the `log_url`
                    parameter, which replaces `target_url`.
                  default: ''
                log_url:
                  type: string
                  description: "The full URL of the deployment's output. This parameter
                    replaces `target_url`. We will continue to accept `target_url`
                    to support legacy uses, but we recommend replacing `target_url`
                    with `log_url`. Setting `log_url` will automatically set `target_url`
                    to the same value. Default: `\"\"`  \n**Note:** This parameter
                    requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type. **Note:** This parameter requires you to use
                    the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type."
                  default: ''
                description:
                  type: string
                  description: A short description of the status. The maximum description
                    length is 140 characters.
                  default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment, which can
                    be changed when setting a deploy status. For example, `production`,
                    `staging`, or `qa`. **Note:** This parameter requires you to use
                    the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#deployment-statuses)
                    custom media type.
                  enum:
                  - production
                  - staging
                  - qa
                environment_url:
                  type: string
                  description: "Sets the URL for accessing your environment. Default:
                    `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type. **Note:** This parameter requires you to use
                    the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type."
                  default: ''
                auto_inactive:
                  type: boolean
                  description: "Adds a new `inactive` status to all prior non-transient,
                    non-production environment deployments with the same repository
                    and `environment` name as the created status's deployment. An
                    `inactive` status is only added to deployments that had a `success`
                    state. Default: `true`  \n**Note:** To add an `inactive` status
                    to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#deployment-statuses)
                    custom media type.  \n**Note:** This parameter requires you to
                    use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.21/v3/previews/#enhanced-deployments)
                    custom media type."
              required:
              - state
            example:
              environment: production
              state: success
              log_url: https://example.com/deployment/42/output
              description: Deployment finished successfully.
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: flash
          note: |-
            New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.

            To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.flash-preview+json
            ```
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}":
    get:
      summary: Get a deployment status
      description: 'Users with pull access can view a deployment status for a deployment:'
      tags:
      - repos
      operationId: repos/get-deployment-status
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/deployments/#get-a-deployment-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment_id"
      - name: status_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        - required: false
          name: flash
          note: |-
            New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.

            To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.flash-preview+json
            ```
        - required: false
          name: ant-man
          note: |-
            The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.

            To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.ant-man-preview+json
            ```
        category: repos
        subcategory: deployments
  "/repos/{owner}/{repo}/events":
    get:
      summary: List repository events
      description: ''
      tags:
      - activity
      operationId: activity/list-repo-events
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-repository-events
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/repos/{owner}/{repo}/forks":
    get:
      summary: List forks
      description: ''
      tags:
      - repos
      operationId: repos/list-forks
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/forks/#list-forks
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sort
        description: The sort order. Can be either `newest`, `oldest`, or `stargazers`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - newest
          - oldest
          - stargazers
          default: newest
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '400':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: forks
    post:
      summary: Create a fork
      description: |-
        Create a fork for the authenticated user.

        **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Enterprise Server Support](https://github.com/contact) or [GitHub Enterprise Server Premium Support](https://premium.githubsupport.com).
      tags:
      - repos
      operationId: repos/create-fork
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/forks/#create-a-fork
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organization:
                  type: string
                  description: Optional parameter to specify the organization name
                    if forking into an organization.
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: forks
  "/repos/{owner}/{repo}/git/blobs":
    post:
      summary: Create a blob
      description: ''
      tags:
      - git
      operationId: git/create-blob
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/blobs/#create-a-blob
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The new blob's content.
                encoding:
                  type: string
                  description: The encoding used for `content`. Currently, `"utf-8"`
                    and `"base64"` are supported.
                  default: utf-8
              required:
              - content
            example:
              content: Content of the blob
              encoding: utf-8
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/short-blob"
              examples:
                default:
                  "$ref": "#/components/examples/short-blob"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: blobs
  "/repos/{owner}/{repo}/git/blobs/{file_sha}":
    get:
      summary: Get a blob
      description: |-
        The `content` in the response will always be Base64 encoded.

        _Note_: This API supports blobs up to 100 megabytes in size.
      tags:
      - git
      operationId: git/get-blob
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/blobs/#get-a-blob
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: file_sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/blob"
              examples:
                default:
                  "$ref": "#/components/examples/blob"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: blobs
  "/repos/{owner}/{repo}/git/commits":
    post:
      summary: Create a commit
      description: |-
        Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/create-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/commits/#create-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message
                tree:
                  type: string
                  description: The SHA of the tree object this commit points to
                parents:
                  type: array
                  description: The SHAs of the commits that were the parents of this
                    commit. If omitted or empty, the commit will be written as a root
                    commit. For a single parent, an array of one SHA should be provided;
                    for a merge commit, an array of more than one should be provided.
                  items:
                    type: string
                author:
                  type: object
                  description: Information about the author of the commit. By default,
                    the `author` will be the authenticated user and the current date.
                    See the `author` and `committer` object below for details.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                    date:
                      type: string
                      description: 'Indicates when this commit was authored (or committed).
                        This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                        format: `YYYY-MM-DDTHH:MM:SSZ`.'
                committer:
                  type: object
                  description: Information about the person who is making the commit.
                    By default, `committer` will use the information set in `author`.
                    See the `author` and `committer` object below for details.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                    date:
                      type: string
                      description: 'Indicates when this commit was authored (or committed).
                        This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                        format: `YYYY-MM-DDTHH:MM:SSZ`.'
                signature:
                  type: string
                  description: The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy)
                    of the commit. GitHub adds the signature to the `gpgsig` header
                    of the created commit. For a commit signature to be verifiable
                    by Git or GitHub, it must be an ASCII-armored detached PGP signature
                    over the string commit as it would be written to the object database.
                    To pass a `signature` parameter, you need to first manually create
                    a valid PGP signature, which can be complicated. You may find
                    it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work)
                    to create signed commits.
              required:
              - message
              - tree
            example:
              message: my commit message
              author:
                name: Mona Octocat
                email: octocat@github.com
                date: '2008-07-09T16:13:30+12:00'
              parents:
              - 7d1b31e74ee336d15cbd21741bc88a537ed063a0
              tree: 827efc6d56897b048c772eb4087f854f46256132
              signature: |
                -----BEGIN PGP SIGNATURE-----

                iQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv
                7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI
                DkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n
                2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA
                OQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k
                nrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU
                +NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB
                jHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ
                3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+
                UpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr
                X11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp
                eSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=
                =5Io4
                -----END PGP SIGNATURE-----
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-commit"
              examples:
                default:
                  "$ref": "#/components/examples/git-commit"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: commits
  "/repos/{owner}/{repo}/git/commits/{commit_sha}":
    get:
      summary: Get a commit
      description: |-
        Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/get-commit
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/commits/#get-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit_sha"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-commit"
              examples:
                default:
                  "$ref": "#/components/examples/git-commit-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: commits
  "/repos/{owner}/{repo}/git/matching-refs/{ref}":
    get:
      summary: List matching references
      description: |-
        Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.

        When you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.

        **Note:** You need to explicitly [request a pull request](https://developer.github.com/enterprise/2.21/v3/pulls/#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://developer.github.com/enterprise/2.21/v3/git/#checking-mergeability-of-pull-requests)".

        If you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.
      tags:
      - git
      operationId: git/list-matching-refs
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/refs/#list-matching-references
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/ref/{ref}":
    get:
      summary: Get a reference
      description: |-
        Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.

        **Note:** You need to explicitly [request a pull request](https://developer.github.com/enterprise/2.21/v3/pulls/#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://developer.github.com/enterprise/2.21/v3/git/#checking-mergeability-of-pull-requests)".
      tags:
      - git
      operationId: git/get-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/refs/#get-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs":
    post:
      summary: Create a reference
      description: Creates a reference for your repository. You are unable to create
        new references for empty repositories, even if the commit SHA-1 hash used
        exists. Empty repositories are repositories without branches.
      tags:
      - git
      operationId: git/create-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/refs/#create-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: 'The name of the fully qualified reference (ie: `refs/heads/master`).
                    If it doesn''t start with ''refs'' and have at least two slashes,
                    it will be rejected.'
                sha:
                  type: string
                  description: The SHA1 value for this reference.
                key:
                  type: string
                  example: '"refs/heads/newbranch"'
              required:
              - ref
              - sha
            example:
              ref: refs/heads/featureA
              sha: aa218f56b14c9653891f9e74264a383fa43fefbd
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs/{ref}":
    patch:
      summary: Update a reference
      description: ''
      tags:
      - git
      operationId: git/update-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/refs/#update-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sha:
                  type: string
                  description: The SHA1 value to set this reference to
                force:
                  type: boolean
                  description: Indicates whether to force the update or to make sure
                    the update is a fast-forward update. Leaving this out or setting
                    it to `false` will make sure you're not overwriting work.
                  default: false
              required:
              - sha
            example:
              sha: aa218f56b14c9653891f9e74264a383fa43fefbd
              force: true
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: refs
    delete:
      summary: Delete a reference
      description: ''
      tags:
      - git
      operationId: git/delete-ref
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/refs/#delete-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: ref+ parameter
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Empty response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/tags":
    post:
      summary: Create a tag object
      description: |-
        Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/enterprise/2.21/v3/git/refs/#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/enterprise/2.21/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/create-tag
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/tags/#create-a-tag-object
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: The tag's name. This is typically a version (e.g.,
                    "v0.0.1").
                message:
                  type: string
                  description: The tag message.
                object:
                  type: string
                  description: The SHA of the git object this is tagging.
                type:
                  type: string
                  description: The type of the object we're tagging. Normally this
                    is a `commit` but it can also be a `tree` or a `blob`.
                  enum:
                  - commit
                  - tree
                  - blob
                tagger:
                  type: object
                  description: An object with information about the individual creating
                    the tag.
                  properties:
                    name:
                      type: string
                      description: The name of the author of the tag
                    email:
                      type: string
                      description: The email of the author of the tag
                    date:
                      type: string
                      description: 'When this object was tagged. This is a timestamp
                        in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                        `YYYY-MM-DDTHH:MM:SSZ`.'
              required:
              - tag
              - message
              - object
              - type
            example:
              tag: v0.0.1
              message: initial version
              object: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
              type: commit
              tagger:
                name: Monalisa Octocat
                email: octocat@github.com
                date: '2011-06-17T14:53:35-07:00'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tag"
              examples:
                default:
                  "$ref": "#/components/examples/git-tag"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: tags
  "/repos/{owner}/{repo}/git/tags/{tag_sha}":
    get:
      summary: Get a tag
      description: |-
        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/get-tag
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/tags/#get-a-tag
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tag_sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tag"
              examples:
                default:
                  "$ref": "#/components/examples/git-tag"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: tags
  "/repos/{owner}/{repo}/git/trees":
    post:
      summary: Create a tree
      description: |-
        The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.

        If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see "[Create a commit](https://developer.github.com/enterprise/2.21/v3/git/commits/#create-a-commit)" and "[Update a reference](https://developer.github.com/enterprise/2.21/v3/git/refs/#update-a-reference)."
      tags:
      - git
      operationId: git/create-tree
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/trees/#create-a-tree
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tree:
                  type: array
                  description: Objects (of `path`, `mode`, `type`, and `sha`) specifying
                    a tree structure.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: The file referenced in the tree.
                      mode:
                        type: string
                        description: The file mode; one of `100644` for file (blob),
                          `100755` for executable (blob), `040000` for subdirectory
                          (tree), `160000` for submodule (commit), or `120000` for
                          a blob that specifies the path of a symlink.
                        enum:
                        - '100644'
                        - '100755'
                        - '040000'
                        - '160000'
                        - '120000'
                      type:
                        type: string
                        description: Either `blob`, `tree`, or `commit`.
                        enum:
                        - blob
                        - tree
                        - commit
                      sha:
                        type: string
                        description: "The SHA1 checksum ID of the object in the tree.
                          Also called `tree.sha`. If the value is `null` then the
                          file will be deleted.  \n  \n**Note:** Use either `tree.sha`
                          or `content` to specify the contents of the entry. Using
                          both `tree.sha` and `content` will return an error."
                        nullable: true
                      content:
                        type: string
                        description: "The content you want this file to have. GitHub
                          will write this blob out and use that SHA for this entry.
                          Use either this, or `tree.sha`.  \n  \n**Note:** Use either
                          `tree.sha` or `content` to specify the contents of the entry.
                          Using both `tree.sha` and `content` will return an error."
                base_tree:
                  type: string
                  description: The SHA1 of the tree you want to update with new data.
                    If you don't set this, the commit will be created on top of everything;
                    however, it will only contain your change, the rest of your files
                    will show up as deleted.
              required:
              - tree
            example:
              base_tree: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
              tree:
              - path: file.rb
                mode: '100644'
                type: blob
                sha: 44b4fc6d56897b048c772eb4087f854f46256132
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tree"
              examples:
                default:
                  "$ref": "#/components/examples/git-tree"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: trees
  "/repos/{owner}/{repo}/git/trees/{tree_sha}":
    get:
      summary: Get a tree
      description: |-
        Returns a single tree using the SHA1 value for that tree.

        If `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.
      tags:
      - git
      operationId: git/get-tree
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/git/trees/#get-a-tree
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tree_sha
        in: path
        required: true
        schema:
          type: string
      - name: recursive
        description: 'Setting this parameter to any value returns the objects or subtrees
          referenced by the tree specified in `:tree_sha`. For example, setting `recursive`
          to any of the following will enable returning objects or subtrees: `0`,
          `1`, `"true"`, and `"false"`. Omit this parameter to prevent recursively
          returning objects or subtrees.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tree"
              examples:
                default-response:
                  "$ref": "#/components/examples/git-tree-default-response"
                response-recursively-retrieving-a-tree:
                  "$ref": "#/components/examples/git-tree-response-recursively-retrieving-a-tree"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: git
        subcategory: trees
  "/repos/{owner}/{repo}/hooks":
    get:
      summary: List repository webhooks
      description: ''
      tags:
      - repos
      operationId: repos/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#list-repository-webhooks
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
    post:
      summary: Create a repository webhook
      description: |-
        Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can
        share the same `config` as long as those webhooks do not have any `events` that overlap.
      tags:
      - repos
      operationId: repos/create-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#create-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Use `web` to create a webhook. Default: `web`. This
                    parameter only accepts the value `web`.'
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                    [These are defined below](https://developer.github.com/enterprise/2.21/v3/repos/hooks/#create-hook-config-params).
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value for [delivery signature
                        headers](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers).
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                    token:
                      type: string
                      example: '"abc"'
                    digest:
                      type: string
                      example: '"md5"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
              required:
              - config
            example:
              name: web
              active: true
              events:
              - push
              - pull_request
              config:
                url: https://example.com/webhook
                content_type: json
                insecure_ssl: '0'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
  "/repos/{owner}/{repo}/hooks/{hook_id}":
    get:
      summary: Get a repository webhook
      description: ''
      tags:
      - repos
      operationId: repos/get-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#get-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
    patch:
      summary: Update a repository webhook
      description: ''
      tags:
      - repos
      operationId: repos/update-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#update-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                    [These are defined below](https://developer.github.com/enterprise/2.21/v3/repos/hooks/#create-hook-config-params).
                  properties:
                    url:
                      type: string
                      description: The URL to which the payloads will be delivered.
                    content_type:
                      type: string
                      description: The media type used to serialize the payloads.
                        Supported values include `json` and `form`. The default is
                        `form`.
                    secret:
                      type: string
                      description: If provided, the `secret` will be used as the `key`
                        to generate the HMAC hex digest value for [delivery signature
                        headers](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#delivery-headers).
                    insecure_ssl:
                      type: string
                      description: Determines whether the SSL certificate of the host
                        for `url` will be verified when delivering payloads. Supported
                        values include `0` (verification is performed) and `1` (verification
                        is not performed). The default is `0`. **We strongly recommend
                        not setting this to `1` as you are subject to man-in-the-middle
                        and other attacks.**
                    address:
                      type: string
                      example: '"bar@example.com"'
                    room:
                      type: string
                      example: '"The Serious Room"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://developer.github.com/enterprise/2.21/webhooks/event-payloads)
                    the hook is triggered for. This replaces the entire array of events.
                  default:
                  - push
                  items:
                    type: string
                add_events:
                  type: array
                  description: Determines a list of events to be added to the list
                    of events that the Hook triggers for.
                  items:
                    type: string
                remove_events:
                  type: array
                  description: Determines a list of events to be removed from the
                    list of events that the Hook triggers for.
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
            example:
              active: true
              add_events:
              - pull_request
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
    delete:
      summary: Delete a repository webhook
      description: ''
      tags:
      - repos
      operationId: repos/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#delete-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
  "/repos/{owner}/{repo}/hooks/{hook_id}/pings":
    post:
      summary: Ping a repository webhook
      description: This will trigger a [ping event](https://developer.github.com/enterprise/2.21/webhooks/#ping-event)
        to be sent to the hook.
      tags:
      - repos
      operationId: repos/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#ping-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
  "/repos/{owner}/{repo}/hooks/{hook_id}/tests":
    post:
      summary: Test the push repository webhook
      description: |-
        This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.

        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`
      tags:
      - repos
      operationId: repos/test-push-webhook
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/hooks/#test-the-push-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: hooks
  "/repos/{owner}/{repo}/installation":
    get:
      summary: Get a repository installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-repo-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-a-repository-installation-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/repos/{owner}/{repo}/invitations":
    get:
      summary: List repository invitations
      description: When authenticating as a user with admin rights to a repository,
        this endpoint will list all currently open repository invitations.
      tags:
      - repos
      operationId: repos/list-invitations
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#list-repository-invitations
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: invitations
  "/repos/{owner}/{repo}/invitations/{invitation_id}":
    patch:
      summary: Update a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/update-invitation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#update-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/invitation_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: string
                  description: The permissions that the associated user will have
                    on the repository. Valid values are `read`, `write`, `maintain`,
                    `triage`, and `admin`.
                  enum:
                  - read
                  - write
                  - maintain
                  - triage
                  - admin
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: invitations
    delete:
      summary: Delete a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/delete-invitation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#delete-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/invitation_id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: invitations
  "/repos/{owner}/{repo}/issues":
    get:
      summary: List repository issues
      description: |-
        List issues in a repository.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#list-repository-issues
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: milestone
        description: If an `integer` is passed, it should refer to a milestone by
          its `number` field. If the string `*` is passed, issues with any milestone
          are accepted. If the string `none` is passed, issues without milestones
          are returned.
        in: query
        required: false
        schema:
          type: string
      - name: state
        description: Indicates the state of the issues to return. Can be either `open`,
          `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: assignee
        description: Can be the name of a user. Pass in `none` for issues with no
          assigned user, and `*` for issues assigned to any user.
        in: query
        required: false
        schema:
          type: string
      - name: creator
        description: The user that created the issue.
        in: query
        required: false
        schema:
          type: string
      - name: mentioned
        description: A user that's mentioned in the issue.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by. Can be either `created`, `updated`,
          `comments`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-simple"
              examples:
                default:
                  "$ref": "#/components/examples/issue-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
    post:
      summary: Create an issue
      description: |-
        Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - issues
      operationId: issues/create
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#create-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the issue.
                body:
                  type: string
                  description: The contents of the issue.
                assignee:
                  type: string
                  description: 'Login for the user that this issue should be assigned
                    to. _NOTE: Only users with push access can set the assignee for
                    new issues. The assignee is silently dropped otherwise. **This
                    field is deprecated.**_'
                  nullable: true
                milestone:
                  type: integer
                  description: 'The `number` of the milestone to associate this issue
                    with. _NOTE: Only users with push access can set the milestone
                    for new issues. The milestone is silently dropped otherwise._'
                  nullable: true
                labels:
                  type: array
                  description: 'Labels to associate with this issue. _NOTE: Only users
                    with push access can set labels for new issues. Labels are silently
                    dropped otherwise._'
                  items:
                    oneOf:
                    - type: string
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        color:
                          type: string
                assignees:
                  type: array
                  description: 'Logins for Users to assign to this issue. _NOTE: Only
                    users with push access can set assignees for new issues. Assignees
                    are silently dropped otherwise._'
                  items:
                    type: string
              required:
              - title
            example:
              title: Found a bug
              body: I'm having a problem with this.
              assignees:
              - octocat
              milestone: 1
              labels:
              - bug
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/1347
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: 
  "/repos/{owner}/{repo}/issues/comments":
    get:
      summary: List issue comments for a repository
      description: By default, Issue Comments are ordered by ascending ID.
      tags:
      - issues
      operationId: issues/list-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#list-issue-comments-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: Either `asc` or `desc`. Ignored without the `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}":
    get:
      summary: Get an issue comment
      description: ''
      tags:
      - issues
      operationId: issues/get-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#get-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
        subcategory: comments
    patch:
      summary: Update an issue comment
      description: ''
      tags:
      - issues
      operationId: issues/update-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#update-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
              - body
            example:
              body: Me too
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: comments
    delete:
      summary: Delete an issue comment
      description: ''
      tags:
      - issues
      operationId: issues/delete-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#delete-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions":
    get:
      summary: List reactions for an issue comment
      description: List the reactions to an [issue comment](https://developer.github.com/enterprise/2.21/v3/issues/comments/).
      tags:
      - reactions
      operationId: reactions/list-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to an issue comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for an issue comment
      description: 'Create a reaction to an [issue comment](https://developer.github.com/enterprise/2.21/v3/issues/comments/).
        A response with a `Status: 200 OK` means that you already added the reaction
        type to this issue comment.'
      tags:
      - reactions
      operationId: reactions/create-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the issue comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete an issue comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.

        Delete a reaction to an [issue comment](https://developer.github.com/enterprise/2.21/v3/issues/comments/).
      tags:
      - reactions
      operationId: reactions/delete-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-an-issue-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/issues/events":
    get:
      summary: List issue events for a repository
      description: ''
      tags:
      - issues
      operationId: issues/list-events-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/events/#list-issue-events-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-event"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: starfox
          note: |-
            Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).

            To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.starfox-preview+json
            ```
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/events/{event_id}":
    get:
      summary: Get an issue event
      description: ''
      tags:
      - issues
      operationId: issues/get-event
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/events/#get-an-issue-event
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: event_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-event"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: starfox
          note: |-
            Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).

            To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.starfox-preview+json
            ```
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}":
    get:
      summary: Get an issue
      description: |-
        The API returns a [`301 Moved Permanently` status](https://developer.github.com/enterprise/2.21/v3/#http-redirects) if the issue was
        [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If
        the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
        returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read
        access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe
        to the [`issues`](https://developer.github.com/enterprise/2.21/webhooks/event-payloads/#issues) webhook.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#get-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: issues
        subcategory: 
    patch:
      summary: Update an issue
      description: Issue owners and users with push access can edit an issue.
      tags:
      - issues
      operationId: issues/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#update-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the issue.
                body:
                  type: string
                  description: The contents of the issue.
                assignee:
                  type: string
                  description: Login for the user that this issue should be assigned
                    to. **This field is deprecated.**
                state:
                  type: string
                  description: State of the issue. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                milestone:
                  type: integer
                  description: 'The `number` of the milestone to associate this issue
                    with or `null` to remove current. _NOTE: Only users with push
                    access can set the milestone for issues. The milestone is silently
                    dropped otherwise._'
                  nullable: true
                labels:
                  type: array
                  description: 'Labels to associate with this issue. Pass one or more
                    Labels to _replace_ the set of Labels on this Issue. Send an empty
                    array (`[]`) to clear all Labels from the Issue. _NOTE: Only users
                    with push access can set labels for issues. Labels are silently
                    dropped otherwise._'
                  items:
                    oneOf:
                    - type: string
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        color:
                          type: string
                assignees:
                  type: array
                  description: 'Logins for Users to assign to this issue. Pass one
                    or more user logins to _replace_ the set of assignees on this
                    Issue. Send an empty array (`[]`) to clear all assignees from
                    the Issue. _NOTE: Only users with push access can set assignees
                    for new issues. Assignees are silently dropped otherwise._'
                  items:
                    type: string
            example:
              title: Found a bug
              body: I'm having a problem with this.
              assignees:
              - octocat
              milestone: 1
              state: open
              labels:
              - bug
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '403':
          "$ref": "#/components/responses/forbidden"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: 
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees":
    post:
      summary: Add assignees to an issue
      description: Adds up to 10 assignees to an issue. Users already assigned to
        an issue are not replaced.
      tags:
      - issues
      operationId: issues/add-assignees
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/assignees/#add-assignees-to-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of people to assign this issue to. _NOTE:
                    Only users with push access can add assignees to an issue. Assignees
                    are silently ignored otherwise._'
                  items:
                    type: string
            example:
              assignees:
              - hubot
              - other_user
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-simple"
              examples:
                default:
                  "$ref": "#/components/examples/issue-simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: assignees
    delete:
      summary: Remove assignees from an issue
      description: Removes one or more assignees from an issue.
      tags:
      - issues
      operationId: issues/remove-assignees
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/assignees/#remove-assignees-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of assignees to remove from an issue. _NOTE:
                    Only users with push access can remove assignees from an issue.
                    Assignees are silently ignored otherwise._'
                  items:
                    type: string
            example:
              assignees:
              - hubot
              - other_user
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-simple"
              examples:
                default:
                  "$ref": "#/components/examples/issue-simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/issues/{issue_number}/comments":
    get:
      summary: List issue comments
      description: Issue Comments are ordered by ascending ID.
      tags:
      - issues
      operationId: issues/list-comments
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#list-issue-comments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: issues
        subcategory: comments
    post:
      summary: Create an issue comment
      description: This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse rate
        limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)"
        and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      tags:
      - issues
      operationId: issues/create-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/comments/#create-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
              - body
            example:
              body: Me too
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/{issue_number}/events":
    get:
      summary: List issue events
      description: ''
      tags:
      - issues
      operationId: issues/list-events
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/events/#list-issue-events
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-event-for-issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event-for-issue-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: starfox
          note: |-
            Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).

            To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.starfox-preview+json
            ```
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}/labels":
    get:
      summary: List labels for an issue
      description: ''
      tags:
      - issues
      operationId: issues/list-labels-on-issue
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#list-labels-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    post:
      summary: Add labels to an issue
      description: ''
      tags:
      - issues
      operationId: issues/add-labels
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#add-labels-to-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                labels:
                  type: array
                  description: The name of the label to add to the issue. Must contain
                    at least one label. **Note:** Alternatively, you can pass a single
                    label as a `string` or an `array` of labels directly, but GitHub
                    recommends passing an object with the `labels` key.
                  items:
                    type: string
              required:
              - labels
            example:
              labels:
              - bug
              - enhancement
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    put:
      summary: Set labels for an issue
      description: Removes any previous labels and sets the new labels for an issue.
      tags:
      - issues
      operationId: issues/set-labels
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#set-labels-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                labels:
                  type: array
                  description: The names of the labels to add to the issue. You can
                    pass an empty array to remove all labels. **Note:** Alternatively,
                    you can pass a single label as a `string` or an `array` of labels
                    directly, but GitHub recommends passing an object with the `labels`
                    key.
                  items:
                    type: string
            example:
              labels:
              - bug
              - enhancement
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    delete:
      summary: Remove all labels from an issue
      description: ''
      tags:
      - issues
      operationId: issues/remove-all-labels
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#remove-all-labels-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      responses:
        '204':
          description: Empty response
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}":
    delete:
      summary: Remove a label from an issue
      description: Removes the specified label from the issue, and returns the remaining
        labels on the issue. This endpoint returns a `404 Not Found` status if the
        label does not exist.
      tags:
      - issues
      operationId: issues/remove-label
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#remove-a-label-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items-2"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/lock":
    put:
      summary: Lock an issue
      description: |-
        Users with push access can lock an issue or pull request's conversation.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - issues
      operationId: issues/lock
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#lock-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lock_reason:
                  type: string
                  description: "The reason for locking the issue or pull request conversation.
                    Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`
                    \ \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`"
                  enum:
                  - off-topic
                  - too heated
                  - resolved
                  - spam
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '410':
          "$ref": "#/components/responses/gone"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: issues
    delete:
      summary: Unlock an issue
      description: Users with push access can unlock an issue's conversation.
      tags:
      - issues
      operationId: issues/unlock
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#unlock-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: 
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions":
    get:
      summary: List reactions for an issue
      description: List the reactions to an [issue](https://developer.github.com/enterprise/2.21/v3/issues/).
      tags:
      - reactions
      operationId: reactions/list-for-issue
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to an issue.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for an issue
      description: 'Create a reaction to an [issue](https://developer.github.com/enterprise/2.21/v3/issues/).
        A response with a `Status: 200 OK` means that you already added the reaction
        type to this issue.'
      tags:
      - reactions
      operationId: reactions/create-for-issue
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the issue.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}":
    delete:
      summary: Delete an issue reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.

        Delete a reaction to an [issue](https://developer.github.com/enterprise/2.21/v3/issues/).
      tags:
      - reactions
      operationId: reactions/delete-for-issue
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-an-issue-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/issues/{issue_number}/timeline":
    get:
      summary: List timeline events for an issue
      description: ''
      tags:
      - issues
      operationId: issues/list-events-for-timeline
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/timeline/#list-timeline-events-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue_number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-event-for-issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event-for-issue-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: mockingbird
          note: |-
            The API to get issue timeline events is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/) for full details. To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mockingbird-preview
            ```
        - required: false
          name: starfox
          note: |-
            Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](https://developer.github.com/changes/2018-09-05-project-card-events).

            To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.starfox-preview+json
            ```
        category: issues
        subcategory: timeline
  "/repos/{owner}/{repo}/keys":
    get:
      summary: List deploy keys
      description: ''
      tags:
      - repos
      operationId: repos/list-deploy-keys
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/keys/#list-deploy-keys
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: keys
    post:
      summary: Create a deploy key
      description: You can create a read-only deploy key.
      tags:
      - repos
      operationId: repos/create-deploy-key
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/keys/#create-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: A name for the key.
                key:
                  type: string
                  description: The contents of the key.
                read_only:
                  type: boolean
                  description: "If `true`, the key will only be able to read repository
                    contents. Otherwise, the key will be able to read and write.  \n
                    \ \nDeploy keys with write access can perform the same actions
                    as an organization member with admin access, or a collaborator
                    on a personal repository. For more information, see \"[Repository
                    permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\"
                    and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\""
              required:
              - key
            example:
              title: octocat@octomac
              key: ssh-rsa AAA...
              read_only: true
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/keys/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: keys
  "/repos/{owner}/{repo}/keys/{key_id}":
    get:
      summary: Get a deploy key
      description: ''
      tags:
      - repos
      operationId: repos/get-deploy-key
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/keys/#get-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/key_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: keys
    delete:
      summary: Delete a deploy key
      description: Deploy keys are immutable. If you need to update a key, remove
        the key and create a new one instead.
      tags:
      - repos
      operationId: repos/delete-deploy-key
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/keys/#delete-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/key_id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: keys
  "/repos/{owner}/{repo}/labels":
    get:
      summary: List labels for a repository
      description: ''
      tags:
      - issues
      operationId: issues/list-labels-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#list-labels-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    post:
      summary: Create a label
      description: ''
      tags:
      - issues
      operationId: issues/create-label
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#create-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the label. Emoji can be added to label
                    names, using either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and codes,
                    see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/)
                    for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label.
              required:
              - name
            example:
              name: bug
              description: Something isn't working
              color: f29513
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/labels/bug
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/labels/{name}":
    get:
      summary: Get a label
      description: ''
      tags:
      - issues
      operationId: issues/get-label
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#get-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    patch:
      summary: Update a label
      description: ''
      tags:
      - issues
      operationId: issues/update-label
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#update-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the label. Emoji can be added to label
                    names, using either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and codes,
                    see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/)
                    for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label.
            example:
              new_name: 'bug :bug:'
              description: Small bug fix required
              color: b01f26
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
    delete:
      summary: Delete a label
      description: ''
      tags:
      - issues
      operationId: issues/delete-label
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#delete-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/languages":
    get:
      summary: List repository languages
      description: Lists languages for the specified repository. The value shown for
        each language is the number of bytes of code written in that language.
      tags:
      - repos
      operationId: repos/list-languages
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repository-languages
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/language"
              examples:
                default:
                  "$ref": "#/components/examples/language"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/license":
    get:
      summary: Get the license for a repository
      description: |-
        This method returns the contents of the repository's license file, if one is detected.

        Similar to [Get repository content](https://developer.github.com/enterprise/2.21/v3/repos/contents/#get-repository-content), this method also supports [custom media types](https://developer.github.com/enterprise/2.21/v3/repos/contents/#custom-media-types) for retrieving the raw license content or rendered license HTML.
      tags:
      - licenses
      operationId: licenses/get-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/licenses/#get-the-license-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/license-content"
              examples:
                default:
                  "$ref": "#/components/examples/license-content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: licenses
        subcategory: 
  "/repos/{owner}/{repo}/merges":
    post:
      summary: Merge a branch
      description: ''
      tags:
      - repos
      operationId: repos/merge
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/merging/#merge-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base:
                  type: string
                  description: The name of the base branch that the head will be merged
                    into.
                head:
                  type: string
                  description: The head to merge. This can be a branch name or a commit
                    SHA1.
                commit_message:
                  type: string
                  description: Commit message to use for the merge commit. If omitted,
                    a default message will be used.
              required:
              - base
              - head
            example:
              base: master
              head: cool_feature
              commit_message: Shipped cool_feature!
      responses:
        '201':
          description: Successful Response (The resulting merge commit)
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit"
        '404':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                    example: '"https://developer.github.com/enterprise/2.21/v3/repos/merging/#perform-a-merge"'
              examples:
                missing-base-response:
                  summary: Missing base response
                  value:
                    message: Base does not exist
                missing-head-response:
                  summary: Missing head response
                  value:
                    message: Head does not exist
        '409':
          description: Merge conflict response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                    example: '"https://developer.github.com/enterprise/2.21/v3/repos/merging/#perform-a-merge"'
              examples:
                merge-conflict-response:
                  value:
                    message: Merge Conflict
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: merging
  "/repos/{owner}/{repo}/milestones":
    get:
      summary: List milestones
      description: ''
      tags:
      - issues
      operationId: issues/list-milestones
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/milestones/#list-milestones
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: The state of the milestone. Either `open`, `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: sort
        description: What to sort results by. Either `due_on` or `completeness`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - due_on
          - completeness
          default: due_on
      - name: direction
        description: The direction of the sort. Either `asc` or `desc`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
          default: asc
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: milestones
    post:
      summary: Create a milestone
      description: ''
      tags:
      - issues
      operationId: issues/create-milestone
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/milestones/#create-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  description: 'The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
              required:
              - title
            example:
              title: v1.0
              state: open
              description: Tracking milestone for version 1.0
              due_on: '2012-10-09T23:39:01Z'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/milestones/1
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}":
    get:
      summary: Get a milestone
      description: ''
      tags:
      - issues
      operationId: issues/get-milestone
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/milestones/#get-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone_number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: milestones
    patch:
      summary: Update a milestone
      description: ''
      tags:
      - issues
      operationId: issues/update-milestone
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/milestones/#update-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone_number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  description: 'The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
            example:
              title: v1.0
              state: open
              description: Tracking milestone for version 1.0
              due_on: '2012-10-09T23:39:01Z'
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: milestones
    delete:
      summary: Delete a milestone
      description: ''
      tags:
      - issues
      operationId: issues/delete-milestone
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/milestones/#delete-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone_number"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}/labels":
    get:
      summary: List labels for issues in a milestone
      description: ''
      tags:
      - issues
      operationId: issues/list-labels-for-milestone
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/labels/#list-labels-for-issues-in-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone_number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/notifications":
    get:
      summary: List repository notifications for the authenticated user
      description: List all notifications for the current user.
      tags:
      - activity
      operationId: activity/list-repo-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#list-repository-notifications-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/all"
      - "$ref": "#/components/parameters/participating"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/before"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
    put:
      summary: Mark repository notifications as read
      description: Marks all notifications in a repository as "read" removes them
        from the [default view on GitHub Enterprise Server](https://github.com/notifications).
        If the number of notifications is too large to complete in one request, you
        will receive a `202 Accepted` status and GitHub Enterprise Server will run
        an asynchronous process to mark notifications as "read." To check whether
        any "unread" notifications remain, you can use the [List repository notifications
        for the authenticated user](https://developer.github.com/enterprise/2.21/v3/activity/notifications/#list-repository-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
      - activity
      operationId: activity/mark-repo-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/notifications/#mark-repository-notifications-as-read
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  type: string
                  description: 'Describes the last point that notifications were checked.
                    Anything updated since this time will not be marked as read. If
                    you omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                    format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.'
      responses:
        '202':
          description: response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: notifications
  "/repos/{owner}/{repo}/pages":
    get:
      summary: Get a GitHub Enterprise Server Pages site
      description: ''
      tags:
      - repos
      operationId: repos/get-pages
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#get-a-github-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page"
              examples:
                default:
                  "$ref": "#/components/examples/page"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
    post:
      summary: Create a GitHub Pages site
      description: Configures a GitHub Enterprise Server Pages site. For more information,
        see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages)."
      tags:
      - repos
      operationId: repos/create-pages-site
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#create-a-github-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The source branch and directory used to publish your Pages
                site.
              properties:
                source:
                  type: object
                  description: The source branch and directory used to publish your
                    Pages site.
                  properties:
                    branch:
                      type: string
                      description: The repository branch used to publish your site's
                        source files. Can be either `master` or `gh-pages`.
                      enum:
                      - master
                      - gh-pages
                    path:
                      type: string
                      description: The repository directory that includes the source
                        files for the Pages site. When `branch` is `master`, you can
                        change `path` to `/docs`. When `branch` is `gh-pages`, you
                        are unable to specify a `path` other than `/`.
                      enum:
                      - "/"
                      - "/docs"
                      default: "/"
                  required:
                  - branch
              required:
              - source
            example:
              source:
                branch: master
                path: "/docs"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page"
              examples:
                default:
                  "$ref": "#/components/examples/page"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: switcheroo
          note: |-
            Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.switcheroo-preview+json
            ```
        category: repos
        subcategory: pages
    put:
      summary: Update information about a GitHub Pages site
      description: Updates information for a GitHub Enterprise Server Pages site.
        For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).
      tags:
      - repos
      operationId: repos/update-information-about-pages-site
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#update-information-about-a-github-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  anyOf:
                  - type: string
                    description: Update the source for the repository. Must include
                      the branch name, and may optionally specify the subdirectory
                      `/docs`. Possible values are `"gh-pages"`, `"master"`, and `"master
                      /docs"`.
                    enum:
                    - gh-pages
                    - master
                    - master /docs
                  - type: object
                    description: Update the source for the repository. Must include
                      the branch name and path.
                    properties:
                      branch:
                        type: string
                        description: The repository branch used to publish your site's
                          source files.
                      path:
                        type: string
                        description: The repository directory that includes the source
                          files for the Pages site. Allowed paths are `/` or `/docs`.
                        enum:
                        - "/"
                        - "/docs"
                    required:
                    - branch
                    - path
                  type: string
                  description: Update the source for the repository. Must include
                    the branch name, and may optionally specify the subdirectory `/docs`.
                    Possible values are `"gh-pages"`, `"master"`, and `"master /docs"`.
                  enum:
                  - gh-pages
                  - master
                  - master /docs
            example:
              source: master /docs
      responses:
        '204':
          description: Empty response
        '422':
          "$ref": "#/components/responses/validation_failed"
        '400':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
    delete:
      summary: Delete a GitHub Enterprise Server Pages site
      description: ''
      tags:
      - repos
      operationId: repos/delete-pages-site
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#delete-a-github-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
        '422':
          "$ref": "#/components/responses/validation_failed"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: switcheroo
          note: |-
            Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.switcheroo-preview+json
            ```
        category: repos
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds":
    get:
      summary: List GitHub Enterprise Server Pages builds
      description: ''
      tags:
      - repos
      operationId: repos/list-pages-builds
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#list-github-pages-builds
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
    post:
      summary: Request a GitHub Enterprise Server Pages build
      description: |-
        You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.

        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.
      tags:
      - repos
      operationId: repos/request-pages-build
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#request-a-github-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build-status"
              examples:
                default:
                  "$ref": "#/components/examples/page-build-status"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/latest":
    get:
      summary: Get latest Pages build
      description: ''
      tags:
      - repos
      operationId: repos/get-latest-pages-build
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#get-latest-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/{build_id}":
    get:
      summary: Get GitHub Enterprise Server Pages build
      description: ''
      tags:
      - repos
      operationId: repos/get-pages-build
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/pages/#get-github-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: build_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: pages
  "/repos/{owner}/{repo}/pre-receive-hooks":
    get:
      summary: List pre-receive hooks for a repository
      description: List all pre-receive hooks that are enabled or testing for this
        repository as well as any disabled hooks that are allowed to be enabled at
        the repository level. Pre-receive hooks that are disabled at a higher level
        and are not configurable will not be listed.
      operationId: enterprise-admin/list-pre-receive-hooks-for-repo
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/repo_pre_receive_hooks/#list-pre-receive-hooks-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/repository-pre-receive-hook-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: repo-pre-receive-hooks
  "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}":
    get:
      summary: Get a pre-receive hook for a repository
      description: ''
      operationId: enterprise-admin/get-pre-receive-hook-for-repo
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/repo_pre_receive_hooks/#get-a-pre-receive-hook-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/repository-pre-receive-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: repo-pre-receive-hooks
    patch:
      summary: Update pre-receive hook enforcement for a repository
      description: For pre-receive hooks which are allowed to be configured at the
        repo level, you can set `enforcement`
      operationId: enterprise-admin/update-pre-receive-hook-enforcement-for-repo
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/repo_pre_receive_hooks/#update-pre-receive-hook-enforcement-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/repository-pre-receive-hook-2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enforcement:
                  description: The state of enforcement for the hook on this repository.
                  type: string
            example:
              enforcement: enabled
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: repo-pre-receive-hooks
    delete:
      summary: Remove pre-receive hook enforcement for a repository
      description: |-
        Deletes any overridden enforcement on this repository for the specified hook.

        Responds with effective values inherited from owner and/or global level.
      operationId: enterprise-admin/remove-pre-receive-hook-enforcement-for-repo
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/repo_pre_receive_hooks/#remove-pre-receive-hook-enforcement-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pre-receive-hook-id"
      responses:
        '200':
          description: Responds with effective values inherited from owner and/or
            global level.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-pre-receive-hook"
              examples:
                default:
                  "$ref": "#/components/examples/repository-pre-receive-hook"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: eye-scream
          note: |-
            APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.

            To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:

            ```shell
            application/vnd.github.eye-scream-preview
            ```
        category: enterprise-admin
        subcategory: repo-pre-receive-hooks
  "/repos/{owner}/{repo}/projects":
    get:
      summary: List repository projects
      description: Lists the projects in a repository. Returns a `404 Not Found` status
        if projects are disabled in the repository. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#list-repository-projects
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: Indicates the state of the projects to return. Can be either
          `open`, `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
    post:
      summary: Create a repository project
      description: Creates a repository project board. Returns a `404 Not Found` status
        if projects are disabled in the repository. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/create-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#create-a-repository-project
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
              - name
            example:
              name: Projects Documentation
              body: Developer documentation project for the developer site.
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
  "/repos/{owner}/{repo}/pulls":
    get:
      summary: List pull requests
      description: Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository
        billing plans, and in public and private repositories with GitHub Team, GitHub
        Enterprise Server 2.17+, and GitHub Enterprise Cloud.
      tags:
      - pulls
      operationId: pulls/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: Either `open`, `closed`, or `all` to filter by state.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: head
        description: 'Filter pulls by head user or head organization and branch name
          in the format of `user:ref-name` or `organization:ref-name`. For example:
          `github:new-script-format` or `octocat:test-branch`.'
        in: query
        required: false
        schema:
          type: string
      - name: base
        description: 'Filter pulls by base branch name. Example: `gh-pages`.'
        in: query
        required: false
        schema:
          type: string
      - name: sort
        description: What to sort results by. Can be either `created`, `updated`,
          `popularity` (comment count) or `long-running` (age, filtering by pulls
          updated in the last month).
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - popularity
          - long-running
          default: created
      - name: direction
        description: 'The direction of the sort. Can be either `asc` or `desc`. Default:
          `desc` when sort is `created` or sort is not specified, otherwise `asc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: pulls
    post:
      summary: Create a pull request
      description: Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository
        billing plans, and in public and private repositories with GitHub Team, GitHub
        Enterprise Server 2.17+, and GitHub Enterprise Cloud. You can create a new
        pull request. This endpoint triggers [notifications](https://docs.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse rate
        limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)"
        for details.
      tags:
      - pulls
      operationId: pulls/create
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#create-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the new pull request.
                head:
                  type: string
                  description: 'The name of the branch where your changes are implemented.
                    For cross-repository pull requests in the same network, namespace
                    `head` with a user like this: `username:branch`.'
                base:
                  type: string
                  description: The name of the branch you want the changes pulled
                    into. This should be an existing branch on the current repository.
                    You cannot submit a pull request to one repository that requests
                    a merge to a base of another repository.
                body:
                  type: string
                  description: The contents of the pull request.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
                draft:
                  type: boolean
                  description: Indicates whether the pull request is a draft. See
                    "[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)"
                    in the GitHub Help documentation to learn more.
                issue:
                  type: integer
                  example: '1'
              required:
              - head
              - base
            example:
              title: Amazing new feature
              body: Please pull these awesome changes in!
              head: octocat:new-feature
              base: master
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: pulls
  "/repos/{owner}/{repo}/pulls/comments":
    get:
      summary: List review comments in a repository
      description: |-
        **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.

        Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.

        **Multi-line comment summary**

        **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-10-03-multi-line-comments) for full details.

        Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.

        If you use the `comfort-fade` preview header, your response will show:

        *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
        *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.

        If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:

        *   For multi-line comments, the last line of the comment range for the `position` attribute.
        *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#parameters-2) table.

        The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/enterprise/2.21/v3/reactions) reactions.
      tags:
      - pulls
      operationId: pulls/list-review-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#list-review-comments-in-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: comfort-fade
          note: |-
            Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.comfort-fade-preview+json
            ```
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}":
    get:
      summary: Get a review comment for a pull request
      description: |-
        **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.

        Provides details for a review comment.

        **Multi-line comment summary**

        **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-10-03-multi-line-comments) for full details.

        Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.

        If you use the `comfort-fade` preview header, your response will show:

        *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
        *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.

        If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:

        *   For multi-line comments, the last line of the comment range for the `position` attribute.
        *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#parameters-2) table.

        The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/enterprise/2.21/v3/reactions) reactions.
      tags:
      - pulls
      operationId: pulls/get-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#get-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: comfort-fade
          note: |-
            Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.comfort-fade-preview+json
            ```
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: pulls
        subcategory: comments
    patch:
      summary: Update a review comment for a pull request
      description: |-
        **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.

        Enables you to edit a review comment.

        **Multi-line comment summary**

        **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-10-03-multi-line-comments) for full details.

        Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.

        If you use the `comfort-fade` preview header, your response will show:

        *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
        *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.

        If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:

        *   For multi-line comments, the last line of the comment range for the `position` attribute.
        *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#parameters-2) table.
      tags:
      - pulls
      operationId: pulls/update-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#update-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the reply to the review comment.
              required:
              - body
            example:
              body: I like this too!
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: comfort-fade
          note: |-
            Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.comfort-fade-preview+json
            ```
        category: pulls
        subcategory: comments
    delete:
      summary: Delete a review comment for a pull request
      description: Deletes a review comment.
      tags:
      - pulls
      operationId: pulls/delete-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#delete-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions":
    get:
      summary: List reactions for a pull request review comment
      description: List the reactions to a [pull request review comment](https://developer.github.com/enterprise/2.21/v3/pulls/comments/).
      tags:
      - reactions
      operationId: reactions/list-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-pull-request-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a pull request review comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
    post:
      summary: Create reaction for a pull request review comment
      description: 'Create a reaction to a [pull request review comment](https://developer.github.com/enterprise/2.21/v3/pulls/comments/).
        A response with a `Status: 200 OK` means that you already added the reaction
        type to this pull request review comment.'
      tags:
      - reactions
      operationId: reactions/create-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-pull-request-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the pull request review comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete a pull request comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`

        Delete a reaction to a [pull request review comment](https://developer.github.com/enterprise/2.21/v3/pulls/comments/).
      tags:
      - reactions
      operationId: reactions/delete-for-pull-request-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#delete-a-pull-request-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment_id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: reactions
        subcategory: 
  "/repos/{owner}/{repo}/pulls/{pull_number}":
    get:
      summary: Get a pull request
      description: |-
        Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists details of a pull request by providing its number.

        When you get, [create](https://developer.github.com/enterprise/2.21/v3/pulls/#create-a-pull-request), or [edit](https://developer.github.com/enterprise/2.21/v3/pulls/#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see "[Checking mergeability of pull requests](https://developer.github.com/enterprise/2.21/v3/git/#checking-mergeability-of-pull-requests)".

        The value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.

        The value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:

        *   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.
        *   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.
        *   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.

        Pass the appropriate [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.
      tags:
      - pulls
      operationId: pulls/get
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#get-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      responses:
        '200':
          description: Pass the appropriate [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests)
            to fetch diff and patch formats.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
        '304':
          "$ref": "#/components/responses/not_modified"
        '500':
          "$ref": "#/components/responses/internal_error"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: 
    patch:
      summary: Update a pull request
      description: Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository
        billing plans, and in public and private repositories with GitHub Team, GitHub
        Enterprise Server 2.17+, and GitHub Enterprise Cloud.
      tags:
      - pulls
      operationId: pulls/update
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#update-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the pull request.
                body:
                  type: string
                  description: The contents of the pull request.
                state:
                  type: string
                  description: State of this Pull Request. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                base:
                  type: string
                  description: The name of the branch you want your changes pulled
                    into. This should be an existing branch on the current repository.
                    You cannot update the base branch on a pull request to point to
                    another repository.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
            example:
              title: new title
              body: updated body
              state: open
              base: master
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: sailor-v
          note: |-
            You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.sailor-v-preview+json
            ```
        category: pulls
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments":
    get:
      summary: List review comments on a pull request
      description: |-
        **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.

        Lists all review comments for a pull request. By default, review comments are in ascending order by ID.

        **Multi-line comment summary**

        **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-10-03-multi-line-comments) for full details.

        Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.

        If you use the `comfort-fade` preview header, your response will show:

        *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
        *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.

        If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:

        *   For multi-line comments, the last line of the comment range for the `position` attribute.
        *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#parameters-2) table.

        The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/enterprise/2.21/v3/reactions) reactions.
      tags:
      - pulls
      operationId: pulls/list-review-comments
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#list-review-comments-on-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: comfort-fade
          note: |-
            Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.comfort-fade-preview+json
            ```
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        category: pulls
        subcategory: comments
    post:
      summary: Create a review comment for a pull request
      description: |-
        **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.

        Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "[Create an issue comment](https://developer.github.com/enterprise/2.21/v3/issues/comments/#create-an-issue-comment)." We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.

        You can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see [Multi-line comment summary](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#multi-line-comment-summary-3).

        **Note:** The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

        **Multi-line comment summary**

        **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/enterprise/2.21/changes/2019-10-03-multi-line-comments) for full details.

        Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.

        If you use the `comfort-fade` preview header, your response will show:

        *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
        *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.

        If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:

        *   For multi-line comments, the last line of the comment range for the `position` attribute.
        *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/enterprise/2.21/v3/pulls/comments/#parameters-2) table.
      tags:
      - pulls
      operationId: pulls/create-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#create-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
                commit_id:
                  type: string
                  description: The SHA of the commit needing a comment. Not using
                    the latest commit SHA may render your comment outdated if a subsequent
                    commit modifies the line you specify as the `position`.
                path:
                  type: string
                  description: The relative path to the file that necessitates a comment.
                position:
                  type: integer
                  description: "**Required without `comfort-fade` preview**. The position
                    in the diff where you want to add a review comment. Note this
                    value is not the same as the line number in the file. For help
                    finding the position value, read the note above."
                side:
                  type: string
                  description: '**Required with `comfort-fade` preview**. In a split
                    diff view, the side of the diff that the pull request''s changes
                    appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions
                    that appear in red. Use `RIGHT` for additions that appear in green
                    or unchanged lines that appear in white and are shown for context.
                    For a multi-line comment, side represents whether the last line
                    of the comment range is a deletion or addition. For more information,
                    see "[Diff view options](https://help.github.com/en/articles/about-comparing-branches-in-pull-requests#diff-view-options)"
                    in the GitHub Help documentation.'
                  enum:
                  - LEFT
                  - RIGHT
                line:
                  type: integer
                  description: "**Required with `comfort-fade` preview**. The line
                    of the blob in the pull request diff that the comment applies
                    to. For a multi-line comment, the last line of the range that
                    your comment applies to."
                start_line:
                  type: integer
                  description: '**Required when using multi-line comments**. To create
                    multi-line comments, you must use the `comfort-fade` preview header.
                    The `start_line` is the first line in the pull request diff that
                    your multi-line comment applies to. To learn more about multi-line
                    comments, see "[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation.'
                start_side:
                  type: string
                  description: '**Required when using multi-line comments**. To create
                    multi-line comments, you must use the `comfort-fade` preview header.
                    The `start_side` is the starting side of the diff that the comment
                    applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line
                    comments, see "[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation. See `side` in this table for
                    additional context.'
                  enum:
                  - LEFT
                  - RIGHT
                  - side
                in_reply_to:
                  type: integer
                  example: '2'
              required:
              - body
              - path
            examples:
              example-for-a-single-line-comment:
                summary: Example for a single-line comment
                value:
                  body: Let's add this deleted line back.
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  path: file1.txt
                  line: 5
                  side: LEFT
              example-for-a-multi-line-comment:
                summary: Example for a multi-line comment
                value:
                  body: Great stuff!
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  path: file1.txt
                  start_line: 1
                  start_side: RIGHT
                  line: 2
                  side: RIGHT
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                example-for-a-multi-line-comment:
                  "$ref": "#/components/examples/pull-request-review-comment-example-for-a-multi-line-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: comfort-fade
          note: |-
            Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.comfort-fade-preview+json
            ```
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies":
    post:
      summary: Create a reply for a review comment
      description: |-
        Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/create-reply-for-review-comment
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/comments/#create-a-reply-for-a-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
              required:
              - body
            example:
              body: Great stuff!
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/{pull_number}/commits":
    get:
      summary: List commits on a pull request
      description: Lists a maximum of 250 commits for a pull request. To receive a
        complete commit list for pull requests with more than 250 commits, use the
        [List commits](https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-commits)
        endpoint.
      tags:
      - pulls
      operationId: pulls/list-commits
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#list-commits-on-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-commit"
              examples:
                default:
                  "$ref": "#/components/examples/simple-commit-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: 
  "/repos/{owner}/{repo}/pulls/{pull_number}/files":
    get:
      summary: List pull requests files
      description: "**Note:** Responses include a maximum of 3000 files. The paginated
        response returns 30 files per page by default."
      tags:
      - pulls
      operationId: pulls/list-files
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests-files
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/diff-entry"
              examples:
                default:
                  "$ref": "#/components/examples/diff-entry-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: 
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge":
    get:
      summary: Check if a pull request has been merged
      description: ''
      tags:
      - pulls
      operationId: pulls/check-if-merged
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#check-if-a-pull-request-has-been-merged
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      responses:
        '204':
          description: Response if pull request has been merged
        '404':
          description: Response if pull request has not been merged
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: 
    put:
      summary: Merge a pull request
      description: This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse rate
        limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)"
        and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      tags:
      - pulls
      operationId: pulls/merge
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#merge-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_title:
                  type: string
                  description: Title for the automatic commit message.
                commit_message:
                  type: string
                  description: Extra detail to append to automatic commit message.
                sha:
                  type: string
                  description: SHA that pull request head must match to allow merge.
                merge_method:
                  type: string
                  description: Merge method to use. Possible values are `merge`, `squash`
                    or `rebase`. Default is `merge`.
                  enum:
                  - merge
                  - squash
                  - rebase
      responses:
        '200':
          description: Response if merge was successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-merge-result"
              examples:
                response-if-merge-was-successful:
                  "$ref": "#/components/examples/pull-request-merge-result-response-if-merge-was-successful"
        '405':
          description: Response if merge cannot be performed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-merge-cannot-be-performed:
                  value:
                    message: Pull Request is not mergeable
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/pulls/#merge-a-pull-request-merge-button
        '409':
          description: Response if sha was provided and pull request head did not
            match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-sha-was-provided-and-pull-request-head-did-not-match:
                  value:
                    message: Head branch was modified. Review and try the merge again.
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/pulls/#merge-a-pull-request-merge-button
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: 
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers":
    get:
      summary: List requested reviewers for a pull request
      description: ''
      tags:
      - pulls
      operationId: pulls/list-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/review_requests/#list-requested-reviewers-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-request"
              examples:
                default:
                  "$ref": "#/components/examples/simple-pull-request-review-request"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: review-requests
    post:
      summary: Request reviewers for a pull request
      description: This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse rate
        limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)"
        and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      tags:
      - pulls
      operationId: pulls/request-reviewers
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/review_requests/#request-reviewers-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be requested.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be requested.
                  items:
                    type: string
            example:
              reviewers:
              - octocat
              - hubot
              - other_user
              team_reviewers:
              - justice-league
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-request"
        '422':
          description: Response if user is not a collaborator
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: review-requests
    delete:
      summary: Remove requested reviewers from a pull request
      description: ''
      tags:
      - pulls
      operationId: pulls/remove-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/review_requests/#remove-requested-reviewers-from-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be removed.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be removed.
                  items:
                    type: string
            example:
              reviewers:
              - octocat
              - hubot
              - other_user
              team_reviewers:
              - justice-league
      responses:
        '200':
          description: response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: review-requests
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews":
    get:
      summary: List reviews for a pull request
      description: The list of reviews returns in chronological order.
      tags:
      - pulls
      operationId: pulls/list-reviews
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#list-reviews-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: The list of reviews returns in chronological order.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
    post:
      summary: Create a review for a pull request
      description: |-
        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

        Pull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.

        **Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/enterprise/2.21/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/enterprise/2.21/v3/pulls/#get-a-pull-request) endpoint.

        The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.
      tags:
      - pulls
      operationId: pulls/create-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#create-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_id:
                  type: string
                  description: The SHA of the commit that needs a review. Not using
                    the latest commit SHA may render your review comment outdated
                    if a subsequent commit modifies the line you specify as the `position`.
                    Defaults to the most recent commit in the pull request when you
                    do not specify a value.
                body:
                  type: string
                  description: "**Required** when using `REQUEST_CHANGES` or `COMMENT`
                    for the `event` parameter. The body text of the pull request review."
                event:
                  type: string
                  description: 'The review action you want to perform. The review
                    actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By
                    leaving this blank, you set the review action state to `PENDING`,
                    which means you will need to [submit the pull request review](https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#submit-a-review-for-a-pull-request)
                    when you are ready.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
                comments:
                  type: array
                  description: Use the following table to specify the location, destination,
                    and contents of the draft review comment.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: The relative path to the file that necessitates
                          a review comment.
                      position:
                        type: integer
                        description: The position in the diff where you want to add
                          a review comment. Note this value is not the same as the
                          line number in the file. For help finding the position value,
                          read the note below.
                      body:
                        type: string
                        description: Text of the review comment.
                      line:
                        type: integer
                        example: '28'
                      side:
                        type: string
                        example: '"RIGHT"'
                      start_line:
                        type: integer
                        example: '26'
                      start_side:
                        type: string
                        example: '"LEFT"'
                    required:
                    - path
                    - body
            example:
              commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
              body: This is close to perfect! Please address the suggested inline
                change.
              event: REQUEST_CHANGES
              comments:
              - path: file.md
                position: 6
                body: Please add more information here, and fix this typo.
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}":
    get:
      summary: Get a review for a pull request
      description: ''
      tags:
      - pulls
      operationId: pulls/get-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#get-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-4"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
    put:
      summary: Update a review for a pull request
      description: Update the review summary comment with new text.
      tags:
      - pulls
      operationId: pulls/update-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#update-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review.
              required:
              - body
            example:
              body: This is close to perfect! Please address the suggested inline
                change. And add more about this.
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-5"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
    delete:
      summary: Delete a pending review for a pull request
      description: ''
      tags:
      - pulls
      operationId: pulls/delete-pending-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#delete-a-pending-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments":
    get:
      summary: List comments for a pull request review
      description: List comments for a specific pull request review.
      tags:
      - pulls
      operationId: pulls/list-comments-for-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#list-comments-for-a-pull-request-review
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals":
    put:
      summary: Dismiss a review for a pull request
      description: "**Note:** To dismiss a pull request review on a [protected branch](https://developer.github.com/enterprise/2.21/v3/repos/branches/),
        you must be a repository administrator or be included in the list of people
        or teams who can dismiss pull request reviews."
      tags:
      - pulls
      operationId: pulls/dismiss-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#dismiss-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message for the pull request review dismissal
                event:
                  type: string
                  example: '"APPROVE"'
              required:
              - message
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-3"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events":
    post:
      summary: Submit a review for a pull request
      description: ''
      tags:
      - pulls
      operationId: pulls/submit-review
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/reviews/#submit-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review
                event:
                  type: string
                  description: 'The review action you want to perform. The review
                    actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When
                    you leave this blank, the API returns _HTTP 422 (Unrecognizable
                    entity)_ and sets the review action state to `PENDING`, which
                    means you will need to re-submit the pull request review using
                    a review action.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
              required:
              - event
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-4"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch":
    put:
      summary: Update a pull request branch
      description: Updates the pull request branch with the latest upstream changes
        by merging HEAD from the base branch into the pull request branch.
      tags:
      - pulls
      operationId: pulls/update-branch
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/pulls/#update-a-pull-request-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expected_head_sha:
                  type: string
                  description: 'The expected SHA of the pull request''s HEAD ref.
                    This is the most recent commit on the pull request''s branch.
                    If the expected SHA does not match the pull request''s HEAD, you
                    will receive a `422 Unprocessable Entity` status. You can use
                    the "[List commits](https://developer.github.com/enterprise/2.21/v3/repos/commits/#list-commits)"
                    endpoint to find the most recent commit SHA. Default: SHA of the
                    pull request''s current HEAD ref.'
            example:
              expected_head_sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              example:
                message: Updating pull request branch.
                url: https://github.com/repos/octocat/Hello-World/pulls/53
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: lydian
          note: |-
            Updating the pull request branch with latest upstream changes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.lydian-preview+json
            ```
        category: pulls
        subcategory: 
  "/repos/{owner}/{repo}/readme":
    get:
      summary: Get a repository README
      description: |-
        Gets the preferred README for a repository.

        READMEs support [custom media types](https://developer.github.com/enterprise/2.21/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML.
      tags:
      - repos
      operationId: repos/get-readme
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#get-a-repository-readme
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s
          default branch (usually `master`)'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/content-file"
              examples:
                default:
                  "$ref": "#/components/examples/content-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/releases":
    get:
      summary: List releases
      description: |-
        This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/enterprise/2.21/v3/repos/#list-repository-tags).

        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.
      tags:
      - repos
      operationId: repos/list-releases
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#list-releases
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    post:
      summary: Create a release
      description: |-
        Users with push access to the repository can create a release.

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - repos
      operationId: repos/create-release
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#create-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where
                    the Git tag is created from. Can be any branch or commit SHA.
                    Unused if the Git tag already exists. Default: the repository''s
                    default branch (usually `master`).'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: "`true` to create a draft (unpublished) release, `false`
                    to create a published one."
                  default: false
                prerelease:
                  type: boolean
                  description: "`true` to identify the release as a prerelease. `false`
                    to identify the release as a full release."
                  default: false
              required:
              - tag_name
            example:
              tag_name: v1.0.0
              target_commitish: master
              name: v1.0.0
              body: Description of the release
              draft: false
              prerelease: false
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/releases/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/releases/assets/{asset_id}":
    get:
      summary: Get a release asset
      description: To download the asset's binary content, set the `Accept` header
        of the request to [`application/octet-stream`](https://developer.github.com/enterprise/2.21/v3/media/#media-types).
        The API will either redirect the client to the location, or stream it directly
        if possible. API clients should handle both a `200` or `302` response.
      tags:
      - repos
      operationId: repos/get-release-asset
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#get-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset_id"
      responses:
        '200':
          description: To download the asset's binary content, set the `Accept` header
            of the request to [`application/octet-stream`](https://developer.github.com/enterprise/2.21/v3/media/#media-types).
            The API will either redirect the client to the location, or stream it
            directly if possible. API clients should handle both a `200` or `302`
            response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '302':
          "$ref": "#/components/responses/found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    patch:
      summary: Update a release asset
      description: Users with push access to the repository can edit a release asset.
      tags:
      - repos
      operationId: repos/update-release-asset
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#update-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The file name of the asset.
                label:
                  type: string
                  description: An alternate short description of the asset. Used in
                    place of the filename.
                state:
                  type: string
                  example: '"uploaded"'
            example:
              name: foo-1.0.0-osx.zip
              label: Mac binary
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    delete:
      summary: Delete a release asset
      description: ''
      tags:
      - repos
      operationId: repos/delete-release-asset
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#delete-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset_id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/releases/latest":
    get:
      summary: Get the latest release
      description: |-
        View the latest published full release for the repository.

        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.
      tags:
      - repos
      operationId: repos/get-latest-release
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#get-the-latest-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/releases/tags/{tag}":
    get:
      summary: Get a release by tag name
      description: Get a published release with the specified tag.
      tags:
      - repos
      operationId: repos/get-release-by-tag
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#get-a-release-by-tag-name
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tag
        description: tag+ parameter
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}":
    get:
      summary: Get a release
      description: "**Note:** This returns an `upload_url` key corresponding to the
        endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/enterprise/2.21/v3/#hypermedia)."
      tags:
      - repos
      operationId: repos/get-release
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#get-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release_id"
      responses:
        '200':
          description: "**Note:** This returns an `upload_url` key corresponding to
            the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/enterprise/2.21/v3/#hypermedia)."
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    patch:
      summary: Update a release
      description: Users with push access to the repository can edit a release.
      tags:
      - repos
      operationId: repos/update-release
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#update-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where
                    the Git tag is created from. Can be any branch or commit SHA.
                    Unused if the Git tag already exists. Default: the repository''s
                    default branch (usually `master`).'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: "`true` makes the release a draft, and `false` publishes
                    the release."
                prerelease:
                  type: boolean
                  description: "`true` to identify the release as a prerelease, `false`
                    to identify the release as a full release."
            example:
              tag_name: v1.0.0
              target_commitish: master
              name: v1.0.0
              body: Description of the release
              draft: false
              prerelease: false
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    delete:
      summary: Delete a release
      description: Users with push access to the repository can delete a release.
      tags:
      - repos
      operationId: repos/delete-release
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#delete-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release_id"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}/assets":
    get:
      summary: List release assets
      description: ''
      tags:
      - repos
      operationId: repos/list-release-assets
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#list-release-assets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
    post:
      summary: Upload a release asset
      description: "This endpoint makes use of [a Hypermedia relation](https://developer.github.com/enterprise/2.21/v3/#hypermedia)
        to determine which URL to access. The endpoint you call to upload release
        assets is specific to your release. Use the `upload_url` returned in\nthe
        response of the [Create a release endpoint](https://developer.github.com/enterprise/2.21/v3/repos/releases/#create-a-release)
        to upload a release asset.\n\nYou need to use an HTTP client which supports
        [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to
        this endpoint.\n\nMost libraries will set the required `Content-Length` header
        automatically. Use the required `Content-Type` header to provide the media
        type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml).
        For example: \n\n`application/zip`\n\nGitHub Enterprise Server expects the
        asset data in its raw binary form, rather than JSON. You will send the raw
        binary content of the asset as the request body. Everything else about the
        endpoint is the same as the rest of the API. For example,\nyou'll still need
        to pass your authentication to be able to upload an asset.\n\nWhen an upstream
        failure occurs, you will receive a `502 Bad Gateway` status. This may leave
        an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*
        \  GitHub Enterprise Server renames asset filenames that have special characters,
        non-alphanumeric characters, and leading or trailing periods. The \"[List
        assets for a release](https://developer.github.com/enterprise/2.21/v3/repos/releases/#list-assets-for-a-release)\"\nendpoint
        lists the renamed filenames. For more information and help, contact [GitHub
        Enterprise Server Support](https://github.com/contact).\n*   If you upload
        an asset with the same filename as another uploaded asset, you'll receive
        an error and must delete the old file before you can re-upload the new asset."
      tags:
      - repos
      operationId: repos/upload-release-asset
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/releases/#upload-a-release-asset
      servers:
      - url: "{origin}"
        variables:
          origin:
            default: https://uploads.github.com
            description: The URL origin (protocol + host name + port) is included
              in `upload_url` returned in the response of the "Create a release" endpoint
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release_id"
      - name: name
        in: query
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              description: The raw file data
      responses:
        '201':
          description: Response for successful upload
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                response-for-successful-upload:
                  "$ref": "#/components/examples/release-asset-response-for-successful-upload"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: releases
  "/repos/{owner}/{repo}/stargazers":
    get:
      summary: List stargazers
      description: |-
        Lists the people that have starred the repository.

        You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/enterprise/2.21/v3/media/) via the `Accept` header:
      tags:
      - activity
      operationId: activity/list-stargazers-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#list-stargazers
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default-response:
                  "$ref": "#/components/examples/simple-user-items-default-response"
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/stargazer"
              examples:
                alternative-response-with-star-creation-timestamps:
                  "$ref": "#/components/examples/stargazer-items-alternative-response-with-star-creation-timestamps"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: starring
  "/repos/{owner}/{repo}/stats/code_frequency":
    get:
      summary: Get the weekly commit activity
      description: Returns a weekly aggregate of the number of additions and deletions
        pushed to a repository.
      tags:
      - repos
      operationId: repos/get-code-frequency-stats
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statistics/#get-the-weekly-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Returns a weekly aggregate of the number of additions and deletions
            pushed to a repository.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-frequency-stat"
              examples:
                default:
                  "$ref": "#/components/examples/code-frequency-stat-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/commit_activity":
    get:
      summary: Get the last year of commit activity
      description: Returns the last year of commit activity grouped by week. The `days`
        array is a group of commits per day, starting on `Sunday`.
      tags:
      - repos
      operationId: repos/get-commit-activity-stats
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statistics/#get-the-last-year-of-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-activity"
              examples:
                default:
                  "$ref": "#/components/examples/commit-activity-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/contributors":
    get:
      summary: Get all contributor commit activity
      description: |2-

        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:

        *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
        *   `a` - Number of additions
        *   `d` - Number of deletions
        *   `c` - Number of commits
      tags:
      - repos
      operationId: repos/get-contributors-stats
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statistics/#get-all-contributor-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: |-
            *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
            *   `a` - Number of additions
            *   `d` - Number of deletions
            *   `c` - Number of commits
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/contributor-activity"
              examples:
                default:
                  "$ref": "#/components/examples/contributor-activity-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/participation":
    get:
      summary: Get the weekly commit count
      description: |-
        Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.

        The array order is oldest week (index 0) to most recent week.
      tags:
      - repos
      operationId: repos/get-participation-stats
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statistics/#get-the-weekly-commit-count
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: The array order is oldest week (index 0) to most recent week.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/participation-stats"
              examples:
                default:
                  "$ref": "#/components/examples/participation-stats"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/punch_card":
    get:
      summary: Get the hourly commit count for each day
      description: |-
        Each array contains the day number, hour number, and number of commits:

        *   `0-6`: Sunday - Saturday
        *   `0-23`: Hour of day
        *   Number of commits

        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
      tags:
      - repos
      operationId: repos/get-punch-card-stats
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statistics/#get-the-hourly-commit-count-for-each-day
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: For example, `[2, 14, 25]` indicates that there were 25 total
            commits, during the 2:00pm hour on Tuesdays. All times are based on the
            time zone of individual commits.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-frequency-stat"
              examples:
                default:
                  "$ref": "#/components/examples/code-frequency-stat-items-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statistics
  "/repos/{owner}/{repo}/statuses/{sha}":
    post:
      summary: Create a commit status
      description: |-
        Users with push access in a repository can create commit statuses for a given SHA.

        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.
      tags:
      - repos
      operationId: repos/create-commit-status
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/statuses/#create-a-commit-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. Can be one of `error`, `failure`,
                    `pending`, or `success`.
                  enum:
                  - error
                  - failure
                  - pending
                  - success
                target_url:
                  type: string
                  description: "The target URL to associate with this status. This
                    URL will be linked from the GitHub UI to allow users to easily
                    see the source of the status.  \nFor example, if your continuous
                    integration system is posting build status, you would want to
                    provide the deep link for the build output for this specific SHA:
                    \ \n`http://ci.example.com/user/repo/build/sha`"
                description:
                  type: string
                  description: A short description of the status.
                context:
                  type: string
                  description: A string label to differentiate this status from the
                    status of other systems.
                  default: default
              required:
              - state
            example:
              state: success
              target_url: https://example.com/build/status
              description: The build succeeded!
              context: continuous-integration/jenkins
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status"
              examples:
                default:
                  "$ref": "#/components/examples/status"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: statuses
  "/repos/{owner}/{repo}/subscribers":
    get:
      summary: List watchers
      description: Lists the people watching the specified repository.
      tags:
      - activity
      operationId: activity/list-watchers-for-repo
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#list-watchers
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: watching
  "/repos/{owner}/{repo}/subscription":
    get:
      summary: Get a repository subscription
      description: ''
      tags:
      - activity
      operationId: activity/get-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#get-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response if you subscribe to the repository
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-subscription"
              examples:
                response-if-you-subscribe-to-the-repository:
                  "$ref": "#/components/examples/repository-subscription-response-if-you-subscribe-to-the-repository"
        '404':
          description: Response if you don't subscribe to the repository
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: watching
    put:
      summary: Set a repository subscription
      description: If you would like to watch a repository, set `subscribed` to `true`.
        If you would like to ignore notifications made within a repository, set `ignored`
        to `true`. If you would like to stop watching a repository, [delete the repository's
        subscription](https://developer.github.com/enterprise/2.21/v3/activity/watching/#delete-a-repository-subscription)
        completely.
      tags:
      - activity
      operationId: activity/set-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#set-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribed:
                  type: boolean
                  description: Determines if notifications should be received from
                    this repository.
                ignored:
                  type: boolean
                  description: Determines if all notifications should be blocked from
                    this repository.
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/repository-subscription"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: watching
    delete:
      summary: Delete a repository subscription
      description: This endpoint should only be used to stop watching a repository.
        To control whether or not you wish to receive notifications from a repository,
        [set the repository's subscription manually](https://developer.github.com/enterprise/2.21/v3/activity/watching/#set-a-repository-subscription).
      tags:
      - activity
      operationId: activity/delete-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#delete-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: watching
  "/repos/{owner}/{repo}/tags":
    get:
      summary: List repository tags
      description: ''
      tags:
      - repos
      operationId: repos/list-tags
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repository-tags
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag"
              examples:
                default:
                  "$ref": "#/components/examples/tag-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/tarball/{ref}":
    get:
      summary: Download a repository archive (tar)
      description: |-
        Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.
        **Note**: For private repositories, these links are temporary and expire after five minutes.
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#download-a-repository-archive
      operationId: repos/download-tarball-archive
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        in: path
        required: true
        schema:
          type: string
      responses:
        '302':
          description: response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/teams":
    get:
      summary: List repository teams
      description: ''
      tags:
      - repos
      operationId: repos/list-teams
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repository-teams
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/topics":
    get:
      summary: Get all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/get-all-topics
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#get-all-repository-topics
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/topic"
              examples:
                default:
                  "$ref": "#/components/examples/topic"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: repos
        subcategory: 
    put:
      summary: Replace all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/replace-all-topics
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#replace-all-repository-topics
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: An array of topics to add to the repository. Pass one
                    or more topics to _replace_ the set of existing topics. Send an
                    empty array (`[]`) to clear all topics from the repository. **Note:**
                    Topic `names` cannot contain uppercase letters.
                  items:
                    type: string
              required:
              - names
            example:
              names:
              - octocat
              - atom
              - electron
              - api
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/topic"
              examples:
                default:
                  "$ref": "#/components/examples/topic"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/transfer":
    post:
      summary: Transfer a repository
      description: A transfer request will need to be accepted by the new owner when
        transferring a personal repository to another user. The response will contain
        the original `owner`, and the transfer will continue asynchronously. For more
        details on the requirements to transfer personal and organization-owned repositories,
        see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).
      tags:
      - repos
      operationId: repos/transfer
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#transfer-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_owner:
                  type: string
                  description: "**Required:** The username or organization name the
                    repository will be transferred to."
                team_ids:
                  type: array
                  description: ID of the team or teams to add to the repository. Teams
                    can only be added to organization-owned repositories.
                  items:
                    type: integer
            example:
              new_owner: github
              team_ids:
              - 12
              - 345
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/vulnerability-alerts":
    put:
      summary: Enable vulnerability alerts
      description: Enables dependency alerts and the dependency graph for a repository.
        The authenticated user must have admin access to the repository. For more
        information, see "[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/enable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#enable-vulnerability-alerts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: dorian
          note: |-
            Enabling and disabling dependency alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.dorian-preview+json
            ```
        category: repos
        subcategory: 
    delete:
      summary: Disable vulnerability alerts
      description: Disables dependency alerts and the dependency graph for a repository.
        The authenticated user must have admin access to the repository. For more
        information, see "[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/disable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#disable-vulnerability-alerts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: dorian
          note: |-
            Enabling and disabling dependency alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.dorian-preview+json
            ```
        category: repos
        subcategory: 
  "/repos/{owner}/{repo}/zipball/{ref}":
    get:
      summary: Download a repository archive (zip)
      description: |-
        Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.
        **Note**: For private repositories, these links are temporary and expire after five minutes.
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/contents/#download-a-repository-archive
      operationId: repos/download-zipball-archive
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        in: path
        required: true
        schema:
          type: string
      responses:
        '302':
          description: response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: contents
  "/repos/{template_owner}/{template_repo}/generate":
    post:
      summary: Create a repository using a template
      description: |-
        Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://developer.github.com/enterprise/2.21/v3/repos/#get-a-repository) endpoint and check that the `is_template` key is `true`.

        **OAuth scope requirements**

        When using [OAuth](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository
        *   `repo` scope to create a private repository
      tags:
      - repos
      operationId: repos/create-using-template
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#create-a-repository-using-a-template
      parameters:
      - name: template_owner
        in: path
        required: true
        schema:
          type: string
      - name: template_repo
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                  description: The organization or person who will own the new repository.
                    To create a new repository in an organization, the authenticated
                    user must be a member of the specified organization.
                name:
                  type: string
                  description: The name of the new repository.
                description:
                  type: string
                  description: A short description of the new repository.
                private:
                  type: boolean
                  description: Either `true` to create a new private repository or
                    `false` to create a new public one.
                  default: false
              required:
              - name
            example:
              owner: octocat
              name: Hello-World
              description: This is your first repository
              private: false
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository-3"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: baptiste
          note: |-
            The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://developer.github.com/v3/repos/#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.baptiste-preview+json
            ```
        category: repos
        subcategory: 
  "/repositories":
    get:
      summary: List public repositories
      description: |-
        Lists all public repositories in the order that they were created.

        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/enterprise/2.21/v3/#link-header) to get the URL for the next page of repositories.
      tags:
      - repos
      operationId: repos/list-public
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-public-repositories
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/since"
      - name: visibility
        in: query
        required: false
        schema:
          type: string
          example: all
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-items"
          headers:
            Link:
              example: <https://api.github.com/repositories?since=364>; rel="next"
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: 
  "/search/code":
    get:
      summary: Search code
      description: |-
        Searches for query terms inside of a file. This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:

        `q=addClass+in:file+language:js+repo:jquery/jquery`

        This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.

        #### Considerations for code search

        Due to the complexity of searching code, there are a few restrictions on how searches are performed:

        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.
        *   Only files smaller than 384 KB are searchable.
        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing
        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.
      tags:
      - search
      operationId: search/code
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-code
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
          See "[Searching code](https://help.github.com/articles/searching-code/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query. Can only be `indexed`, which
          indicates how recently a file has been indexed by the GitHub Enterprise
          Server search infrastructure. Default: [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - indexed
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/code-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/code-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: search
        subcategory: 
  "/search/commits":
    get:
      summary: Search commits
      description: |-
        Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
        metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:

        `q=repo:octocat/Spoon-Knife+css`
      tags:
      - search
      operationId: search/commits
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-commits
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
          See "[Searching commits](https://help.github.com/articles/searching-commits/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by `author-date` or `committer-date`.
          Default: [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - author-date
          - committer-date
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/commit-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/commit-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: cloak
          note: |-
            The Commit Search API is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2017-01-05-commit-search-api/) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.cloak-preview
            ```
        category: search
        subcategory: 
  "/search/issues":
    get:
      summary: Search issues and pull requests
      description: |-
        Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted
        search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.

        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`

        This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, whick means the oldest issues appear first in the search results.
      tags:
      - search
      operationId: search/issues-and-pull-requests
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-issues-and-pull-requests
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
          See "[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by the number of `comments`,
          `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`,
          `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort
          results by how recently the items were `created` or `updated`, Default:
          [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - comments
          - reactions
          - reactions-+1
          - reactions--1
          - reactions-smile
          - reactions-thinking_face
          - reactions-heart
          - reactions-tada
          - interactions
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/issue-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/issue-search-result-item-paginated"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: search
        subcategory: 
  "/search/labels":
    get:
      summary: Search labels
      description: |-
        Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:

        `q=bug+defect+enhancement&repository_id=64778136`

        The labels that best match the query appear first in the search results.
      tags:
      - search
      operationId: search/labels
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-labels
      parameters:
      - name: repository_id
        description: The id of the repository.
        in: query
        required: true
        schema:
          type: integer
      - name: q
        description: The search keywords. This endpoint does not accept qualifiers
          in the query. To learn more about the format of the query, see [Constructing
          a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by when the label was `created`
          or `updated`. Default: [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/label-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/label-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: search
        subcategory: 
  "/search/repositories":
    get:
      summary: Search repositories
      description: |-
        Find repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:

        `q=tetris+language:assembly&sort=stars&order=desc`

        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.

        When you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:

        `q=topic:ruby+topic:rails`
      tags:
      - search
      operationId: search/repos
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-repositories
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
          See "[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `stars`, `forks`,
          or `help-wanted-issues` or how recently the items were `updated`. Default:
          [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - stars
          - forks
          - help-wanted-issues
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/repo-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/repo-search-result-item-paginated"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: search
        subcategory: 
  "/search/topics":
    get:
      summary: Search topics
      description: |-
        Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination). See "[Searching topics](https://help.github.com/articles/searching-topics/)" for a detailed list of qualifiers.

        When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:

        `q=ruby+is:featured`

        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
      tags:
      - search
      operationId: search/topics
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-topics
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/topic-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/topic-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: search
        subcategory: 
  "/search/users":
    get:
      summary: Search users
      description: |-
        Find users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/enterprise/2.21/v3/#pagination).

        When searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/enterprise/2.21/v3/search/#text-match-metadata).

        For example, if you're looking for a list of popular users, you might try this query:

        `q=tom+repos:%3E42+followers:%3E1000`

        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.
      tags:
      - search
      operationId: search/users
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/search/#search-users
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as GitHub.com. To learn more about
          the format of the query, see [Constructing a search query](https://developer.github.com/enterprise/2.21/v3/search/#constructing-a-search-query).
          See "[Searching users](https://help.github.com/articles/searching-users/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `followers` or
          `repositories`, or when the person `joined` GitHub Enterprise Server. Default:
          [best match](https://developer.github.com/enterprise/2.21/v3/search/#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - followers
          - repositories
          - joined
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/user-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/user-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: search
        subcategory: 
  "/setup/api/configcheck":
    get:
      summary: Get the configuration status
      description: |-
        This endpoint allows you to check the status of the most recent configuration process:

        Note that you may need to wait several seconds after you start a process before you can check its status.

        The different statuses are:

        | Status        | Description                       |
        | ------------- | --------------------------------- |
        | `PENDING`     | The job has not started yet       |
        | `CONFIGURING` | The job is running                |
        | `DONE`        | The job has finished correctly    |
        | `FAILED`      | The job has finished unexpectedly |
      operationId: enterprise-admin/get-configuration-status
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-the-configuration-status
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/configuration-status"
              examples:
                default:
                  "$ref": "#/components/examples/configuration-status"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/configure":
    post:
      summary: Start a configuration process
      description: 'This endpoint allows you to start a configuration process at any
        time for your updated settings to take effect:'
      operationId: enterprise-admin/start-configuration-process
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#start-a-configuration-process
      responses:
        '202':
          description: response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/maintenance":
    get:
      summary: Get the maintenance status
      description: 'Check your installation''s maintenance status:'
      operationId: enterprise-admin/get-maintenance-status
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-the-maintenance-status
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/maintenance-status"
              examples:
                default:
                  "$ref": "#/components/examples/maintenance-status"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
    post:
      summary: Enable or disable maintenance mode
      description: |-
        The possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.

        The possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).
      operationId: enterprise-admin/enable-or-disable-maintenance-mode
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#enable-or-disable-maintenance-mode
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/maintenance-status"
              examples:
                default:
                  "$ref": "#/components/examples/maintenance-status"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maintenance:
                  type: string
                  description: A JSON string with the attributes `enabled` and `when`.
              required:
              - maintenance
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/settings":
    get:
      summary: Get settings
      description: ''
      operationId: enterprise-admin/get-settings
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-settings
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/enterprise-settings"
              examples:
                default:
                  "$ref": "#/components/examples/enterprise-settings"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
    put:
      summary: Set settings
      description: For a list of the available settings, see the [Get settings endpoint](https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-settings).
      operationId: enterprise-admin/set-settings
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#set-settings
      responses:
        '204':
          description: Empty response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: string
                  description: A JSON string with the new settings. Note that you
                    only need to pass the specific settings you want to modify.
              required:
              - settings
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/settings/authorized-keys":
    get:
      summary: Get all authorized SSH keys
      description: ''
      operationId: enterprise-admin/get-all-authorized-ssh-keys
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-all-authorized-ssh-keys
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ssh-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-key-items-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
    post:
      summary: Add an authorized SSH key
      description: ''
      operationId: enterprise-admin/add-authorized-ssh-key
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#add-an-authorized-ssh-key
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ssh-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-key-items"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authorized_key:
                  type: string
                  description: The path to the public SSH key.
              required:
              - authorized_key
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
    delete:
      summary: Remove an authorized SSH key
      description: ''
      operationId: enterprise-admin/remove-authorized-ssh-key
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#remove-an-authorized-ssh-key
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ssh-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-key-items-2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authorized_key:
                  type: string
                  description: The path to the public SSH key.
              required:
              - authorized_key
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/start":
    post:
      summary: Create a GitHub license
      description: |-
        When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license:

        Note that you need to POST to [`/setup/api/configure`](https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#start-a-configuration-process) to start the actual configuration process.

        When using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:

        1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.
        2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.

        For a list of the available settings, see the [Get settings endpoint](https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#get-settings).
      operationId: enterprise-admin/create-enterprise-server-license
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#create-a-github-enterprise-server-license
      responses:
        '202':
          description: response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license:
                  type: string
                  description: The content of your _.ghl_ license file.
                password:
                  type: string
                  description: You **must** provide a password _only if_ you are uploading
                    your license for the first time. If you previously set a password
                    through the web interface, you don't need this parameter.
                settings:
                  type: string
                  description: An optional JSON string containing the installation
                    settings.
              required:
              - license
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/setup/api/upgrade":
    post:
      summary: Upgrade a license
      description: 'This API upgrades your license and also triggers the configuration
        process:'
      operationId: enterprise-admin/upgrade-license
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/management_console/#upgrade-a-license
      responses:
        '202':
          description: response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license:
                  type: string
                  description: The content of your new _.ghl_ license file.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: management-console
  "/staff/indexing_jobs":
    post:
      summary: Create an indexing job
      description: |-
        You can index the following targets (replace `{owner}` with the name of a user or organization account and `{repository}` with the name of a repository):

        | Target                      | Description                                                          |
        | --------------------------- | -------------------------------------------------------------------- |
        | `{owner}`                    | A user or organization account.                                      |
        | `{owner}/{repository}`        | A repository.                                                        |
        | `{owner}/*`                  | All of a user or organization's repositories.                        |
        | `{owner}/{repository}/issues` | All the issues in a repository.                                      |
        | `{owner}/*/issues`           | All the issues in all of a user or organization's repositories.      |
        | `{owner}/{repository}/code`   | All the source code in a repository.                                 |
        | `{owner}/*/code`             | All the source code in all of a user or organization's repositories. |
      operationId: enterprise-admin/create-indexing-job
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/search_indexing/#create-an-indexing-job
      responses:
        '202':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Repository 'kansaichris/japaning' has been added to the indexing
                  queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  description: A string representing the item to index.
              required:
              - target
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: search-indexing
  "/teams/{team_id}":
    get:
      summary: Get a team (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the [Get a team by name](https://developer.github.com/enterprise/2.21/v3/teams/#get-a-team-by-name)
        endpoint."
      tags:
      - teams
      operationId: teams/get-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#get-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    patch:
      summary: Update a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://developer.github.com/enterprise/2.21/v3/teams/#update-a-team) endpoint.

        To edit a team, the authenticated user must either be an organization owner or a team maintainer.

        **Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.
      tags:
      - teams
      operationId: teams/update-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#update-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing
                    teams without specifying this parameter leaves `privacy` intact.
                    The options are:  \n**For a non-nested team:**  \n\\* `secret`
                    - only visible to organization owners and members of this team.
                    \ \n\\* `closed` - visible to all members of this organization.
                    \ \n**For a parent or child team:**  \n\\* `closed` - visible
                    to all members of this organization."
                  enum:
                  - secret
                  - closed
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified. Can be
                    one of:  \n\\* `pull` - team members can pull, but not push to
                    or administer newly-added repositories.  \n\\* `push` - team members
                    can pull and push, but not administer newly-added repositories.
                    \ \n\\* `admin` - team members can pull, push and administer newly-added
                    repositories."
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
              required:
              - name
            example:
              name: new team name
              description: new team description
              privacy: closed
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    delete:
      summary: Delete a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://developer.github.com/enterprise/2.21/v3/teams/#delete-a-team) endpoint.

        To delete a team, the authenticated user must be an organization owner or team maintainer.

        If you are an organization owner, deleting a parent team will delete all of its child teams as well.
      tags:
      - teams
      operationId: teams/delete-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#delete-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/teams/{team_id}/discussions":
    get:
      summary: List discussions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://developer.github.com/enterprise/2.21/v3/teams/discussions/#list-discussions) endpoint.

        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/list-discussions-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#list-discussions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    post:
      summary: Create a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://developer.github.com/enterprise/2.21/v3/teams/discussions/#create-a-discussion) endpoint.

        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - teams
      operationId: teams/create-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#create-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to all
                    members of the organization. Set to `true` to create a private
                    post.
                  default: false
              required:
              - title
              - body
            example:
              title: Our first team post
              body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}":
    get:
      summary: Get a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/#get-a-discussion) endpoint.

        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/get-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#get-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    patch:
      summary: Update a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/#update-a-discussion) endpoint.

        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/update-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#update-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            example:
              title: Welcome to our first team post
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    delete:
      summary: Delete a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://developer.github.com/enterprise/2.21/v3/teams/discussions/#delete-a-discussion) endpoint.

        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/delete-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussions/#delete-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments":
    get:
      summary: List discussion comments (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#list-discussion-comments) endpoint.

        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/list-discussion-comments-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#list-discussion-comments-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    post:
      summary: Create a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#create-a-discussion-comment) endpoint.

        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/enterprise/2.21/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/enterprise/2.21/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
      tags:
      - teams
      operationId: teams/create-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#create-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            example:
              body: Do you like apples?
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}":
    get:
      summary: Get a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#get-a-discussion-comment) endpoint.

        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/get-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#get-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    patch:
      summary: Update a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#update-a-discussion-comment) endpoint.

        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/update-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#update-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            example:
              body: Do you like pineapples?
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    delete:
      summary: Delete a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#delete-a-discussion-comment) endpoint.

        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/delete-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/#delete-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      summary: List reactions for a team discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion-comment) endpoint.

        List the reactions to a [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: 
      deprecated: true
    post:
      summary: Create reaction for a team discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion comment`](https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion-comment) endpoint.

        Create a reaction to a [team discussion comment](https://developer.github.com/enterprise/2.21/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the team discussion comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: 
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/reactions":
    get:
      summary: List reactions for a team discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion) endpoint.

        List the reactions to a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#list-reactions-for-a-team-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - name: content
        description: Returns a single [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types).
          Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: 
      deprecated: true
    post:
      summary: Create reaction for a team discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion`](https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion) endpoint.

        Create a reaction to a [team discussion](https://developer.github.com/enterprise/2.21/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/reactions/#create-reaction-for-a-team-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://developer.github.com/enterprise/2.21/v3/reactions/#reaction-types)
                    to add to the team discussion.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            example:
              content: heart
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: squirrel-girl
          note: |-
            An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.

            To access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.squirrel-girl-preview
            ```
            The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: 
      deprecated: true
  "/teams/{team_id}/members":
    get:
      summary: List team members (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://developer.github.com/enterprise/2.21/v3/teams/members/#list-team-members) endpoint.

        Team members will include the members of child teams.
      tags:
      - teams
      operationId: teams/list-members-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#list-team-members-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - name: role
        description: "Filters members returned by their role in the team. Can be one
          of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` -
          team maintainers.  \n\\* `all` - all members of the team."
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/members/{username}":
    get:
      summary: Get team member (Legacy)
      description: |-
        The "Get team member" endpoint (described below) is deprecated.

        We recommend using the [Get team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.

        To list members in a team, the team must be visible to the authenticated user.
      tags:
      - teams
      operationId: teams/get-member-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#get-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if user is a member
        '404':
          description: Response if user is not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add team member (Legacy)
      description: |-
        The "Add team member" endpoint (described below) is deprecated.

        We recommend using the [Add or update team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - teams
      operationId: teams/add-member-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#add-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '404':
          description: Response if team synchronization is set up
        '422':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        field:
                          type: string
                        resource:
                          type: string
                  documentation_url:
                    type: string
                    example: '"https://developer.github.com/enterprise/2.21/v3"'
              examples:
                response-if-you-attempt-to-add-an-organization-to-a-team:
                  summary: Response if you attempt to add an organization to a team
                  value:
                    message: Cannot add an organization as a member.
                    errors:
                    - code: org
                      field: user
                      resource: TeamMember
                response-if-you-attempt-to-add-a-user-to-a-team-when-they-are-not-a-member-of-at-least-one-other-team-in-the-same-organization:
                  summary: Response if you attempt to add a user to a team when they
                    are not a member of at least one other team in the same organization
                  value:
                    message: User isn't a member of this organization. Please invite
                      them first.
                    errors:
                    - code: unaffiliated
                      field: user
                      resource: TeamMember
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team member (Legacy)
      description: |-
        The "Remove team member" endpoint (described below) is deprecated.

        We recommend using the [Remove team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      tags:
      - teams
      operationId: teams/remove-member-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#remove-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '404':
          description: Response if team synchronization is setup
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/memberships/{username}":
    get:
      summary: Get team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#get-team-membership-for-a-user) endpoint.

        Team members will include the members of child teams.

        To get a user's membership with a team, the team must be visible to the authenticated user.

        **Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://developer.github.com/enterprise/2.21/v3/teams/#create-a-team).
      tags:
      - teams
      operationId: teams/get-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#get-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-user-has-an-active-membership-with-team:
                  "$ref": "#/components/examples/team-membership-response-if-user-has-an-active-membership-with-team"
                response-if-user-is-a-team-maintainer:
                  "$ref": "#/components/examples/team-membership-response-if-user-is-a-team-maintainer"
                response-if-user-has-a-pending-membership-with-team:
                  "$ref": "#/components/examples/team-membership-response-if-user-has-a-pending-membership-with-team"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add or update team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#add-or-update-team-membership-for-a-user) endpoint.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the "pending" state until the user accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.

        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#add-or-update-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "The role that this user should have in the team. Can
                    be one of:  \n\\* `member` - a normal member of the team.  \n\\*
                    `maintainer` - a team maintainer. Able to add/remove other team
                    members, promote other team members to team maintainer, and edit
                    the team's name and description."
                  enum:
                  - member
                  - maintainer
                  default: member
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-users-membership-with-team-is-now-active:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-active"
                response-if-users-membership-with-team-is-now-pending:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending"
        '403':
          description: Response if team synchronization is set up
        '422':
          description: Response if you attempt to add an organization to a team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        field:
                          type: string
                        resource:
                          type: string
                  documentation_url:
                    type: string
                    example: '"https://help.github.com/articles/github-and-trade-controls"'
              examples:
                response-if-you-attempt-to-add-an-organization-to-a-team:
                  value:
                    message: Cannot add an organization as a member.
                    errors:
                    - code: org
                      field: user
                      resource: TeamMember
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://developer.github.com/enterprise/2.21/v3/teams/members/#remove-team-membership-for-a-user) endpoint.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      tags:
      - teams
      operationId: teams/remove-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/members/#remove-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '403':
          description: Response if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/projects":
    get:
      summary: List team projects (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://developer.github.com/enterprise/2.21/v3/teams/#list-team-projects) endpoint.

        Lists the organization projects for a team.
      tags:
      - teams
      operationId: teams/list-projects-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-team-projects-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/teams/{team_id}/projects/{project_id}":
    get:
      summary: Check team permissions for a project (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-project) endpoint.

        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.
      tags:
      - teams
      operationId: teams/check-permissions-for-project-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-project-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project"
        '404':
          description: Response if project is not managed by this team
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    put:
      summary: Add or update team project permissions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team project permissions](https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-project-permissions) endpoint.

        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-project-permissions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: "The permission to grant to the team for this project.
                    Can be one of:  \n\\* `read` - team members can read, but not
                    write to or administer this project.  \n\\* `write` - team members
                    can read and write, but not administer this project.  \n\\* `admin`
                    - team members can read, write and administer this project.  \nDefault:
                    the team's `permission` attribute will be used to determine what
                    permission to grant the team on this project. Note that, if you
                    choose not to pass any parameters, you'll need to set `Content-Length`
                    to zero when calling out to this endpoint. For more information,
                    see \"[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs).\""
                  enum:
                  - read
                  - write
                  - admin
      responses:
        '204':
          description: Empty response
        '403':
          description: Response if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-project-permissions
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    delete:
      summary: Remove a project from a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a project from a team](https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-project-from-a-team) endpoint.

        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.
      tags:
      - teams
      operationId: teams/remove-project-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-project-from-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/teams/{team_id}/repos":
    get:
      summary: List team repositories (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the new [List team repositories](https://developer.github.com/enterprise/2.21/v3/teams/#list-team-repositories)
        endpoint."
      tags:
      - teams
      operationId: teams/list-repos-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-team-repositories-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/teams/{team_id}/repos/{owner}/{repo}":
    get:
      summary: Check team permissions for a repository (Legacy)
      description: |-
        **Note**: Repositories inherited through a parent team will also be checked.

        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-repository) endpoint.

        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/enterprise/2.21/v3/media/) via the `Accept` header:
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#check-team-permissions-for-a-repository-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Alternative response with extra repository information
          content:
            application/vnd.github.v3.repository+json:
              schema:
                "$ref": "#/components/schemas/team-repository"
              examples:
                alternative-response-with-extra-repository-information:
                  "$ref": "#/components/examples/team-repository-alternative-response-with-extra-repository-information"
        '204':
          description: Response if repository is managed by this team
        '404':
          description: Response if repository is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    put:
      summary: Add or update team repository permissions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team repository permissions](https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-repository-permissions) endpoint.

        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#add-or-update-team-repository-permissions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: "The permission to grant the team on this repository.
                    Can be one of:  \n\\* `pull` - team members can pull, but not
                    push to or administer this repository.  \n\\* `push` - team members
                    can pull and push, but not administer this repository.  \n\\*
                    `admin` - team members can pull, push and administer this repository.
                    \ \n  \nIf no permission is specified, the team's `permission`
                    attribute will be used to determine what permission to grant the
                    team on this repository."
                  enum:
                  - pull
                  - push
                  - admin
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
    delete:
      summary: Remove a repository from a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-repository-from-a-team) endpoint.

        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.
      tags:
      - teams
      operationId: teams/remove-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#remove-a-repository-from-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/teams/{team_id}/teams":
    get:
      summary: List child teams (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List child teams`](https://developer.github.com/enterprise/2.21/v3/teams/#list-child-teams)
        endpoint."
      tags:
      - teams
      operationId: teams/list-child-legacy
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-child-teams-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                response-if-child-teams-exist:
                  "$ref": "#/components/examples/team-items-response-if-child-teams-exist"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: 
      deprecated: true
  "/user":
    get:
      summary: Get the authenticated user
      description: |-
        If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.

        If the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.
      tags:
      - users
      operationId: users/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/#get-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/private-user"
                - "$ref": "#/components/schemas/public-user"
              examples:
                response-with-public-and-private-profile-information:
                  "$ref": "#/components/examples/private-user-response-with-public-and-private-profile-information"
                response-with-public-profile-information:
                  "$ref": "#/components/examples/private-user-response-with-public-profile-information"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: 
    patch:
      summary: Update the authenticated user
      description: "**Note:** If your email is set to private and you send an `email`
        parameter as part of this request to update your profile, your privacy settings
        are still enforced: the email address will not be displayed on your public
        profile or via the API."
      tags:
      - users
      operationId: users/update-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/#update-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The new name of the user.
                  type: string
                  example: Omar Jahandar
                email:
                  description: The publicly visible email address of the user.
                  type: string
                  example: omar@example.com
                blog:
                  description: The new blog URL of the user.
                  type: string
                  example: blog.example.com
                twitter_username:
                  description: The new Twitter username of the user.
                  type: string
                  example: therealomarj
                  nullable: true
                company:
                  description: The new company of the user.
                  type: string
                  example: Acme corporation
                location:
                  description: The new location of the user.
                  type: string
                  example: Berlin, Germany
                hireable:
                  description: The new hiring availability of the user.
                  type: boolean
                bio:
                  description: The new short biography of the user.
                  type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/private-user"
              examples:
                default:
                  "$ref": "#/components/examples/private-user"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: 
  "/user/emails":
    get:
      summary: List email addresses for the authenticated user
      description: Lists all of your email addresses, and specifies which one is visible
        to the public. This endpoint is accessible with the `user:email` scope.
      tags:
      - users
      operationId: users/list-emails-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/emails/#list-email-addresses-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: emails
    post:
      summary: Add an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/add-email-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/emails/#add-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  emails:
                    description: Adds one or more email addresses to your GitHub account.
                      Must contain at least one email address. **Note:** Alternatively,
                      you can pass a single email address or an `array` of emails
                      addresses directly, but we recommend that you pass an object
                      using the `emails` key.
                    type: array
                    items:
                      type: string
                      example: username@example.com
                      minItems: 1
                    example: []
                required:
                - emails
                example:
                  emails:
                  - octocat@github.com
                  - mona@github.com
              - type: array
                items:
                  type: string
                  example: username@example.com
                  minItems: 1
              - type: string
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: emails
    delete:
      summary: Delete an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/delete-email-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/emails/#delete-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                description: Deletes one or more email addresses from your GitHub
                  account. Must contain at least one email address. **Note:** Alternatively,
                  you can pass a single email address or an `array` of emails addresses
                  directly, but we recommend that you pass an object using the `emails`
                  key.
                properties:
                  emails:
                    description: Email addresses associated with the GitHub user account.
                    type: array
                    items:
                      type: string
                      example: username@example.com
                      minItems: 1
                    example:
                      emails:
                      - octocat@github.com
                      - mona@github.com
                required:
                - emails
              - type: array
                items:
                  type: string
                  example: username@example.com
                  minItems: 1
              - type: string
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: emails
  "/user/followers":
    get:
      summary: List followers of the authenticated user
      description: Lists the people following the authenticated user.
      tags:
      - users
      operationId: users/list-followers-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#list-followers-of-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: followers
  "/user/following":
    get:
      summary: List the people the authenticated user follows
      description: Lists the people who the authenticated user follows.
      tags:
      - users
      operationId: users/list-followed-by-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#list-the-people-the-authenticated-user-follows
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: followers
  "/user/following/{username}":
    get:
      summary: Check if a person is followed by the authenticated user
      description: ''
      tags:
      - users
      operationId: users/check-person-is-followed-by-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#check-if-a-person-is-followed-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if the person is followed by the authenticated user
        '404':
          description: Response if the person is not followed by the authenticated
            user
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: followers
    put:
      summary: Follow a user
      description: |-
        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."

        Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.
      tags:
      - users
      operationId: users/follow
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#follow-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: followers
    delete:
      summary: Unfollow a user
      description: Unfollowing a user requires the user to be logged in and authenticated
        with basic auth or OAuth with the `user:follow` scope.
      tags:
      - users
      operationId: users/unfollow
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#unfollow-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: followers
  "/user/gpg_keys":
    get:
      summary: List GPG keys for the authenticated user
      description: Lists the current user's GPG keys. Requires that you are authenticated
        via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/list-gpg-keys-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/gpg_keys/#list-gpg-keys-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: gpg-keys
    post:
      summary: Create a GPG key for the authenticated user
      description: Adds a GPG key to the authenticated user's GitHub account. Requires
        that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key`
        [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-gpg-key-for-authenticated
      tags:
      - users
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/gpg_keys/#create-a-gpg-key-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                armored_public_key:
                  description: A GPG key in ASCII-armored format.
                  type: string
              type: object
              required:
              - armored_public_key
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: gpg-keys
  "/user/gpg_keys/{gpg_key_id}":
    get:
      summary: Get a GPG key for the authenticated user
      description: View extended details for a single GPG key. Requires that you are
        authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/get-gpg-key-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/gpg_keys/#get-a-gpg-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/gpg_key_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: gpg-keys
    delete:
      summary: Delete a GPG key for the authenticated user
      description: Removes a GPG key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `admin:gpg_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/delete-gpg-key-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/gpg_keys/#delete-a-gpg-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/gpg_key_id"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: gpg-keys
  "/user/installations":
    get:
      summary: List app installations accessible to the user access token
      description: |-
        Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        You must use a [user-to-server OAuth access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You can find the permissions for the installation under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#list-app-installations-accessible-to-the-user-access-token
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: You can find the permissions for the installation under the
            `permissions` key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation-for-auth-user-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
        subcategory: installations
  "/user/installations/{installation_id}/repositories":
    get:
      summary: List repositories accessible to the user access token
      description: |-
        List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You must use a [user-to-server OAuth access token](https://developer.github.com/enterprise/2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.

        The access the user has to each repository is included in the hash under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installation-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#list-repositories-accessible-to-the-user-access-token
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/installation_id"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: The access the user has to each repository is included in the
            hash under the `permissions` key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  repository_selection:
                    type: string
                  repositories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        - required: false
          name: mercy
          note: |-
            The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.mercy-preview+json
            ```
        category: apps
        subcategory: installations
  "/user/installations/{installation_id}/repositories/{repository_id}":
    put:
      summary: Add a repository to an app installation
      description: |-
        Add a single repository to an installation. The authenticated user must have admin access to the repository.

        You must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth/#basic-authentication) to access this endpoint.
      tags:
      - apps
      operationId: apps/add-repo-to-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#add-a-repository-to-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation_id"
      - "$ref": "#/components/parameters/repository_id"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
        subcategory: installations
    delete:
      summary: Remove a repository from an app installation
      description: |-
        Remove a single repository from an installation. The authenticated user must have admin access to the repository.

        You must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/enterprise/2.21/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/enterprise/2.21/v3/auth/#basic-authentication) to access this endpoint.
      tags:
      - apps
      operationId: apps/remove-repo-from-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/installations/#remove-a-repository-from-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation_id"
      - "$ref": "#/components/parameters/repository_id"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
        subcategory: installations
  "/user/issues":
    get:
      summary: List user account issues assigned to the authenticated user
      description: |-
        List issues across owned and member repositories assigned to the authenticated user.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://developer.github.com/enterprise/2.21/v3/pulls/#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/issues/#list-user-account-issues-assigned-to-the-authenticated-user
      parameters:
      - name: filter
        description: "Indicates which sorts of issues to return. Can be one of:  \n\\*
          `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you
          \ \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're
          subscribed to updates for  \n\\* `all`: All issues the authenticated user
          can see, regardless of participation or creation"
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return. Can be either `open`,
          `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by. Can be either `created`, `updated`,
          `comments`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: false
          name: machine-man
          note: "If an issue event is created via a GitHub App, the response will
            include the `performed_via_github_app` object with\tinformation about
            the GitHub App. For more information, see the [related blog\tpost](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\nTo
            receive the `performed_via_github_app` object in the response, you must
            provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media)
            in the `Accept` header:\n```shell\napplication/vnd.github.machine-man-preview\n```"
        category: issues
  "/user/keys":
    get:
      summary: List public SSH keys for the authenticated user
      description: Lists the public SSH keys for the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `read:public_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/list-public-ssh-keys-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/keys/#list-public-ssh-keys-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: keys
    post:
      summary: Create a public SSH key for the authenticated user
      description: Adds a public SSH key to the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth, or OAuth with at least
        `write:public_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-public-ssh-key-for-authenticated
      tags:
      - users
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/keys/#create-a-public-ssh-key-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: The public SSH key to add to your GitHub account.
                  type: string
                  pattern: "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) "
              required:
              - key
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: keys
  "/user/keys/{key_id}":
    get:
      summary: Get a public SSH key for the authenticated user
      description: View extended details for a single public SSH key. Requires that
        you are authenticated via Basic Auth or via OAuth with at least `read:public_key`
        [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/get-public-ssh-key-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/keys/#get-a-public-ssh-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/key_id"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: keys
    delete:
      summary: Delete a public SSH key for the authenticated user
      description: Removes a public SSH key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `admin:public_key` [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/delete-public-ssh-key-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/keys/#delete-a-public-ssh-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/key_id"
      responses:
        '204':
          description: Empty response
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: keys
  "/user/memberships/orgs":
    get:
      summary: List organization memberships for the authenticated user
      description: ''
      tags:
      - orgs
      operationId: orgs/list-memberships-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#list-organization-memberships-for-the-authenticated-user
      parameters:
      - name: state
        description: Indicates the state of the memberships to return. Can be either
          `active` or `pending`. If not specified, the API returns both active and
          pending memberships.
        in: query
        required: false
        schema:
          type: string
          enum:
          - active
          - pending
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: members
  "/user/memberships/orgs/{org}":
    get:
      summary: Get an organization membership for the authenticated user
      description: ''
      tags:
      - orgs
      operationId: orgs/get-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#get-an-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: members
    patch:
      summary: Update an organization membership for the authenticated user
      description: ''
      tags:
      - orgs
      operationId: orgs/update-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/members/#update-an-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state that the membership should be in. Only `"active"`
                    will be accepted.
                  enum:
                  - active
              required:
              - state
            example:
              state: active
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership-2"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: members
  "/user/orgs":
    get:
      summary: List organizations for the authenticated user
      description: |-
        List organizations for the authenticated user.

        **OAuth scope requirements**

        This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.
      tags:
      - orgs
      operationId: orgs/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#list-organizations-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: orgs
        subcategory: 
  "/user/projects":
    post:
      summary: Create a user project
      description: ''
      tags:
      - projects
      operationId: projects/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#create-a-user-project
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in
                    January
                  type: string
                  nullable: true
              required:
              - name
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
  "/user/public_emails":
    get:
      summary: List public email addresses for the authenticated user
      description: Lists your publicly visible email address, which you can set with
        the [Set primary email visibility for the authenticated user](https://developer.github.com/enterprise/2.21/v3/users/emails/#set-primary-email-visibility-for-the-authenticated-user)
        endpoint. This endpoint is accessible with the `user:email` scope.
      tags:
      - users
      operationId: users/list-public-emails-for-authenticated
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/emails/#list-public-email-addresses-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: emails
  "/user/repos":
    get:
      summary: List repositories for the authenticated user
      description: |-
        Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
      tags:
      - repos
      operationId: repos/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repositories-for-the-authenticated-user
      parameters:
      - name: visibility
        description: Can be one of `all`, `public`, or `private`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          default: all
      - name: affiliation
        description: "Comma-separated list of values. Can include:  \n\\* `owner`:
          Repositories that are owned by the authenticated user.  \n\\* `collaborator`:
          Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`:
          Repositories that the user has access to through being a member of an organization.
          This includes every repository on every team that the user is on."
        in: query
        required: false
        schema:
          type: string
          default: owner,collaborator,organization_member
      - name: type
        description: "Can be one of `all`, `owner`, `public`, `private`, `member`.
          Default: `all`  \n  \nWill cause a `422` error if used in the same request
          as **visibility** or **affiliation**. Will cause a `422` error if used in
          the same request as **visibility** or **affiliation**."
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - public
          - private
          - member
          default: all
      - name: sort
        description: Can be one of `created`, `updated`, `pushed`, `full_name`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`,
          otherwise `desc`'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/before"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository-items-default-response"
        '418':
          description: Response definition missing
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: repos
        subcategory: 
    post:
      summary: Create a repository for the authenticated user
      description: |-
        Creates a new repository for the authenticated user.

        **OAuth scope requirements**

        When using [OAuth](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository
        *   `repo` scope to create a private repository
      tags:
      - repos
      operationId: repos/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#create-a-repository-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the repository.
                  type: string
                  example: Team Environment
                description:
                  description: A short description of the repository.
                  type: string
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                private:
                  description: Whether the repository is private or public.
                  default: false
                  type: boolean
                has_issues:
                  description: Whether issues are enabled.
                  default: true
                  type: boolean
                  example: true
                has_projects:
                  description: Whether projects are enabled.
                  default: true
                  type: boolean
                  example: true
                has_wiki:
                  description: Whether the wiki is enabled.
                  default: true
                  type: boolean
                  example: true
                team_id:
                  description: The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in an
                    organization.
                  type: integer
                auto_init:
                  description: Whether the repository is initialized with a minimal
                    README.
                  default: false
                  type: boolean
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                license_template:
                  description: The license keyword of the open source license for
                    this repository.
                  example: mit
                  type: string
                allow_squash_merge:
                  description: Whether to allow squash merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_merge_commit:
                  description: Whether to allow merge commits for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_rebase_merge:
                  description: Whether to allow rebase merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                delete_branch_on_merge:
                  description: Whether to delete head branches when pull requests
                    are merged
                  default: false
                  type: boolean
                  example: false
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  description: Whether this repository acts as a template that can
                    be used to generate new repositories.
                  default: false
                  type: boolean
                  example: true
              required:
              - name
              type: object
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '400':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        - required: false
          name: baptiste
          note: |-
            The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://developer.github.com/v3/repos/#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.baptiste-preview+json
            ```
        category: repos
        subcategory: 
  "/user/repository_invitations":
    get:
      summary: List repository invitations for the authenticated user
      description: When authenticating as a user, this endpoint will list all currently
        open repository invitations for that user.
      tags:
      - repos
      operationId: repos/list-invitations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#list-repository-invitations-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: repos
        subcategory: invitations
  "/user/repository_invitations/{invitation_id}":
    patch:
      summary: Accept a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/accept-invitation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#accept-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/invitation_id"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '409':
          "$ref": "#/components/responses/conflict"
        '404':
          "$ref": "#/components/responses/not_found"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: repos
        subcategory: invitations
    delete:
      summary: Decline a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/decline-invitation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/invitations/#decline-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/invitation_id"
      responses:
        '204':
          description: Empty response
        '409':
          "$ref": "#/components/responses/conflict"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: repos
        subcategory: invitations
  "/user/starred":
    get:
      summary: List repositories starred by the authenticated user
      description: |-
        Lists repositories the authenticated user has starred.

        You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/enterprise/2.21/v3/media/) via the `Accept` header:
      tags:
      - activity
      operationId: activity/list-repos-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#list-repositories-starred-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository"
              examples:
                default-response:
                  "$ref": "#/components/examples/repository-items-default-response"
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/starred-repository"
              examples:
                alternative-response-with-star-creation-timestamps:
                  "$ref": "#/components/examples/starred-repository-items-alternative-response-with-star-creation-timestamps"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: starring
  "/user/starred/{owner}/{repo}":
    get:
      summary: Check if a repository is starred by the authenticated user
      description: ''
      tags:
      - activity
      operationId: activity/check-repo-is-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#check-if-a-repository-is-starred-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response if this repository is starred by you
        '404':
          description: Response if this repository is not starred by you
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: starring
    put:
      summary: Star a repository for the authenticated user
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      tags:
      - activity
      operationId: activity/star-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#star-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: starring
    delete:
      summary: Unstar a repository for the authenticated user
      description: ''
      tags:
      - activity
      operationId: activity/unstar-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#unstar-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Empty response
        '404':
          "$ref": "#/components/responses/not_found"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: starring
  "/user/subscriptions":
    get:
      summary: List repositories watched by the authenticated user
      description: Lists repositories the authenticated user is watching.
      tags:
      - activity
      operationId: activity/list-watched-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#list-repositories-watched-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: watching
  "/user/teams":
    get:
      summary: List teams for the authenticated user
      description: List all of the teams across all of the organizations to which
        the authenticated user belongs. This method requires `user`, `repo`, or `read:org`
        [scope](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)
        when authenticating via [OAuth](https://developer.github.com/enterprise/2.21/apps/building-oauth-apps/).
      tags:
      - teams
      operationId: teams/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/teams/#list-teams-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: teams
        subcategory: 
  "/users":
    get:
      summary: List users
      description: |-
        Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.

        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/enterprise/2.21/v3/#link-header) to get the URL for the next page of users.
      tags:
      - users
      operationId: users/list
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/#list-users
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: 
  "/users/{username}":
    get:
      summary: Get a user
      description: |-
        Provides publicly available information about someone with a GitHub account.

        GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See "[Identifying and authorizing users for GitHub Apps](https://developer.github.com/enterprise/2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)" for details about authentication. For an example response, see "[Response with GitHub Enterprise Server plan information](https://developer.github.com/enterprise/2.21/v3/users/#response-with-github-plan-information)."

        The `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://developer.github.com/enterprise/2.21/v3/#authentication).

        The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "[Emails API](https://developer.github.com/enterprise/2.21/v3/users/emails/)".
      tags:
      - users
      operationId: users/get-by-username
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/#get-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/private-user"
                - "$ref": "#/components/schemas/public-user"
              examples:
                default-response:
                  "$ref": "#/components/examples/public-user-default-response"
                response-with-git-hub-plan-information:
                  "$ref": "#/components/examples/public-user-response-with-git-hub-plan-information"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: 
  "/users/{username}/events":
    get:
      summary: List events for the authenticated user
      description: If you are authenticated as the given user, you will see your private
        events. Otherwise, you'll only see public events.
      tags:
      - activity
      operationId: activity/list-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-events-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/users/{username}/events/orgs/{org}":
    get:
      summary: List organization events for the authenticated user
      description: This is the user's organization dashboard. You must be authenticated
        as the user to view this.
      tags:
      - activity
      operationId: activity/list-org-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-organization-events-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: activity
        subcategory: events
  "/users/{username}/events/public":
    get:
      summary: List public events for a user
      description: ''
      tags:
      - activity
      operationId: activity/list-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-public-events-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/users/{username}/followers":
    get:
      summary: List followers of a user
      description: Lists the people following the specified user.
      tags:
      - users
      operationId: users/list-followers-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#list-followers-of-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: followers
  "/users/{username}/following":
    get:
      summary: List the people a user follows
      description: Lists the people who the specified user follows.
      tags:
      - users
      operationId: users/list-following-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#list-the-people-a-user-follows
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: followers
  "/users/{username}/following/{target_user}":
    get:
      summary: Check if a user follows another user
      description: ''
      tags:
      - users
      operationId: users/check-following-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/followers/#check-if-a-user-follows-another-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: target_user
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Response if the user follows the target user
        '404':
          description: Response if the user does not follow the target user
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: followers
  "/users/{username}/gists":
    get:
      summary: List gists for a user
      description: 'Lists public gists for the specified user:'
      tags:
      - gists
      operationId: gists/list-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/gists/#list-gists-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: gists
        subcategory: 
  "/users/{username}/gpg_keys":
    get:
      summary: List GPG keys for a user
      description: Lists the GPG keys for a user. This information is accessible by
        anyone.
      tags:
      - users
      operationId: users/list-gpg-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/gpg_keys/#list-gpg-keys-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: gpg-keys
  "/users/{username}/hovercard":
    get:
      summary: Get contextual information for a user
      description: |-
        Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.

        The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:

        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```
      tags:
      - users
      operationId: users/get-context-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/#get-contextual-information-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: subject_type
        description: Identifies which additional information you'd like to receive
          about the person's hovercard. Can be `organization`, `repository`, `issue`,
          `pull_request`. **Required** when using `subject_id`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - organization
          - repository
          - issue
          - pull_request
      - name: subject_id
        description: Uses the ID for the `subject_type` you specified. **Required**
          when using `subject_type`.
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hovercard"
              examples:
                default:
                  "$ref": "#/components/examples/hovercard"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: 
  "/users/{username}/installation":
    get:
      summary: Get a user installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the user’s installation information.

        You must use a [JWT](https://developer.github.com/enterprise/2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-user-installation
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/apps/#get-a-user-installation-for-the-authenticated-app
      parameters:
      - name: accept
        description: This API is under preview and subject to change.
        in: header
        schema:
          type: string
          default: application/vnd.github.machine-man-preview+json
        required: true
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: machine-man
          note: To access the API with your GitHub App, you must provide a custom
            [media type](https://developer.github.com/enterprise/2.21/v3/media) in
            the `Accept` Header for your requests. ```shell application/vnd.github.machine-man-preview+json
            ```
        category: apps
  "/users/{username}/keys":
    get:
      summary: List public keys for a user
      description: Lists the _verified_ public SSH keys for a user. This is accessible
        by anyone.
      tags:
      - users
      operationId: users/list-public-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/users/keys/#list-public-keys-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/key-simple"
              examples:
                default:
                  "$ref": "#/components/examples/key-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: users
        subcategory: keys
  "/users/{username}/orgs":
    get:
      summary: List organizations for a user
      description: |-
        List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.

        This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://developer.github.com/enterprise/2.21/v3/orgs/#list-organizations-for-the-authenticated-user) API instead.
      tags:
      - orgs
      operationId: orgs/list-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/orgs/#list-organizations-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: 
  "/users/{username}/projects":
    get:
      summary: List user projects
      description: ''
      tags:
      - projects
      operationId: projects/list-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/projects/#list-user-projects
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: state
        description: Indicates the state of the projects to return. Can be either
          `open`, `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items-3"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '415':
          "$ref": "#/components/responses/preview_header_missing"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews:
        - required: true
          name: inertia
          note: |-
            The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.inertia-preview+json
            ```
        category: projects
        subcategory: 
  "/users/{username}/received_events":
    get:
      summary: List events received by the authenticated user
      description: These are events that you've received by watching repos and following
        users. If you are authenticated as the given user, you will see private events.
        Otherwise, you'll only see public events.
      tags:
      - activity
      operationId: activity/list-received-events-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-events-received-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/users/{username}/received_events/public":
    get:
      summary: List public events received by a user
      description: ''
      tags:
      - activity
      operationId: activity/list-received-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/events/#list-public-events-received-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: events
  "/users/{username}/repos":
    get:
      summary: List repositories for a user
      description: Lists public repositories for the specified user.
      tags:
      - repos
      operationId: repos/list-for-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/repos/#list-repositories-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: type
        description: Can be one of `all`, `owner`, `member`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - member
          default: owner
      - name: sort
        description: Can be one of `created`, `updated`, `pushed`, `full_name`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`,
          otherwise `desc`'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews:
        - required: false
          name: nebula
          note: |-
            You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://developer.github.com/v3/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).

            To access repository visibility during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:
            ```shell
            application/vnd.github.nebula-preview+json
            ```
        category: repos
        subcategory: 
  "/users/{username}/site_admin":
    put:
      summary: Promote a user to be a site administrator
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      operationId: enterprise-admin/promote-user-to-be-site-administrator
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#promote-a-user-to-be-a-site-administrator
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Demote a site administrator
      description: You can demote any user account except your own.
      operationId: enterprise-admin/demote-site-administrator
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#demote-a-site-administrator
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/users/{username}/starred":
    get:
      summary: List repositories starred by a user
      description: |-
        Lists repositories a user has starred.

        You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/enterprise/2.21/v3/media/) via the `Accept` header:
      tags:
      - activity
      operationId: activity/list-repos-starred-by-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/starring/#list-repositories-starred-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository"
              examples:
                default-response:
                  "$ref": "#/components/examples/repository-items-default-response"
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/starred-repository"
              examples:
                alternative-response-with-star-creation-timestamps:
                  "$ref": "#/components/examples/starred-repository-items-alternative-response-with-star-creation-timestamps"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: starring
  "/users/{username}/subscriptions":
    get:
      summary: List repositories watched by a user
      description: Lists repositories a user is watching.
      tags:
      - activity
      operationId: activity/list-repos-watched-by-user
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/activity/watching/#list-repositories-watched-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per_page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: activity
        subcategory: watching
  "/users/{username}/suspended":
    put:
      summary: Suspend a user
      description: |-
        If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.

        You can suspend any user account except your own.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://developer.github.com/enterprise/2.21/v3/#http-verbs)."
      operationId: enterprise-admin/suspend-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#suspend-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: The reason the user is being suspended. This message
                    will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/).
                    If you don't provide a `reason`, it will default to "Suspended
                    via API by _SITE\_ADMINISTRATOR_", where _SITE\_ADMINISTRATOR_
                    is the person who performed the action.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Unsuspend a user
      description: If your GitHub instance uses [LDAP Sync with Active Directory LDAP
        servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap),
        this API is disabled and will return a `403` response. Active Directory LDAP-authenticated
        users cannot be unsuspended using the API.
      operationId: enterprise-admin/unsuspend-user
      tags:
      - enterprise-admin
      externalDocs:
        description: API method documentation
        url: https://developer.github.com/enterprise/2.21/v3/enterprise-admin/users/#unsuspend-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Empty response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: The reason the user is being unsuspended. This message
                    will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/).
                    If you don't provide a `reason`, it will default to "Unsuspended
                    via API by _SITE\_ADMINISTRATOR_", where _SITE\_ADMINISTRATOR_
                    is the person who performed the action.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: enterprise-admin
        subcategory: users
  "/zen":
    get:
      summary: Get the Zen of GitHub
      description: Get a random sentence from the Zen of GitHub
      tags:
      - meta
      operationId: meta/get-zen
      responses:
        '200':
          description: response
          content:
            text/plain:
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: meta
components:
  parameters:
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    hook-id:
      name: hook_id
      in: path
      required: true
      schema:
        type: integer
    key-ids:
      name: key_ids
      in: path
      required: true
      schema:
        type: string
    team-id:
      name: team_id
      in: path
      required: true
      schema:
        type: integer
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    pre-receive-environment-id:
      name: pre_receive_environment_id
      in: path
      required: true
      schema:
        type: integer
    pre-receive-hook-id:
      name: pre_receive_hook_id
      in: path
      required: true
      schema:
        type: integer
    token-id:
      name: token_id
      in: path
      required: true
      schema:
        type: integer
    per_page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    installation_id:
      name: installation_id
      description: installation_id parameter
      in: path
      required: true
      schema:
        type: integer
    grant_id:
      name: grant_id
      description: grant_id parameter
      in: path
      required: true
      schema:
        type: integer
    client-id:
      name: client_id
      in: path
      required: true
      schema:
        type: string
    access-token:
      name: access_token
      in: path
      required: true
      schema:
        type: string
    app_slug:
      name: app_slug
      in: path
      required: true
      schema:
        type: string
    authorization_id:
      name: authorization_id
      description: authorization_id parameter
      in: path
      required: true
      schema:
        type: integer
    since:
      name: since
      description: 'Only show notifications updated after the given time. This is
        a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
    gist_id:
      name: gist_id
      description: gist_id parameter
      in: path
      required: true
      schema:
        type: string
    comment_id:
      name: comment_id
      description: comment_id parameter
      in: path
      required: true
      schema:
        type: integer
    labels:
      name: labels
      description: 'A list of comma separated label names. Example: `bug,ui,@high`'
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: One of `asc` (ascending) or `desc` (descending).
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    all:
      name: all
      description: If `true`, show notifications marked as read.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    participating:
      name: participating
      description: If `true`, only shows notifications in which the user is directly
        participating or mentioned.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    before:
      name: before
      description: 'Only show notifications updated before the given time. This is
        a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
    thread_id:
      name: thread_id
      description: thread_id parameter
      in: path
      required: true
      schema:
        type: integer
    team_slug:
      name: team_slug
      description: team_slug parameter
      in: path
      required: true
      schema:
        type: string
    discussion-number:
      name: discussion_number
      in: path
      required: true
      schema:
        type: integer
    comment-number:
      name: comment_number
      in: path
      required: true
      schema:
        type: integer
    reaction-id:
      name: reaction_id
      in: path
      required: true
      schema:
        type: integer
    project-id:
      name: project_id
      in: path
      required: true
      schema:
        type: integer
    card_id:
      name: card_id
      description: card_id parameter
      in: path
      required: true
      schema:
        type: integer
    column_id:
      name: column_id
      description: column_id parameter
      in: path
      required: true
      schema:
        type: integer
    branch:
      name: branch
      description: branch+ parameter
      in: path
      required: true
      schema:
        type: string
    check_run_id:
      name: check_run_id
      description: check_run_id parameter
      in: path
      required: true
      schema:
        type: integer
    check_suite_id:
      name: check_suite_id
      description: check_suite_id parameter
      in: path
      required: true
      schema:
        type: integer
    check_name:
      name: check_name
      description: Returns check runs with the specified `name`.
      in: query
      required: false
      schema:
        type: string
    status:
      name: status
      description: Returns check runs with the specified `status`. Can be one of `queued`,
        `in_progress`, or `completed`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - queued
        - in_progress
        - completed
    commit_sha:
      name: commit_sha
      description: commit_sha+ parameter
      in: path
      required: true
      schema:
        type: string
    deployment_id:
      name: deployment_id
      description: deployment_id parameter
      in: path
      required: true
      schema:
        type: integer
    invitation_id:
      name: invitation_id
      description: invitation_id parameter
      in: path
      required: true
      schema:
        type: integer
    sort:
      name: sort
      description: One of `created` (when the repository was starred) or `updated`
        (when it was last pushed to).
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    issue_number:
      name: issue_number
      description: issue_number parameter
      in: path
      required: true
      schema:
        type: integer
    key_id:
      name: key_id
      description: key_id parameter
      in: path
      required: true
      schema:
        type: integer
    milestone_number:
      name: milestone_number
      description: milestone_number parameter
      in: path
      required: true
      schema:
        type: integer
    pull-number:
      name: pull_number
      in: path
      required: true
      schema:
        type: integer
    review_id:
      name: review_id
      description: review_id parameter
      in: path
      required: true
      schema:
        type: integer
    asset_id:
      name: asset_id
      description: asset_id parameter
      in: path
      required: true
      schema:
        type: integer
    release_id:
      name: release_id
      description: release_id parameter
      in: path
      required: true
      schema:
        type: integer
    order:
      name: order
      description: Determines whether the first search result returned is the highest
        number of matches (`desc`) or lowest number of matches (`asc`). This parameter
        is ignored unless you provide `sort`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - desc
        - asc
        default: desc
    gpg_key_id:
      name: gpg_key_id
      description: gpg_key_id parameter
      in: path
      required: true
      schema:
        type: integer
    repository_id:
      name: repository_id
      in: path
      required: true
      schema:
        type: integer
  schemas:
    global-hook:
      type: object
      properties:
        type:
          type: string
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
        events:
          type: array
          items:
            type: string
        config:
          type: object
          properties:
            url:
              type: string
            content_type:
              type: string
            insecure_ssl:
              type: string
            secret:
              type: string
        updated_at:
          type: string
        created_at:
          type: string
        url:
          type: string
        ping_url:
          type: string
    global-hook-2:
      type: object
      properties:
        type:
          type: string
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
        events:
          type: array
          items:
            type: string
        config:
          type: object
          properties:
            url:
              type: string
            content_type:
              type: string
            insecure_ssl:
              type: string
        updated_at:
          type: string
        created_at:
          type: string
        url:
          type: string
        ping_url:
          type: string
    enterprise-public-key:
      type: object
      properties:
        id:
          type: string
        key_id:
          type: string
        key:
          type: string
        user_id:
          nullable: true
          type: integer
        repository_id:
          nullable: true
          type: integer
        url:
          type: string
    ldap-mapping-team:
      type: object
      properties:
        ldap_dn:
          type: string
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        html_url:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        privacy:
          type: string
        permission:
          type: string
        members_url:
          type: string
        repositories_url:
          type: string
        parent:
          nullable: true
    ldap-mapping-user:
      type: object
      properties:
        ldap_dn:
          type: string
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
        gravatar_id:
          type: string
        url:
          type: string
        html_url:
          type: string
        followers_url:
          type: string
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
        organizations_url:
          type: string
        repos_url:
          type: string
        events_url:
          type: string
        received_events_url:
          type: string
        type:
          type: string
        site_admin:
          type: boolean
    organization-simple:
      title: Organization Simple
      description: Organization Simple
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
    pre-receive-environment:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        default_environment:
          type: boolean
        created_at:
          type: string
        hooks_count:
          type: integer
        download:
          type: object
          properties:
            url:
              type: string
            state:
              type: string
            downloaded_at:
              nullable: true
              type: string
            message:
              nullable: true
              type: string
    pre-receive-environment-download-status:
      type: object
      properties:
        url:
          type: string
        state:
          type: string
        downloaded_at:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
    pre-receive-hook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enforcement:
          type: string
        script:
          type: string
        script_repository:
          type: object
          properties:
            id:
              type: integer
            full_name:
              type: string
            url:
              type: string
            html_url:
              type: string
        environment:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            image_url:
              type: string
            url:
              type: string
            html_url:
              type: string
            default_environment:
              type: boolean
            created_at:
              type: string
            hooks_count:
              type: integer
            download:
              type: object
              properties:
                url:
                  type: string
                state:
                  type: string
                downloaded_at:
                  nullable: true
                  type: string
                message:
                  nullable: true
                  type: string
        allow_downstream_configuration:
          type: boolean
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: ''
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    scoped-installation:
      title: Scoped Installation
      type: object
      properties:
        permissions:
          type: object
          example:
            issues: read
            deployments: write
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        account:
          "$ref": "#/components/schemas/simple-user"
      required:
      - permissions
      - repository_selection
      - single_file_name
      - repositories_url
      - account
    authorization:
      title: Authorization
      description: The authorization for an OAuth app, GitHub App, or a Personal Access
        Token.
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/authorizations/1
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          example:
          - public_repo
          - user
          nullable: true
        token:
          type: string
          example: ''
        token_last_eight:
          type: string
          example: '12345678'
          nullable: true
        hashed_token:
          type: string
          example: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - client_id
          - name
          - url
        note:
          type: string
          example: optional note
          nullable: true
        note_url:
          type: string
          format: uri
          example: http://optional/note/url
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        fingerprint:
          type: string
          example: jklmnop12345678
          nullable: true
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        installation:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/scoped-installation"
      required:
      - app
      - id
      - note
      - note_url
      - scopes
      - token
      - hashed_token
      - token_last_eight
      - fingerprint
      - url
      - created_at
      - updated_at
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to specific
        repositories. They come with granular permissions and built-in webhooks. GitHub
        apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: ''
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
            RSA PRIVATE KEY-----\n"'
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
      additionalProperties: true
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    enterprise:
      title: Enterprise
      description: An enterprise account
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/enterprise"
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped
            to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          type: object
          example:
            issues: read
            deployments: write
          properties:
            deployments:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            pull_requests:
              type: string
            statuses:
              type: string
            issues:
              type: string
              example: '"read"'
            organization_administration:
              type: string
              example: '"read"'
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
      - id
      - app_id
      - app_slug
      - target_id
      - target_type
      - single_file_name
      - repository_selection
      - access_tokens_url
      - html_url
      - repositories_url
      - events
      - account
      - permissions
      - created_at
      - updated_at
    license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
    repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                push:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            template_repository:
              type: string
            allow_squash_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
            anonymous_access_enabled:
              type: boolean
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    installation-token:
      title: Installation Token
      description: Authentication token for a GitHub App installed on a user or org.
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
        permissions:
          type: object
          properties:
            issues:
              type: string
            contents:
              type: string
            metadata:
              type: string
              example: read
            single_file:
              type: string
              example: read
        repository_selection:
          type: string
          enum:
          - all
          - selected
        repositories:
          type: array
          items:
            "$ref": "#/components/schemas/repository"
        single_file:
          type: string
          example: README.md
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    application-grant:
      title: Application Grant
      description: The authorization associated with an OAuth Access.
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/applications/grants/1
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - client_id
          - name
          - url
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        scopes:
          type: array
          items:
            type: string
          example:
          - public_repo
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
      required:
      - app
      - id
      - scopes
      - url
      - created_at
      - updated_at
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    content-reference-attachment:
      title: ContentReferenceAttachment
      description: Content Reference attachments allow you to provide context around
        URLs posted in comments
      type: object
      properties:
        id:
          description: The ID of the attachment
          example: 21
          type: integer
        title:
          description: The title of the attachment
          example: Title of the attachment
          type: string
          maxLength: 1024
        body:
          description: The body of the attachment
          example: Body of the attachment
          type: string
          maxLength: 262144
        node_id:
          description: The node_id of the content attachment
          example: MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=
          type: string
      required:
      - id
      - title
      - body
    license-info:
      type: object
      properties:
        seats:
          type: integer
        seats_used:
          type: integer
        seats_available:
          type: integer
        kind:
          type: string
        days_until_expiration:
          type: integer
        expire_at:
          type: string
    enterprise-overview:
      type: object
      properties:
        repos:
          type: object
          properties:
            total_repos:
              type: integer
            root_repos:
              type: integer
            fork_repos:
              type: integer
            org_repos:
              type: integer
            total_pushes:
              type: integer
            total_wikis:
              type: integer
        hooks:
          type: object
          properties:
            total_hooks:
              type: integer
            active_hooks:
              type: integer
            inactive_hooks:
              type: integer
        pages:
          type: object
          properties:
            total_pages:
              type: integer
        orgs:
          type: object
          properties:
            total_orgs:
              type: integer
            disabled_orgs:
              type: integer
            total_teams:
              type: integer
            total_team_members:
              type: integer
        users:
          type: object
          properties:
            total_users:
              type: integer
            admin_users:
              type: integer
            suspended_users:
              type: integer
        pulls:
          type: object
          properties:
            total_pulls:
              type: integer
            merged_pulls:
              type: integer
            mergeable_pulls:
              type: integer
            unmergeable_pulls:
              type: integer
        issues:
          type: object
          properties:
            total_issues:
              type: integer
            open_issues:
              type: integer
            closed_issues:
              type: integer
        milestones:
          type: object
          properties:
            total_milestones:
              type: integer
            open_milestones:
              type: integer
            closed_milestones:
              type: integer
        gists:
          type: object
          properties:
            total_gists:
              type: integer
            private_gists:
              type: integer
            public_gists:
              type: integer
        comments:
          type: object
          properties:
            total_commit_comments:
              type: integer
            total_gist_comments:
              type: integer
            total_issue_comments:
              type: integer
            total_pull_request_comments:
              type: integer
    actor:
      title: Actor
      description: Actor
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        display_login:
          type: string
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - login
      - gravatar_id
      - url
      - avatar_url
    milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
    issue-simple:
      title: Issue Simple
      description: Issue Simple
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDU6SXNzdWUx
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        labels_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/issues/1347
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        title:
          type: string
          example: Found a bug
        body:
          type: string
          example: I'm having a problem with this.
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/milestone"
        locked:
          type: boolean
          example: true
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        comments:
          type: integer
          example: 0
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-04-22T13:33:48Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-22T13:33:48Z'
        author_association:
          type: string
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        "+1":
          type: integer
        "-1":
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - "+1"
      - "-1"
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    issue-comment:
      title: Issue Comment
      description: Comments provide a way for people to collaborate on an issue.
      type: object
      properties:
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          type: string
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - id
      - node_id
      - html_url
      - issue_url
      - author_association
      - user
      - url
      - created_at
      - updated_at
    event:
      title: Event
      description: Event
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          nullable: true
        actor:
          "$ref": "#/components/schemas/actor"
        repo:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - id
          - name
          - url
        org:
          "$ref": "#/components/schemas/actor"
        payload:
          type: object
          properties:
            action:
              type: string
            issue:
              "$ref": "#/components/schemas/issue-simple"
            comment:
              "$ref": "#/components/schemas/issue-comment"
            pages:
              type: array
              items:
                type: object
                properties:
                  page_name:
                    type: string
                  title:
                    type: string
                  summary:
                    type: string
                    nullable: true
                  action:
                    type: string
                  sha:
                    type: string
                  html_url:
                    type: string
          required:
          - action
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - type
      - actor
      - repo
      - payload
      - public
      - created_at
    feed:
      title: Feed
      description: Feed
      type: object
      properties:
        timeline_url:
          type: string
          example: https://github.com/timeline
        user_url:
          type: string
          example: https://github.com/{user}
        current_user_public_url:
          type: string
          example: https://github.com/octocat
        current_user_url:
          type: string
          example: https://github.com/octocat.private?token=abc123
        current_user_actor_url:
          type: string
          example: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url:
          type: string
          example: ''
        current_user_organization_urls:
          type: array
          example:
          - https://github.com/organizations/github/octocat.private.atom?token=abc123
          items:
            type: string
            format: uri
        _links:
          type: array
          required:
          - timeline
          - user
          items:
            type: object
            properties:
              timeline:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              user:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              current_user_public:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              current_user:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              current_user_actor:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              current_user_organization:
                type: object
                properties:
                  href:
                    type: string
                  type:
                    type: string
              current_user_organizations:
                type: array
                items:
                  type: object
                  properties:
                    href:
                      type: string
                    type:
                      type: string
      required:
      - _links
      - timeline_url
      - user_url
    base-gist:
      title: Base Gist
      description: Base Gist
      type: object
      properties:
        url:
          type: string
          format: uri
        forks_url:
          type: string
          format: uri
        commits_url:
          type: string
          format: uri
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
          format: uri
        git_push_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        files:
          type: object
          additionalProperties:
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        comments_url:
          type: string
          format: uri
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
        forks:
          type: array
          items: {}
        history:
          type: array
          items: {}
      required:
      - id
      - node_id
      - url
      - forks_url
      - commits_url
      - git_pull_url
      - git_push_url
      - html_url
      - comments_url
      - public
      - description
      - comments
      - user
      - files
      - created_at
      - updated_at
    gist-simple:
      title: Gist Simple
      description: Gist Simple
      type: object
      properties:
        url:
          type: string
        forks_url:
          type: string
        commits_url:
          type: string
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
        git_push_url:
          type: string
        html_url:
          type: string
        files:
          type: object
          additionalProperties:
            nullable: true
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
              truncated:
                type: boolean
              content:
                type: string
        public:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          type: string
          nullable: true
        comments_url:
          type: string
        owner:
          "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
    gist-full:
      title: Gist Full
      description: Gist Full
      allOf:
      - "$ref": "#/components/schemas/gist-simple"
      - type: object
        properties:
          forks:
            type: array
            items:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    login:
                      type: string
                    id:
                      type: integer
                    node_id:
                      type: string
                    avatar_url:
                      type: string
                    gravatar_id:
                      type: string
                    url:
                      type: string
                    html_url:
                      type: string
                    followers_url:
                      type: string
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                    organizations_url:
                      type: string
                    repos_url:
                      type: string
                    events_url:
                      type: string
                    received_events_url:
                      type: string
                    type:
                      type: string
                    site_admin:
                      type: boolean
                url:
                  type: string
                id:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
          history:
            type: array
            items:
              type: object
              properties:
                url:
                  type: string
                version:
                  type: string
                user:
                  type: object
                  properties:
                    login:
                      type: string
                    id:
                      type: integer
                    node_id:
                      type: string
                    avatar_url:
                      type: string
                    gravatar_id:
                      type: string
                    url:
                      type: string
                    html_url:
                      type: string
                    followers_url:
                      type: string
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                    organizations_url:
                      type: string
                    repos_url:
                      type: string
                    events_url:
                      type: string
                    received_events_url:
                      type: string
                    type:
                      type: string
                    site_admin:
                      type: boolean
                  nullable: true
                change_status:
                  type: object
                  properties:
                    deletions:
                      type: integer
                    additions:
                      type: integer
                    total:
                      type: integer
                committed_at:
                  type: string
          fork_of:
            nullable: true
            allOf:
            - "$ref": "#/components/schemas/gist-simple"
          url:
            type: string
            example: '"https://api.github.com/gists/d8de7663c84491ba9eeb9ca1fd20ced8/cb5b95fe0f15ada6d34a421007ba2e4a34e2771e"'
          forks_url:
            type: string
            example: '"https://api.github.com/gists/d8de7663c84491ba9eeb9ca1fd20ced8/forks"'
          commits_url:
            type: string
            example: '"https://api.github.com/gists/d8de7663c84491ba9eeb9ca1fd20ced8/commits"'
          id:
            type: string
            example: '"d8de7663c84491ba9eeb9ca1fd20ced8"'
          node_id:
            type: string
            example: '"MDQ6R2lzdGQ4ZGU3NjYzYzg0NDkxYmE5ZWViOWNhMWZkMjBjZWQ4"'
          git_pull_url:
            type: string
            example: '"https://gist.github.com/d8de7663c84491ba9eeb9ca1fd20ced8.git"'
          git_push_url:
            type: string
            example: '"https://gist.github.com/d8de7663c84491ba9eeb9ca1fd20ced8.git"'
          html_url:
            type: string
            example: '"https://gist.github.com/d8de7663c84491ba9eeb9ca1fd20ced8"'
          created_at:
            type: string
            example: '"2020-07-09T00:18:06Z"'
          updated_at:
            type: string
            example: '"2020-07-09T00:18:06Z"'
          description:
            type: string
            example: '"description"'
            nullable: true
          comments:
            type: integer
            example: '0'
          comments_url:
            type: string
            example: '"https://api.github.com/gists/d8de7663c84491ba9eeb9ca1fd20ced8/comments"'
    gist-comment:
      title: Gist Comment
      description: A comment made to a gist.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOkdpc3RDb21tZW50MQ==
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body:
          description: The comment text.
          type: string
          maxLength: 65535
          example: Body of the attachment
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        author_association:
          type: string
      required:
      - url
      - id
      - node_id
      - user
      - body
      - author_association
      - created_at
      - updated_at
    gist-commit:
      title: Gist Commit
      description: Gist Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        version:
          type: string
          example: 57a7f021a713b1c5a6a199b54cc514735d2d462f
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        change_status:
          type: object
          properties:
            total:
              type: integer
            additions:
              type: integer
            deletions:
              type: integer
        committed_at:
          type: string
          format: date-time
          example: '2010-04-14T02:15:15Z'
      required:
      - url
      - user
      - version
      - committed_at
      - change_status
    gitignore-template:
      title: Gitignore Template
      description: Gitignore Template
      type: object
      properties:
        name:
          type: string
          example: C
        source:
          type: string
          example: |
            # Object files
            *.o

            # Libraries
            *.lib
            *.a

            # Shared objects (inc. Windows DLLs)
            *.dll
            *.so
            *.so.*
            *.dylib

            # Executables
            *.exe
            *.out
            *.app
      required:
      - name
      - source
    issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try
            and create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label
            names to replace the set of labels on this issue; send an empty array
            to clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
          - bug
          - registration
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              properties:
                id:
                  type: integer
                node_id:
                  type: string
                url:
                  type: string
                  format: uri
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                color:
                  type: string
                  nullable: true
                default:
                  type: boolean
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_by:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
        author_association:
          type: string
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
    license:
      title: License
      description: License
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        spdx_id:
          type: string
          example: MIT
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/licenses/mit
          nullable: true
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
          example: http://choosealicense.com/licenses/mit/
        description:
          type: string
          example: A permissive license that is short and to the point. It lets people
            do anything with your code with proper attribution and without warranty.
        implementation:
          type: string
          example: Create a text file (typically named LICENSE or LICENSE.txt) in
            the root of your source code and copy the text of the license into the
            file. Replace [year] with the current year and [fullname] with the name
            (or names) of the copyright holders.
        permissions:
          type: array
          example:
          - commercial-use
          - modifications
          - distribution
          - sublicense
          - private-use
          items:
            type: string
        conditions:
          type: array
          example:
          - include-copyright
          items:
            type: string
        limitations:
          type: array
          example:
          - no-liability
          items:
            type: string
        body:
          type: string
          example: |2


            The MIT License (MIT)

            Copyright (c) [year] [fullname]

            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the "Software"), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:

            The above copyright notice and this permission notice shall be included in all
            copies or substantial portions of the Software.

            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
            FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
            AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
            LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
            OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
            SOFTWARE.
        featured:
          type: boolean
          example: true
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      - html_url
      - description
      - implementation
      - permissions
      - conditions
      - limitations
      - body
      - featured
    api-overview:
      title: Api Overview
      description: Api Overview
      type: object
      properties:
        verifiable_password_authentication:
          type: boolean
          example: true
        github_services_sha:
          type: string
          example: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        installed_version:
          type: string
      required:
      - verifiable_password_authentication
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            push:
              type: boolean
            pull:
              type: boolean
        template_repository:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        anonymous_access_enabled:
          type: boolean
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    thread:
      title: Thread
      description: Thread
      type: object
      properties:
        id:
          type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        subject:
          type: object
          properties:
            title:
              type: string
            url:
              type: string
            latest_comment_url:
              type: string
            type:
              type: string
        reason:
          type: string
        unread:
          type: boolean
        updated_at:
          type: string
        last_read_at:
          type: string
          nullable: true
        url:
          type: string
        subscription_url:
          type: string
          example: https://api.github.com/notifications/threads/2/subscription
    thread-subscription:
      title: Thread Subscription
      description: Thread Subscription
      type: object
      properties:
        subscribed:
          type: boolean
          example: true
        ignored:
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1/subscription
        thread_url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/1
      required:
      - created_at
      - ignored
      - reason
      - url
      - subscribed
    organization-full:
      title: Organization Full
      description: Organization Full
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        updated_at:
          type: string
          format: date-time
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
    org-hook:
      title: Org Hook
      description: Org Hook
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/pings
        name:
          type: string
          example: web
        events:
          type: array
          example:
          - push
          - pull_request
          items:
            type: string
        active:
          type: boolean
          example: true
        config:
          type: object
          properties:
            url:
              type: string
              example: '"http://example.com/2"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            secret:
              type: string
              example: '"********"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        type:
          type: string
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          example: active
        role:
          type: string
          example: admin
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          "$ref": "#/components/schemas/organization-simple"
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
          - can_create_repository
      required:
      - state
      - role
      - organization_url
      - url
      - organization
      - user
    org-pre-receive-hook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enforcement:
          type: string
        configuration_url:
          type: string
        allow_downstream_configuration:
          type: boolean
    project:
      title: Project
      description: Projects are a way to organize columns and cards of work.
      type: object
      properties:
        owner_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604
        html_url:
          type: string
          format: uri
          example: https://github.com/api-playground/projects-test/projects/12
        columns_url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604/columns
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDc6UHJvamVjdDEwMDI2MDQ=
        name:
          description: Name of the project
          example: Week One Sprint
          type: string
        body:
          description: Body of the project
          example: This project represents the sprint of the first week in January
          type: string
          nullable: true
        number:
          type: integer
          example: 1
        state:
          description: State of the project; either 'open' or 'closed'
          example: open
          type: string
        creator:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        organization_permission:
          description: The baseline permission that all organization members have
            on this project
          type: string
          enum:
          - read
          - write
          - admin
          - none
        private:
          description: Whether or not this project can be seen by everyone.
          type: boolean
        cards_url:
          type: string
          format: uri
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
          required:
          - read
          - write
          - admin
      required:
      - id
      - node_id
      - number
      - name
      - body
      - state
      - url
      - html_url
      - owner_url
      - creator
      - columns_url
      - created_at
      - updated_at
    team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        permission:
          type: string
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/team-simple"
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
    team-full:
      title: Full Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        name:
          description: Name of the team
          example: Developers
          type: string
        slug:
          type: string
          example: justice-league
        description:
          type: string
          example: A great team.
          nullable: true
        privacy:
          description: The level of privacy this team should have
          type: string
          enum:
          - closed
          - secret
          example: closed
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        parent:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/team-simple"
        members_count:
          type: integer
          example: 3
        repos_count:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
          example: '2017-07-14T16:53:42Z'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-17T12:37:15Z'
        organization:
          "$ref": "#/components/schemas/organization-full"
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - created_at
      - updated_at
      - members_count
      - repos_count
      - organization
    team-discussion:
      title: Team Discussion
      description: A team discussion is a persistent record of a free-form conversation
        within a team.
      type: object
      properties:
        author:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          type: string
          example: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          type: integer
          example: 0
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments
        created_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id:
          type: string
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: Whether or not this discussion should be restricted to team
            members and organization administrators.
          example: true
          type: boolean
        team_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - comments_count
      - comments_url
      - created_at
      - last_edited_at
      - html_url
      - pinned
      - private
      - node_id
      - number
      - team_url
      - title
      - updated_at
      - url
    team-discussion-comment:
      title: Team Discussion Comment
      description: A reply to a discussion within a team.
      type: object
      properties:
        author:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          type: string
          example: "<p>Do you like apples?</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        discussion_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id:
          type: string
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        updated_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - created_at
      - last_edited_at
      - discussion_url
      - html_url
      - node_id
      - number
      - updated_at
      - url
    reaction:
      title: Reaction
      description: Reactions to conversations provide a way to help people express
        their feelings more simply and effectively.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDg6UmVhY3Rpb24x
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        content:
          description: The reaction to use
          example: heart
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
        created_at:
          type: string
          format: date-time
          example: '2016-05-20T20:09:31Z'
      required:
      - id
      - node_id
      - user
      - content
      - created_at
    team-membership:
      title: Team Membership
      description: Team Membership
      type: object
      properties:
        url:
          type: string
          format: uri
        role:
          description: The role of the user in the team.
          enum:
          - member
          - maintainer
          default: member
          example: member
          type: string
        state:
          type: string
      required:
      - role
      - state
      - url
    team-project:
      title: Team Project
      description: A team's access to a project.
      type: object
      properties:
        owner_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        columns_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        body:
          type: string
          nullable: true
        number:
          type: integer
        state:
          type: string
        creator:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
        updated_at:
          type: string
        organization_permission:
          type: string
        private:
          type: boolean
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
    team-repository:
      title: Team Repository
      description: A team's access to a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                push:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            template_repository:
              type: string
            allow_squash_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
            anonymous_access_enabled:
              type: boolean
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        anonymous_access_enabled:
          type: boolean
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    project-card:
      title: Project Card
      description: Project cards represent a scope of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/cards/1478
        id:
          description: The project card's ID
          example: 42
          type: integer
        node_id:
          type: string
          example: MDExOlByb2plY3RDYXJkMTQ3OA==
        note:
          type: string
          example: Add payload for delete Project column
          nullable: true
        creator:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:21:06Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:20:22Z'
        archived:
          description: Whether or not the card is archived
          example: false
          type: boolean
        column_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        content_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
      required:
      - id
      - node_id
      - note
      - url
      - column_url
      - project_url
      - creator
      - created_at
      - updated_at
    project-column:
      title: Project Column
      description: Project columns contain cards of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
        cards_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367/cards
        id:
          description: The unique identifier of the project column
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name:
          description: Name of the project column
          example: Remaining tasks
          type: string
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:18:44Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:22:28Z'
      required:
      - id
      - node_id
      - url
      - project_url
      - cards_url
      - name
      - created_at
      - updated_at
    repository-collaborator-permission:
      title: Repository Collaborator Permission
      description: Repository Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
      required:
      - permission
      - user
    rate-limit:
      title: Rate Limit
      type: object
      properties:
        limit:
          type: integer
        remaining:
          type: integer
        reset:
          type: integer
      required:
      - limit
      - remaining
      - reset
    rate-limit-overview:
      title: Rate Limit Overview
      description: Rate Limit Overview
      type: object
      properties:
        resources:
          type: object
          properties:
            core:
              "$ref": "#/components/schemas/rate-limit"
            graphql:
              "$ref": "#/components/schemas/rate-limit"
            search:
              "$ref": "#/components/schemas/rate-limit"
            source_import:
              "$ref": "#/components/schemas/rate-limit"
            integration_manifest:
              "$ref": "#/components/schemas/rate-limit"
            code_scanning_upload:
              "$ref": "#/components/schemas/rate-limit"
          required:
          - core
          - search
        rate:
          "$ref": "#/components/schemas/rate-limit"
      required:
      - rate
      - resources
    full-repository:
      title: Full Repository
      description: Full Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
          example:
          - octocat
          - atom
          - electron
          - API
        has_issues:
          type: boolean
          example: true
        has_projects:
          type: boolean
          example: true
        has_wiki:
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
          example: true
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
          example: public
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
          - admin
          - pull
          - push
        allow_rebase_merge:
          type: boolean
          example: true
        template_repository:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/repository"
        allow_squash_merge:
          type: boolean
          example: true
        delete_branch_on_merge:
          type: boolean
          example: false
        allow_merge_commit:
          type: boolean
          example: true
        subscribers_count:
          type: integer
          example: 42
        network_count:
          type: integer
          example: 0
        license:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/license-simple"
        organization:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        parent:
          "$ref": "#/components/schemas/repository"
        source:
          "$ref": "#/components/schemas/repository"
        forks:
          type: integer
        master_branch:
          type: string
        open_issues:
          type: integer
        watchers:
          type: integer
        anonymous_access_enabled:
          description: Whether anonymous git access is allowed.
          default: true
          type: boolean
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - network_count
      - subscribers_count
    protected-branch-admin-enforced:
      title: Protected Branch Admin Enforced
      description: Protected Branch Admin Enforced
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled:
          type: boolean
          example: true
      required:
      - url
      - enabled
    protected-branch-pull-request-review:
      title: Protected Branch Pull Request Review
      description: Protected Branch Pull Request Review
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
        dismissal_restrictions:
          type: object
          properties:
            users:
              description: The list of users with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/simple-user"
            teams:
              description: The list of teams with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/team"
            url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
            users_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
            teams_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
        dismiss_stale_reviews:
          type: boolean
          example: true
        require_code_owner_reviews:
          type: boolean
          example: true
        required_approving_review_count:
          type: integer
          minimum: 1
          maximum: 6
          example: 2
      required:
      - dismiss_stale_reviews
      - require_code_owner_reviews
    branch-restriction-policy:
      title: Branch Restriction Policy
      description: Branch Restriction Policy
      type: object
      properties:
        url:
          type: string
          format: uri
        users_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        apps_url:
          type: string
          format: uri
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              node_id:
                type: string
              owner:
                type: object
                properties:
                  login:
                    type: string
                  id:
                    type: integer
                  node_id:
                    type: string
                  url:
                    type: string
                  repos_url:
                    type: string
                  events_url:
                    type: string
                  hooks_url:
                    type: string
                  issues_url:
                    type: string
                  members_url:
                    type: string
                  public_members_url:
                    type: string
                  avatar_url:
                    type: string
                  description:
                    type: string
                  gravatar_id:
                    type: string
                    example: '""'
                  html_url:
                    type: string
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                  followers_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                  following_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                  gists_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                  starred_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                  subscriptions_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                  organizations_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                  received_events_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                  type:
                    type: string
                    example: '"Organization"'
              name:
                type: string
              description:
                type: string
              external_url:
                type: string
              html_url:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              permissions:
                type: object
                properties:
                  metadata:
                    type: string
                  contents:
                    type: string
                  issues:
                    type: string
                  single_file:
                    type: string
              events:
                type: array
                items:
                  type: string
      required:
      - url
      - users_url
      - teams_url
      - apps_url
      - users
      - teams
      - apps
    branch-protection:
      title: Branch Protection
      description: Branch Protection
      type: object
      properties:
        url:
          type: string
        required_status_checks:
          type: object
          properties:
            url:
              type: string
            enforcement_level:
              type: string
            contexts:
              type: array
              items:
                type: string
            contexts_url:
              type: string
          required:
          - enforcement_level
          - contexts
        enforce_admins:
          "$ref": "#/components/schemas/protected-branch-admin-enforced"
        required_pull_request_reviews:
          "$ref": "#/components/schemas/protected-branch-pull-request-review"
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
        enabled:
          type: boolean
        name:
          type: string
          example: '"branch/with/protection"'
        protection_url:
          type: string
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
      required:
      - enabled
      - required_status_checks
    short-branch:
      title: Short Branch
      description: Short Branch
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
      required:
      - name
      - commit
      - protected
    git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              nullable: true
              allOf:
              - "$ref": "#/components/schemas/git-user"
            committer:
              nullable: true
              allOf:
              - "$ref": "#/components/schemas/git-user"
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
              - sha
              - url
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        committer:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
            - sha
            - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              additions:
                type: integer
              deletions:
                type: integer
              changes:
                type: integer
              status:
                type: string
              raw_url:
                type: string
              blob_url:
                type: string
              patch:
                type: string
              sha:
                type: string
                example: '"1e8e60ce9733d5283f7836fa602b6365a66b2567"'
              contents_url:
                type: string
                example: '"https://api.github.com/repos/owner-3d68404b07d25daeb2d4a6bf/AAA_Public_Repo/contents/geometry.js?ref=c3956841a7cb7e8ba4a6fd923568d86958f01573"'
              previous_filename:
                type: string
                example: '"subdir/before_name.txt"'
      required:
      - url
      - sha
      - node_id
      - html_url
      - comments_url
      - commit
      - author
      - committer
      - parents
    branch-with-protection:
      title: Branch With Protection
      description: Branch With Protection
      type: object
      properties:
        name:
          type: string
        commit:
          "$ref": "#/components/schemas/commit"
        _links:
          type: object
          properties:
            html:
              type: string
            self:
              type: string
              format: uri
          required:
          - html
          - self
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
        pattern:
          type: string
          example: '"mas*"'
        required_approving_review_count:
          type: integer
          example: '0'
      required:
      - name
      - commit
      - _links
      - protection
      - protected
      - protection_url
    status-check-policy:
      title: Status Check Policy
      description: Status Check Policy
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict:
          type: boolean
          example: true
        contexts:
          type: array
          example:
          - continuous-integration/travis-ci
          items:
            type: string
        contexts_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
      required:
      - url
      - contexts_url
      - strict
      - contexts
    protected-branch:
      title: Protected Branch
      description: Branch protections protect branches
      type: object
      properties:
        url:
          type: string
          format: uri
        required_status_checks:
          "$ref": "#/components/schemas/status-check-policy"
        required_pull_request_reviews:
          type: object
          properties:
            url:
              type: string
              format: uri
            dismiss_stale_reviews:
              type: boolean
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            dismissal_restrictions:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                users_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                users:
                  type: array
                  items:
                    "$ref": "#/components/schemas/simple-user"
                teams:
                  type: array
                  items:
                    "$ref": "#/components/schemas/team"
              required:
              - url
              - users_url
              - teams_url
              - users
              - teams
          required:
          - url
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        enforce_admins:
          type: object
          properties:
            url:
              type: string
              format: uri
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - url
          - enabled
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
      required:
      - url
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
      required:
      - id
      - number
      - url
      - head
      - base
    check-run:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      properties:
        id:
          description: The id of the check.
          example: 21
          type: integer
        head_sha:
          description: The SHA of the commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        external_id:
          type: string
          example: ''
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        details_url:
          type: string
          example: https://example.com
          nullable: true
        status:
          description: The phase of the lifecycle that the check is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
        conclusion:
          type: string
          example: neutral
          nullable: true
        started_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        completed_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        output:
          type: object
          properties:
            title:
              type: string
              nullable: true
            summary:
              type: string
              nullable: true
            text:
              type: string
              nullable: true
            annotations_count:
              type: integer
            annotations_url:
              type: string
              format: uri
          required:
          - title
          - summary
          - text
          - annotations_count
          - annotations_url
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        check_suite:
          type: object
          properties:
            id:
              type: integer
          required:
          - id
          nullable: true
        app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
        pull_requests:
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
      required:
      - id
      - node_id
      - head_sha
      - name
      - url
      - html_url
      - details_url
      - status
      - conclusion
      - started_at
      - completed_at
      - external_id
      - check_suite
      - output
      - app
      - pull_requests
    check-annotation:
      title: Check Annotation
      description: Check Annotation
      type: object
      properties:
        path:
          type: string
          example: README.md
        start_line:
          type: integer
          example: 2
        end_line:
          type: integer
          example: 2
        start_column:
          type: integer
          example: 5
          nullable: true
        end_column:
          type: integer
          example: 10
          nullable: true
        annotation_level:
          type: string
          example: warning
          nullable: true
        title:
          type: string
          example: Spell Checker
          nullable: true
        message:
          type: string
          example: Check your spelling for 'banaas'.
          nullable: true
        raw_details:
          type: string
          example: Do you mean 'bananas' or 'banana'?
          nullable: true
        blob_href:
          type: string
      required:
      - path
      - blob_href
      - start_line
      - end_line
      - start_column
      - end_column
      - annotation_level
      - title
      - message
      - raw_details
    simple-commit:
      title: Simple Commit
      description: Simple Commit
      type: object
      properties:
        id:
          type: string
        tree_id:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        author:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
    check-suite:
      title: CheckSuite
      description: A suite of checks performed on the code of a given code change
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        head_branch:
          type: string
          example: master
          nullable: true
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        status:
          type: string
          example: completed
          nullable: true
        conclusion:
          type: string
          example: neutral
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          nullable: true
        before:
          type: string
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          nullable: true
        after:
          type: string
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          nullable: true
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
          nullable: true
        app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        head_commit:
          "$ref": "#/components/schemas/simple-commit"
        latest_check_runs_count:
          type: integer
        check_runs_url:
          type: string
      required:
      - id
      - node_id
      - head_branch
      - status
      - conclusion
      - head_sha
      - url
      - before
      - after
      - created_at
      - updated_at
      - app
      - head_commit
      - repository
      - latest_check_runs_count
      - check_runs_url
      - pull_requests
    check-suite-preference:
      title: Check Suite Preference
      description: Check suite configuration preferences for a repository.
      type: object
      properties:
        preferences:
          type: object
          properties:
            auto_trigger_checks:
              type: array
              items:
                type: object
                properties:
                  app_id:
                    type: integer
                  setting:
                    type: boolean
                required:
                - app_id
                - setting
        repository:
          "$ref": "#/components/schemas/repository"
    collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: ''
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            push:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    repository-invitation:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        invitee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        inviter:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        permissions:
          description: The permission associated with the invitation.
          example: read
          type: string
          enum:
          - read
          - write
          - admin
        created_at:
          type: string
          format: date-time
          example: '2016-06-13T14:52:50-05:00'
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
        html_url:
          type: string
          example: https://github.com/octocat/Hello-World/invitations
        node_id:
          type: string
      required:
      - id
      - node_id
      - permissions
      - inviter
      - invitee
      - repository
      - url
      - html_url
      - created_at
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          type: string
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - url
      - html_url
      - id
      - node_id
      - user
      - position
      - line
      - path
      - commit_id
      - body
      - author_association
      - created_at
      - updated_at
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    branch-short:
      title: Branch Short
      description: Branch Short
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
        protected:
          type: boolean
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
      - href
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
              color:
                type: string
              default:
                type: boolean
        milestone:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team-simple"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              nullable: true
              allOf:
              - "$ref": "#/components/schemas/simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              nullable: true
              allOf:
              - "$ref": "#/components/schemas/simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          type: string
          example: OWNER
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
    simple-commit-status:
      title: Simple Commit Status
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        context:
          type: string
        target_url:
          type: string
          format: uri
        required:
          type: boolean
          nullable: true
        avatar_url:
          type: string
          nullable: true
          format: uri
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - description
      - id
      - node_id
      - state
      - context
      - target_url
      - avatar_url
      - url
      - created_at
      - updated_at
    combined-commit-status:
      title: Combined Commit Status
      description: Combined Commit Status
      type: object
      properties:
        state:
          type: string
        statuses:
          type: array
          items:
            "$ref": "#/components/schemas/simple-commit-status"
        sha:
          type: string
        total_count:
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        commit_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      required:
      - state
      - sha
      - total_count
      - statuses
      - repository
      - commit_url
      - url
    status:
      title: Status
      description: The status of a commit.
      type: object
      properties:
        url:
          type: string
        avatar_url:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        description:
          type: string
        target_url:
          type: string
        context:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        creator:
          "$ref": "#/components/schemas/simple-user"
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
        previous_filename:
          type: string
          example: file.txt
      required:
      - additions
      - blob_url
      - changes
      - contents_url
      - deletions
      - filename
      - raw_url
      - sha
      - status
    commit-comparison:
      title: Commit Comparison
      description: Commit Comparison
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          "$ref": "#/components/schemas/commit"
        merge_base_commit:
          "$ref": "#/components/schemas/commit"
        status:
          type: string
          enum:
          - diverged
          - ahead
          - behind
          - identical
          example: ahead
        ahead_by:
          type: integer
          example: 4
        behind_by:
          type: integer
          example: 5
        total_commits:
          type: integer
          example: 6
        commits:
          type: array
          items:
            "$ref": "#/components/schemas/commit"
        files:
          type: array
          items:
            "$ref": "#/components/schemas/diff-entry"
      required:
      - url
      - html_url
      - permalink_url
      - diff_url
      - patch_url
      - base_commit
      - merge_base_commit
      - status
      - ahead_by
      - behind_by
      - total_commits
      - commits
      - files
    content-tree:
      title: Content Tree
      description: Content Tree
      type: object
      properties:
        type:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              size:
                type: integer
              name:
                type: string
              path:
                type: string
              content:
                type: string
              sha:
                type: string
              url:
                type: string
                format: uri
              git_url:
                type: string
                format: uri
                nullable: true
              html_url:
                type: string
                format: uri
                nullable: true
              download_url:
                type: string
                format: uri
                nullable: true
              _links:
                type: object
                properties:
                  git:
                    type: string
                    format: uri
                    nullable: true
                  html:
                    type: string
                    format: uri
                    nullable: true
                  self:
                    type: string
                    format: uri
                required:
                - git
                - html
                - self
            required:
            - _links
            - git_url
            - html_url
            - download_url
            - name
            - path
            - sha
            - size
            - type
            - url
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-directory:
      title: Content Directory
      description: A list of directory items
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          size:
            type: integer
          name:
            type: string
          path:
            type: string
          content:
            type: string
          sha:
            type: string
          url:
            type: string
            format: uri
          git_url:
            type: string
            format: uri
            nullable: true
          html_url:
            type: string
            format: uri
            nullable: true
          download_url:
            type: string
            format: uri
            nullable: true
          _links:
            type: object
            properties:
              git:
                type: string
                format: uri
                nullable: true
              html:
                type: string
                format: uri
                nullable: true
              self:
                type: string
                format: uri
            required:
            - git
            - html
            - self
        required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
    content-file:
      title: Content File
      description: Content File
      type: object
      properties:
        type:
          type: string
        encoding:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        target:
          type: string
          example: '"actual/actual.md"'
        submodule_git_url:
          type: string
          example: '"git://example.com/defunkt/dotjs.git"'
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-symlink:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
        target:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - target
    content-submodule:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
        submodule_git_url:
          type: string
          format: uri
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - submodule_git_url
    file-commit:
      title: File Commit
      description: File Commit
      type: object
      properties:
        content:
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            url:
              type: string
            html_url:
              type: string
            git_url:
              type: string
            download_url:
              type: string
            type:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: string
                git:
                  type: string
                html:
                  type: string
          nullable: true
        commit:
          type: object
          properties:
            sha:
              type: string
            node_id:
              type: string
            url:
              type: string
            html_url:
              type: string
            author:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            committer:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
            tree:
              type: object
              properties:
                url:
                  type: string
                sha:
                  type: string
            parents:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  html_url:
                    type: string
                  sha:
                    type: string
            verification:
              type: object
              properties:
                verified:
                  type: boolean
                reason:
                  type: string
                signature:
                  type: string
                  nullable: true
                payload:
                  type: string
                  nullable: true
    contributor:
      title: Contributor
      description: Contributor
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        contributions:
          type: integer
        email:
          type: string
        name:
          type: string
      required:
      - contributions
      - type
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          type: object
          properties: {}
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist
            at some point in hte future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly
            interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
      required:
      - id
      - node_id
      - sha
      - ref
      - task
      - environment
      - creator
      - payload
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    deployment-status:
      title: Deployment Status
      description: The status of a deployment.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state:
          description: The state of the status.
          enum:
          - error
          - failure
          - inactive
          - pending
          - success
          - queued
          - in_progress
          example: success
          type: string
        creator:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        description:
          description: A short description of the status.
          default: ''
          type: string
          maxLength: 140
          example: Deployment finished successfully.
        environment:
          description: The environment of the deployment that the status is for.
          default: ''
          type: string
          example: production
        target_url:
          description: 'Deprecated: the URL to associate with this status.'
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        deployment_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        environment_url:
          description: The URL for accessing your environment.
          default: ''
          type: string
          format: uri
          example: ''
        log_url:
          description: The URL to associate with this status.
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
      required:
      - id
      - node_id
      - state
      - creator
      - description
      - deployment_url
      - target_url
      - repository_url
      - url
      - created_at
      - updated_at
    short-blob:
      title: Short Blob
      description: Short Blob
      type: object
      properties:
        url:
          type: string
        sha:
          type: string
    blob:
      title: Blob
      description: Blob
      type: object
      properties:
        content:
          type: string
        encoding:
          type: string
        url:
          type: string
          format: uri
        sha:
          type: string
        size:
          type: integer
          nullable: true
        node_id:
          type: string
        highlighted_content:
          type: string
      required:
      - sha
      - url
      - node_id
      - size
      - content
      - encoding
    git-commit:
      title: Git Commit
      description: Low-level Git commit operations within a repository
      type: object
      properties:
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
        html_url:
          type: string
          format: uri
    git-ref:
      title: Git Reference
      description: Git references within a repository
      type: object
      properties:
        ref:
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        object:
          type: object
          properties:
            type:
              type: string
            sha:
              description: SHA for the reference
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
              minLength: 40
              maxLength: 40
            url:
              type: string
              format: uri
    git-tag:
      title: Git Tag
      description: Metadata for a Git tag
      type: object
      properties:
        node_id:
          type: string
          example: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        tag:
          description: Name of the tag
          example: v0.0.1
          type: string
        sha:
          type: string
          example: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        url:
          description: URL for the tag
          example: https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
          type: string
          format: uri
        message:
          description: Message describing the purpose of the tag
          example: Initial public release
          type: string
        tagger:
          type: object
          properties:
            date:
              type: string
            email:
              type: string
            name:
              type: string
          required:
          - date
          - email
          - name
        object:
          type: object
          properties:
            sha:
              type: string
            type:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - type
          - url
        verification:
          "$ref": "#/components/schemas/verification"
      required:
      - sha
      - url
      - node_id
      - tagger
      - object
      - tag
      - message
    git-tree:
      title: Git Tree
      description: The hierarchy between files in a Git repository.
      type: object
      properties:
        sha:
          type: string
        url:
          type: string
          format: uri
        truncated:
          type: boolean
        tree:
          description: Objects specifying a tree structure
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                example: '"test/file.rb"'
              mode:
                type: string
                example: '"040000"'
              type:
                type: string
                example: '"tree"'
              sha:
                type: string
                example: '"23f6827669e43831def8a7ad935069c8bd418261"'
              size:
                type: integer
                example: '12'
              url:
                type: string
                example: '"https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261"'
          example:
          - path: file.rb
            mode: '100644'
            type: blob
            size: 30
            sha: 44b4fc6d56897b048c772eb4087f854f46256132
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
            properties:
              path:
                type: string
              mode:
                type: string
              type:
                type: string
              size:
                type: integer
              sha:
                type: string
              url:
                type: string
            required:
            - path
            - mode
            - type
            - sha
            - url
            - size
      required:
      - sha
      - url
      - tree
      - truncated
    hook-response:
      title: Hook Response
      type: object
      properties:
        code:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
      - code
      - status
      - message
    hook:
      title: Webook
      description: Webhooks for repositories.
      type: object
      properties:
        type:
          type: string
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        active:
          description: Determines whether the hook is actually triggered on pushes.
          type: boolean
          example: true
        events:
          description: 'Determines what events the hook is triggered for. Default:
            [''push''].'
          type: array
          items:
            type: string
          example:
          - push
          - pull_request
        config:
          type: object
          properties:
            email:
              type: string
              example: '"foo@bar.com"'
            password:
              type: string
              example: '"foo"'
            room:
              type: string
              example: '"roomer"'
            subdomain:
              type: string
              example: '"foo"'
            url:
              type: string
              example: '"http://bar.com"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            digest:
              type: string
              example: '"md5"'
            secret:
              type: string
              example: '"********"'
            token:
              type: string
              example: '"abc"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
        test_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
        last_response:
          "$ref": "#/components/schemas/hook-response"
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
      - last_response
      - test_url
    issue-event-label:
      title: Issue Event Label
      description: Issue Event Label
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      required:
      - name
      - color
    issue-event-dismissed-review:
      title: Issue Event Dismissed Review
      type: object
      properties:
        state:
          type: string
        review_id:
          type: integer
        dismissal_message:
          type: string
          nullable: true
        dismissal_commit_id:
          type: string
          nullable: true
      required:
      - state
      - review_id
      - dismissal_message
    issue-event-milestone:
      title: Issue Event Milestone
      description: Issue Event Milestone
      type: object
      properties:
        title:
          type: string
      required:
      - title
    issue-event-project-card:
      title: Issue Event Project Card
      description: Issue Event Project Card
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        project_url:
          type: string
          format: uri
        project_id:
          type: integer
        column_name:
          type: string
        previous_column_name:
          type: string
      required:
      - url
      - id
      - project_url
      - project_id
      - column_name
    issue-event-rename:
      title: Issue Event Rename
      description: Issue Event Rename
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
    issue-event:
      title: Issue Event
      description: Issue Event
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEwOklzc3VlRXZlbnQx
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        event:
          type: string
          example: closed
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        commit_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue:
          "$ref": "#/components/schemas/issue-simple"
        label:
          "$ref": "#/components/schemas/issue-event-label"
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        assigner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        review_requester:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        requested_reviewer:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        dismissed_review:
          "$ref": "#/components/schemas/issue-event-dismissed-review"
        milestone:
          "$ref": "#/components/schemas/issue-event-milestone"
        project_card:
          "$ref": "#/components/schemas/issue-event-project-card"
        rename:
          "$ref": "#/components/schemas/issue-event-rename"
        author_association:
          type: string
        lock_reason:
          type: string
          nullable: true
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
    issue-event-for-issue:
      title: Issue Event for Issue
      description: Issue Event for Issue
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        sha:
          type: string
          example: '"480d4f47447129f015cb327536c522ca683939a1"'
        html_url:
          type: string
          example: '"https://github.com/owner-3906e11a33a3d55ba449d63f/BBB_Private_Repo/commit/480d4f47447129f015cb327536c522ca683939a1"'
        message:
          type: string
          example: '"add a bunch of files"'
        issue_url:
          type: string
          example: '"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/issues/1"'
        updated_at:
          type: string
          example: '"2020-07-09T00:17:36Z"'
        author_association:
          type: string
          example: '"COLLABORATOR"'
        body:
          type: string
          example: '":+1:"'
        lock_reason:
          type: string
          example: '"off-topic"'
        submitted_at:
          type: string
          example: '"2020-07-09T00:17:51Z"'
        state:
          type: string
          example: '"commented"'
        pull_request_url:
          type: string
          example: '"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/pulls/2"'
        body_html:
          type: string
          example: '"<p>Accusantium fugiat cumque. Autem qui nostrum. Atque quae ullam.</p>"'
        body_text:
          type: string
          example: '"Accusantium fugiat cumque. Autem qui nostrum. Atque quae ullam."'
    label:
      title: Label
      description: Color-coded labels help you categorize and filter your issues (just
        like labels in Gmail).
      type: object
      properties:
        id:
          type: integer
          example: 208045946
        node_id:
          type: string
          example: MDU6TGFiZWwyMDgwNDU5NDY=
        url:
          description: URL for the label
          example: https://api.github.com/repositories/42/labels/bug
          type: string
          format: uri
        name:
          description: The name of the label.
          example: bug
          type: string
        description:
          type: string
          example: Something isn't working
          nullable: true
        color:
          description: '6-character hex code, without the leading #, identifying the
            color'
          example: FFFFFF
          type: string
        default:
          type: boolean
          example: true
      required:
      - color
      - name
      - id
      - node_id
      - default
      - url
    deploy-key:
      title: Deploy Key
      description: An SSH key granting access to a single repository.
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        url:
          type: string
        title:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        read_only:
          type: boolean
    language:
      title: Language
      description: Language
      type: object
      additionalProperties:
        type: integer
    license-content:
      title: License Content
      description: License Content
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          nullable: true
        git_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        type:
          type: string
        content:
          type: string
        encoding:
          type: string
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        license:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/license-simple"
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
      - license
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
      - branch
      - path
    page:
      title: GitHub Pages
      description: The configuration for GitHub Pages for a repository.
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          description: The status of the most recent build of the Page.
          example: built
          enum:
          - built
          - building
          - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        source:
          "$ref": "#/components/schemas/pages-source-hash"
      required:
      - url
      - status
      - cname
      - custom_404
    page-build:
      title: Page Build
      description: Page Build
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
        error:
          type: object
          properties:
            message:
              type: string
              nullable: true
          required:
          - message
        pusher:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        commit:
          type: string
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - url
      - status
      - error
      - pusher
      - commit
      - duration
      - created_at
      - updated_at
    page-build-status:
      title: Page Build Status
      description: Page Build Status
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
        status:
          type: string
          example: queued
      required:
      - url
      - status
    repository-pre-receive-hook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enforcement:
          type: string
        configuration_url:
          type: string
    pull-request:
      type: object
      title: Pull Request
      description: Pull requests let you tell others about changes you've pushed to
        a repository on GitHub. Once a pull request is sent, interested parties can
        review the set of changes, discuss potential modifications, and even push
        follow-up commits if necessary.
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          description: Number uniquely identifying the pull request within its repository.
          example: 42
          type: integer
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          enum:
          - open
          - closed
          example: open
          type: string
        locked:
          type: boolean
          example: true
        title:
          description: The title of the pull request.
          example: Amazing new feature
          type: string
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
        milestone:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team-simple"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    pull:
                      type: boolean
                    push:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  type: object
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                      format: uri
                      nullable: true
                    spdx_id:
                      type: string
                      nullable: true
                    node_id:
                      type: string
                  required:
                  - key
                  - name
                  - url
                  - spdx_id
                  - node_id
                  nullable: true
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                anonymous_access_enabled:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    pull:
                      type: boolean
                    push:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  nullable: true
                  allOf:
                  - "$ref": "#/components/schemas/license-simple"
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                anonymous_access_enabled:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          type: string
          example: OWNER
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        merged:
          type: boolean
        mergeable:
          type: boolean
          example: true
          nullable: true
        rebaseable:
          type: boolean
          example: true
          nullable: true
        mergeable_state:
          type: string
          example: clean
        merged_by:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        comments:
          type: integer
          example: 10
        review_comments:
          type: integer
          example: 0
        maintainer_can_modify:
          description: Indicates whether maintainers can modify the pull request.
          example: true
          type: boolean
        commits:
          type: integer
          example: 3
        additions:
          type: integer
          example: 100
        deletions:
          type: integer
          example: 3
        changed_files:
          type: integer
          example: 5
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - additions
      - changed_files
      - comments
      - commits
      - deletions
      - mergeable
      - mergeable_state
      - merged
      - maintainer_can_modify
      - merged_by
      - review_comments
    pull-request-review-comment:
      title: Pull Request Review Comment
      description: Pull Request Review Comments are comments on a portion of the Pull
        Request's diff.
      type: object
      properties:
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          example: 42
          type: integer
          nullable: true
        id:
          description: The ID of the pull request review comment.
          example: 1
          type: integer
        node_id:
          description: The node ID of the pull request review comment.
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          description: The diff of the line that the comment refers to.
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies.
          example: 1
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment
            applies.
          example: 4
          type: integer
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          description: HTML URL for the pull request review comment.
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          description: How the author of the comment is associated with the pull request.
          type: string
          example: ''
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              required:
              - href
            html:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
              required:
              - href
          required:
          - self
          - html
          - pull_request
        start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        original_start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        side:
          description: The side of the diff to which the comment applies. The side
            of the last line of the range for a multi-line comment
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
        body_html:
          type: string
          example: '"<p>comment body</p>"'
        body_text:
          type: string
          example: '"comment body"'
      required:
      - url
      - id
      - node_id
      - pull_request_review_id
      - diff_hunk
      - path
      - position
      - original_position
      - commit_id
      - original_commit_id
      - user
      - body
      - created_at
      - updated_at
      - html_url
      - pull_request_url
      - author_association
      - _links
    pull-request-merge-result:
      title: Pull Request Merge Result
      description: Pull Request Merge Result
      type: object
      properties:
        sha:
          type: string
        merged:
          type: boolean
        message:
          type: string
      required:
      - merged
      - message
      - sha
    pull-request-review-request:
      title: Pull Request Review Request
      description: Pull Request Review Request
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
    pull-request-review:
      title: Pull Request Review
      description: Pull Request Reviews are reviews on pull requests.
      type: object
      properties:
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          type: string
      required:
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    review-comment:
      title: Legacy Review Comment
      description: Legacy Review Comment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id:
          type: integer
          example: 42
          nullable: true
        id:
          type: integer
          example: 10
        node_id:
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          type: string
          example: file1.txt
        position:
          type: integer
          example: 1
          nullable: true
        original_position:
          type: integer
          example: 4
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id:
          type: string
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id:
          type: integer
          example: 8
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        body:
          type: string
          example: Great stuff
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          type: string
        _links:
          type: object
          properties:
            self:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            pull_request:
              "$ref": "#/components/schemas/link"
          required:
          - self
          - html
          - pull_request
        body_text:
          type: string
        body_html:
          type: string
        side:
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The original line of the blob to which the comment applies.
            The last line of the range for a multi-line comment
          example: 2
          type: integer
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
        original_start_line:
          description: The original first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
      required:
      - id
      - node_id
      - url
      - body
      - diff_hunk
      - path
      - position
      - original_position
      - commit_id
      - original_commit_id
      - user
      - pull_request_review_id
      - html_url
      - pull_request_url
      - _links
      - author_association
      - created_at
      - updated_at
    release-asset:
      title: Release Asset
      description: Data related to a release.
      type: object
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
          example: Team Environment
        label:
          type: string
          nullable: true
        state:
          description: State of the release asset.
          type: string
          enum:
          - uploaded
          example: open
        content_type:
          type: string
        size:
          type: integer
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - name
      - content_type
      - size
      - state
      - url
      - node_id
      - download_count
      - label
      - uploader
      - browser_download_url
      - created_at
      - updated_at
    release:
      title: Release
      description: A release.
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        assets_url:
          type: string
          format: uri
        upload_url:
          type: string
        tarball_url:
          type: string
          format: uri
          nullable: true
        zipball_url:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git
            tag is created from.
          example: master
          type: string
        name:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        draft:
          description: true to create a draft (unpublished) release, false to create
            a published one.
          example: false
          type: boolean
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        created_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        author:
          "$ref": "#/components/schemas/simple-user"
        assets:
          type: array
          items:
            "$ref": "#/components/schemas/release-asset"
        body_html:
          type: string
        body_text:
          type: string
      required:
      - assets_url
      - upload_url
      - tarball_url
      - zipball_url
      - created_at
      - published_at
      - draft
      - id
      - node_id
      - author
      - html_url
      - name
      - prerelease
      - tag_name
      - target_commitish
      - assets
      - url
    stargazer:
      title: Stargazer
      description: Stargazer
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
      required:
      - starred_at
      - user
    code-frequency-stat:
      title: Code Frequency Stat
      description: Code Frequency Stat
      type: array
      items:
        type: integer
    commit-activity:
      title: Commit Activity
      description: Commit Activity
      type: object
      properties:
        days:
          type: array
          example:
          - 0
          - 3
          - 26
          - 20
          - 39
          - 1
          - 0
          items:
            type: integer
        total:
          type: integer
          example: 89
        week:
          type: integer
          example: 1336280400
      required:
      - days
      - total
      - week
    contributor-activity:
      title: Contributor Activity
      description: Contributor Activity
      type: object
      properties:
        author:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        total:
          type: integer
          example: 135
        weeks:
          type: array
          example:
          - w: '1367712000'
            a: 6898
            d: 77
            c: 10
          items:
            type: object
            properties:
              w:
                type: string
              a:
                type: integer
              d:
                type: integer
              c:
                type: integer
      required:
      - author
      - total
      - weeks
    participation-stats:
      title: Participation Stats
      type: object
      properties:
        all:
          type: array
          items:
            type: integer
        owner:
          type: array
          items:
            type: integer
    repository-subscription:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        subscribed:
          description: Determines if notifications should be received from this repository.
          type: boolean
          example: true
        ignored:
          description: Determines if all notifications should be blocked from this
            repository.
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/subscription
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
      required:
      - created_at
      - ignored
      - reason
      - subscribed
      - url
      - repository_url
    tag:
      title: Tag
      description: Tag
      type: object
      properties:
        name:
          type: string
          example: v0.1
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        zipball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id:
          type: string
      required:
      - name
      - node_id
      - commit
      - zipball_url
      - tarball_url
    topic:
      title: Topic
      description: A topic aggregates entities that are related to a subject.
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    search-result-text-matches:
      title: Search Result Text Matches
      type: array
      items:
        type: object
        properties:
          object_url:
            type: string
          object_type:
            nullable: true
            type: string
          property:
            type: string
          fragment:
            type: string
          matches:
            type: array
            items:
              type: object
              properties:
                text:
                  type: string
                indices:
                  type: array
                  items:
                    type: integer
    code-search-result-item:
      title: Code Search Result Item
      description: Code Search Result Item
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: integer
        file_size:
          type: integer
        language:
          type: string
          nullable: true
        last_modified_at:
          type: string
          format: date-time
        line_numbers:
          type: array
          items:
            type: string
            example:
            - 73..77
            - 77..78
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - score
      - name
      - path
      - sha
      - git_url
      - html_url
      - url
      - repository
    commit-search-result-item:
      title: Commit Search Result Item
      description: Commit Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        sha:
          type: string
        html_url:
          type: string
          format: uri
        comments_url:
          type: string
          format: uri
        commit:
          type: object
          properties:
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
                  format: date-time
              required:
              - name
              - email
              - date
            committer:
              nullable: true
              allOf:
              - "$ref": "#/components/schemas/git-user"
            comment_count:
              type: integer
            message:
              type: string
            tree:
              type: object
              properties:
                sha:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - sha
              - url
            url:
              type: string
              format: uri
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        committer:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/git-user"
        parents:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              html_url:
                type: string
              sha:
                type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: integer
        node_id:
          type: string
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - parents
      - comments_url
      - commit
      - repository
      - score
    issue-search-result-item:
      title: Issue Search Result Item
      description: Issue Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        user:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              color:
                type: string
              default:
                type: boolean
              description:
                type: string
                nullable: true
        state:
          type: string
        assignee:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        milestone:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/milestone"
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        body:
          type: string
        score:
          type: integer
        author_association:
          type: string
        draft:
          type: boolean
        repository:
          "$ref": "#/components/schemas/repository"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        performed_via_github_app:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/integration"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      - score
    label-search-result-item:
      title: Label Search Result Item
      description: Label Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        color:
          type: string
        default:
          type: boolean
        description:
          type: string
          nullable: true
        score:
          type: integer
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - id
      - node_id
      - url
      - name
      - color
      - default
      - description
      - score
    repo-search-result-item:
      title: Repo Search Result Item
      description: Repo Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        owner:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        homepage:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        master_branch:
          type: string
        default_branch:
          type: string
        score:
          type: integer
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
        collaborators_url:
          type: string
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
        branches_url:
          type: string
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
        git_tags_url:
          type: string
        git_refs_url:
          type: string
        trees_url:
          type: string
        statuses_url:
          type: string
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
        git_commits_url:
          type: string
        comments_url:
          type: string
        issue_comment_url:
          type: string
        contents_url:
          type: string
        compare_url:
          type: string
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
        pulls_url:
          type: string
        milestones_url:
          type: string
        notifications_url:
          type: string
        labels_url:
          type: string
        releases_url:
          type: string
        deployments_url:
          type: string
          format: uri
        git_url:
          type: string
        ssh_url:
          type: string
        clone_url:
          type: string
        svn_url:
          type: string
          format: uri
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        topics:
          type: array
          items:
            type: string
        mirror_url:
          type: string
          format: uri
          nullable: true
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_pages:
          type: boolean
        has_wiki:
          type: boolean
        has_downloads:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        license:
          nullable: true
          allOf:
          - "$ref": "#/components/schemas/license-simple"
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
          - admin
          - pull
          - push
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        temp_clone_token:
          type: string
        allow_merge_commit:
          type: boolean
        allow_squash_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        delete_branch_on_merge:
          type: boolean
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - score
    topic-search-result-item:
      title: Topic Search Result Item
      description: Topic Search Result Item
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
          nullable: true
        short_description:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        created_by:
          type: string
          nullable: true
        released:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        featured:
          type: boolean
        curated:
          type: boolean
        score:
          type: integer
        repository_count:
          type: integer
          nullable: true
        logo_url:
          type: string
          format: uri
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        related:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
        aliases:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
      required:
      - name
      - display_name
      - short_description
      - description
      - created_by
      - released
      - created_at
      - updated_at
      - featured
      - curated
      - score
    user-search-result-item:
      title: User Search Result Item
      description: User Search Result Item
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        score:
          type: integer
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        events_url:
          type: string
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        location:
          type: string
          nullable: true
        site_admin:
          type: boolean
        hireable:
          type: boolean
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        blog:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        suspended_at:
          type: string
          format: date-time
          nullable: true
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - score
    configuration-status:
      type: object
      properties:
        status:
          type: string
        progress:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              key:
                type: string
            required:
            - status
            - key
    maintenance-status:
      type: object
      properties:
        status:
          type: string
        scheduled_time:
          type: string
        connection_services:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              number:
                type: integer
            required:
            - name
            - number
    enterprise-settings:
      type: object
      properties:
        enterprise:
          type: object
          properties:
            private_mode:
              type: boolean
            public_pages:
              type: boolean
            subdomain_isolation:
              type: boolean
            signup_enabled:
              type: boolean
            github_hostname:
              type: string
            identicons_host:
              type: string
            http_proxy:
              nullable: true
              type: string
            auth_mode:
              type: string
            expire_sessions:
              type: boolean
            admin_password:
              nullable: true
              type: string
            configuration_id:
              type: integer
            configuration_run_count:
              type: integer
            avatar:
              type: object
              properties:
                enabled:
                  type: boolean
                uri:
                  type: string
            customer:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                uuid:
                  type: string
                secret_key_data:
                  type: string
                public_key_data:
                  type: string
            license:
              type: object
              properties:
                seats:
                  type: integer
                evaluation:
                  type: boolean
                perpetual:
                  type: boolean
                unlimited_seating:
                  type: boolean
                support_key:
                  type: string
                ssh_allowed:
                  type: boolean
                cluster_support:
                  type: boolean
                expire_at:
                  type: string
            github_ssl:
              type: object
              properties:
                enabled:
                  type: boolean
                cert:
                  nullable: true
                  type: string
                key:
                  nullable: true
                  type: string
            ldap:
              type: object
              properties:
                host:
                  nullable: true
                  type: string
                port:
                  type: integer
                base:
                  type: array
                  items: {}
                uid:
                  nullable: true
                  type: string
                bind_dn:
                  nullable: true
                  type: string
                password:
                  nullable: true
                  type: string
                method:
                  type: string
                search_strategy:
                  type: string
                user_groups:
                  type: array
                  items: {}
                admin_group:
                  nullable: true
                  type: string
                virtual_attribute_enabled:
                  type: boolean
                recursive_group_search:
                  type: boolean
                posix_support:
                  type: boolean
                user_sync_emails:
                  type: boolean
                user_sync_keys:
                  type: boolean
                user_sync_interval:
                  type: integer
                team_sync_interval:
                  type: integer
                sync_enabled:
                  type: boolean
                reconciliation:
                  type: object
                  properties:
                    user:
                      nullable: true
                      type: string
                    org:
                      nullable: true
                      type: string
                profile:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      nullable: true
                      type: string
                    mail:
                      nullable: true
                      type: string
                    key:
                      nullable: true
                      type: string
            cas:
              type: object
              properties:
                url:
                  nullable: true
                  type: string
            saml:
              type: object
              properties:
                sso_url:
                  nullable: true
                  type: string
                certificate:
                  nullable: true
                  type: string
                certificate_path:
                  nullable: true
                  type: string
                issuer:
                  nullable: true
                  type: string
                idp_initiated_sso:
                  type: boolean
                disable_admin_demote:
                  type: boolean
            github_oauth:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                organization_name:
                  type: string
                organization_team:
                  type: string
            smtp:
              type: object
              properties:
                enabled:
                  type: boolean
                address:
                  type: string
                authentication:
                  type: string
                port:
                  type: string
                domain:
                  type: string
                username:
                  type: string
                user_name:
                  type: string
                enable_starttls_auto:
                  type: boolean
                password:
                  type: string
                discard-to-noreply-address:
                  type: boolean
                support_address:
                  type: string
                support_address_type:
                  type: string
                noreply_address:
                  type: string
            ntp:
              type: object
              properties:
                primary_server:
                  type: string
                secondary_server:
                  type: string
            timezone:
              nullable: true
              type: string
            snmp:
              type: object
              properties:
                enabled:
                  type: boolean
                community:
                  type: string
            syslog:
              type: object
              properties:
                enabled:
                  type: boolean
                server:
                  nullable: true
                  type: string
                protocol_name:
                  type: string
            assets:
              nullable: true
              type: string
            pages:
              type: object
              properties:
                enabled:
                  type: boolean
            collectd:
              type: object
              properties:
                enabled:
                  type: boolean
                server:
                  nullable: true
                  type: string
                port:
                  type: integer
                encryption:
                  nullable: true
                  type: string
                username:
                  nullable: true
                  type: string
                password:
                  nullable: true
                  type: string
            mapping:
              type: object
              properties:
                enabled:
                  type: boolean
                tileserver:
                  nullable: true
                  type: string
                basemap:
                  type: string
                token:
                  nullable: true
                  type: string
            load_balancer:
              nullable: true
              type: string
        run_list:
          type: array
          items:
            type: string
    ssh-key:
      type: object
      properties:
        key:
          type: string
        pretty-print:
          type: string
    private-user:
      title: Private User
      description: Private User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: ''
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
        ldap_dn:
          type: string
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      - collaborators
      - disk_usage
      - owned_private_repos
      - private_gists
      - total_private_repos
      - two_factor_authentication
    public-user:
      title: Public User
      description: Public User
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        name:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        private_gists:
          type: integer
          example: '0'
        total_private_repos:
          type: integer
          example: '0'
        owned_private_repos:
          type: integer
          example: '0'
        disk_usage:
          type: integer
          example: '0'
        collaborators:
          type: integer
          example: '0'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      additionalProperties: false
    email:
      title: Email
      description: Email
      oneOf:
      - type: object
        properties:
          email:
            type: string
            format: email
            example: octocat@github.com
          primary:
            type: boolean
            example: true
          verified:
            type: boolean
            example: true
          visibility:
            type: string
            example: public
            nullable: true
        required:
        - email
        - primary
        - verified
        - visibility
      - type: string
    gpg-key:
      title: GPG Key
      description: A unique encryption key
      type: object
      properties:
        id:
          type: integer
          example: 3
        primary_key_id:
          type: integer
          nullable: true
        key_id:
          type: string
          example: 3262EFF25BA0D270
        public_key:
          type: string
          example: xsBNBFayYZ...
        emails:
          type: array
          example:
          - email: mastahyeti@users.noreply.github.com
            verified: true
          items:
            type: object
            properties:
              email:
                type: string
              verified:
                type: boolean
        subkeys:
          type: array
          example:
          - id: 4
            primary_key_id: 3
            key_id: 4A595D4C72EE49C7
            public_key: zsBNBFayYZ...
            emails: []
            subkeys: []
            can_sign: false
            can_encrypt_comms: true
            can_encrypt_storage: true
            can_certify: false
            created_at: '2016-03-24T11:31:04-06:00'
            expires_at: 
          items:
            type: object
            properties:
              id:
                type: integer
              primary_key_id:
                type: integer
              key_id:
                type: string
              public_key:
                type: string
              emails:
                type: array
                items: {}
              subkeys:
                type: array
                items: {}
              can_sign:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_certify:
                type: boolean
              created_at:
                type: string
              expires_at:
                type: string
                nullable: true
              raw_key:
                type: string
                nullable: true
        can_sign:
          type: boolean
          example: true
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_certify:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2016-03-24T11:31:04-06:00'
        expires_at:
          type: string
          format: date-time
          nullable: true
        raw_key:
          type: string
          nullable: true
      required:
      - id
      - primary_key_id
      - key_id
      - raw_key
      - public_key
      - created_at
      - expires_at
      - can_sign
      - can_encrypt_comms
      - can_encrypt_storage
      - can_certify
      - emails
      - subkeys
    key:
      title: Key
      description: Key
      type: object
      properties:
        key_id:
          type: string
        key:
          type: string
        id:
          type: integer
        url:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        verified:
          type: boolean
        read_only:
          type: boolean
    starred-repository:
      title: Starred Repository
      description: Starred Repository
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        repo:
          "$ref": "#/components/schemas/repository"
      required:
      - starred_at
      - repo
    hovercard:
      title: Hovercard
      description: Hovercard
      type: object
      properties:
        contexts:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
            - message
            - octicon
      required:
      - contexts
    key-simple:
      title: Key Simple
      description: Key Simple
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
      required:
      - key
      - id
  examples:
    global-hook-items:
      value:
      - type: Global
        id: 1
        name: web
        active: true
        events:
        - organization
        - user
        config:
          url: https://example.com
          content_type: json
          insecure_ssl: '0'
          secret: "********"
        updated_at: '2017-12-07T00:14:59Z'
        created_at: '2017-12-07T00:14:59Z'
        url: https://api.github.com/admin/hooks/1
        ping_url: https://api.github.com/admin/hooks/1/pings
    global-hook:
      value:
        type: Global
        id: 1
        name: web
        active: true
        events:
        - organization
        - user
        config:
          url: https://example.com
          content_type: json
          insecure_ssl: '0'
          secret: "********"
        updated_at: '2017-12-07T00:14:59Z'
        created_at: '2017-12-07T00:14:59Z'
        url: https://api.github.com/admin/hooks/1
        ping_url: https://api.github.com/admin/hooks/1/pings
    global-hook-2:
      value:
        type: Global
        id: 1
        name: web
        active: true
        events:
        - organization
        config:
          url: https://example.com
          content_type: form
          insecure_ssl: '0'
        updated_at: '2017-12-07T00:14:59Z'
        created_at: '2017-12-07T00:14:59Z'
        url: https://api.github.com/admin/hooks/1
        ping_url: https://api.github.com/admin/hooks/1/pings
    enterprise-public-key-items:
      value:
      - key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        user_id: 232
        repository_id: 
      - key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        user_id: 
        repository_id: 2333
        id: '2'
        url: https://api.github.com/repos/octocat/Hello-World/keys/2
    ldap-mapping-team:
      value:
        ldap_dn: cn=Enterprise Ops,ou=teams,dc=github,dc=com
        id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://api.github.com/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: 
    ldap-mapping-user:
      value:
        ldap_dn: uid=asdf,ou=users,dc=github,dc=com
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    organization-simple:
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
    pre-receive-environment-items:
      value:
      - id: 1
        name: Default
        image_url: githubenterprise://internal
        url: https://github.example.com/api/v3/admin/pre-receive-environments/1
        html_url: https://github.example.com/admin/pre-receive-environments/1
        default_environment: true
        created_at: '2016-05-20T11:35:45-05:00'
        hooks_count: 14
        download:
          url: https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest
          state: not_started
          downloaded_at: '2016-05-26T07:42:53-05:00'
          message: 
      - id: 2
        name: DevTools Hook Env
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
        html_url: https://github.example.com/admin/pre-receive-environments/2
        default_environment: false
        created_at: '2016-05-20T11:35:45-05:00'
        hooks_count: 1
        download:
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          state: success
          downloaded_at: '2016-05-26T07:42:53-05:00'
          message: 
    pre-receive-environment:
      value:
        id: 2
        name: DevTools Hook Env
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
        html_url: https://github.example.com/admin/pre-receive-environments/2
        default_environment: false
        created_at: '2016-05-20T11:35:45-05:00'
        hooks_count: 1
        download:
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          state: not_started
          downloaded_at: 
          message: 
    pre-receive-environment-2:
      value:
        id: 2
        name: DevTools Hook Env
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
        html_url: https://github.example.com/admin/pre-receive-environments/2
        default_environment: false
        created_at: '2016-05-20T11:35:45-05:00'
        hooks_count: 1
        download:
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          state: success
          downloaded_at: '2016-05-26T07:42:53-05:00'
          message: 
    pre-receive-environment-default-response:
      value:
        id: 2
        name: DevTools Hook Env
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
        html_url: https://github.example.com/admin/pre-receive-environments/2
        default_environment: false
        created_at: '2016-05-20T11:35:45-05:00'
        hooks_count: 1
        download:
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          state: success
          downloaded_at: '2016-05-26T07:42:53-05:00'
          message: 
    pre-receive-environment-download-status-default-response:
      value:
        url: https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest
        state: not_started
        downloaded_at: 
        message: 
    pre-receive-environment-download-status:
      value:
        url: https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest
        state: success
        downloaded_at: '2016-05-26T07:42:53-05:00'
        message: 
    pre-receive-hook-items:
      value:
      - id: 1
        name: Check Commits
        enforcement: disabled
        script: scripts/commmit_check.sh
        script_repository:
          id: 595
          full_name: DevIT/hooks
          url: https://github.example.com/api/v3/repos/DevIT/hooks
          html_url: https://github.example.com/DevIT/hooks
        environment:
          id: 2
          name: DevTools Hook Env
          image_url: https://my_file_server/path/to/devtools_env.tar.gz
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2
          html_url: https://github.example.com/admin/pre-receive-environments/2
          default_environment: false
          created_at: '2016-05-20T11:35:45-05:00'
          hooks_count: 1
          download:
            url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
            state: success
            downloaded_at: '2016-05-26T07:42:53-05:00'
            message: 
        allow_downstream_configuration: false
    pre-receive-hook:
      value:
        id: 1
        name: Check Commits
        enforcement: disabled
        script: scripts/commmit_check.sh
        script_repository:
          id: 595
          full_name: DevIT/hooks
          url: https://github.example.com/api/v3/repos/DevIT/hooks
          html_url: https://github.example.com/DevIT/hooks
        environment:
          id: 2
          name: DevTools Hook Env
          image_url: https://my_file_server/path/to/devtools_env.tar.gz
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2
          html_url: https://github.example.com/admin/pre-receive-environments/2
          default_environment: false
          created_at: '2016-05-20T11:35:45-05:00'
          hooks_count: 1
          download:
            url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
            state: success
            downloaded_at: '2016-05-26T07:42:53-05:00'
            message: 
        allow_downstream_configuration: false
    pre-receive-hook-2:
      value:
        id: 1
        name: Check Commits
        enforcement: disabled
        script: scripts/commmit_check.sh
        script_repository:
          id: 595
          full_name: DevIT/hooks
          url: https://github.example.com/api/v3/repos/DevIT/hooks
          html_url: https://github.example.com/DevIT/hooks
        environment:
          id: 1
          name: Default
          image_url: githubenterprise://internal
          url: https://github.example.com/api/v3/admin/pre-receive-environments/1
          html_url: https://github.example.com/admin/pre-receive-environments/1
          default_environment: true
          created_at: '2016-05-20T11:35:45-05:00'
          hooks_count: 1
          download:
            url: https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest
            state: success
            downloaded_at: '2016-05-26T07:42:53-05:00'
            message: 
        allow_downstream_configuration: true
    authorization-items:
      value:
      - id: 2
        url: https://enterprise.octocat.com/api/v3/authorizations/2
        app:
          name: My personal access token
          url: https://developer.github.com/enterprise/v3/enterprise-admin/users/#list-personal-access-tokens
          client_id: '00000000000000000000'
        token: ''
        hashed_token: 23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45
        token_last_eight: 848f9f8a
        note: My personal access token
        note_url: 
        created_at: '2019-04-24T21:49:02Z'
        updated_at: '2019-04-24T21:49:02Z'
        scopes:
        - admin:business
        - admin:gpg_key
        - admin:org
        - admin:org_hook
        - admin:pre_receive_hook
        - admin:public_key
        - admin:repo_hook
        - delete_repo
        - gist
        - notifications
        - repo
        - user
        - write:discussion
        fingerprint: 
    simple-user:
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    authorization:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: abcdefgh12345678
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
    integration:
      value:
        id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
    integration-from-manifest:
      value:
        id: 1
        slug: octoapp
        node_id: MDxOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
        client_id: Iv1.8a61f9b3a7aba766
        client_secret: 1726be1638095a19edd134c77bde3aa2ece1e5d8
        webhook_secret: e340154128314309424b7c8e90325147d99fdafa
        pem: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM
          9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP
          X0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/
          6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm
          oNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma
          szdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ
          dBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva
          KOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo
          gDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP
          kYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX
          NuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd
          NBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE
          ZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG
          J4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv
          eDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3
          FI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk
          77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH
          Pza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB
          1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c
          57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8
          M5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic
          I9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN
          6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK
          fgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG
          ZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu
          -----END RSA PRIVATE KEY-----
    base-installation-items:
      value:
      - id: 1
        account:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        single_file_name: config.yaml
        repository_selection: selected
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app_slug: github-actions
    base-installation:
      value:
        id: 1
        account:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        single_file_name: config.yaml
        repository_selection: selected
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app_slug: github-actions
    installation-token:
      value:
        token: v1.1f699f1069f60xxx
        expires_at: '2016-07-11T22:14:10Z'
        permissions:
          issues: write
          contents: read
        repository_selection: selected
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: 
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: 
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
    application-grant-items:
      value:
      - id: 1
        url: https://api.github.com/applications/grants/1
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        created_at: '2011-09-06T17:26:27Z'
        updated_at: '2011-09-06T20:39:23Z'
        scopes:
        - public_repo
    application-grant:
      value:
        id: 1
        url: https://api.github.com/applications/grants/1
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        created_at: '2011-09-06T17:26:27Z'
        updated_at: '2011-09-06T20:39:23Z'
        scopes:
        - public_repo
    authorization-with-user:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: abcdefgh12345678
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    authorization-response-if-returning-an-existing-token-2:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: ''
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: ''
    authorization-response-if-returning-an-existing-token:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: ''
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
    authorization-3:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: abcdefgh12345678
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
    authorization-2:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        token: ''
        token_last_eight: '12345678'
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
    code-of-conduct-simple-items:
      value:
      - key: citizen_code_of_conduct
        name: Citizen Code of Conduct
        url: https://api.github.com/codes_of_conduct/citizen_code_of_conduct
        html_url: http://citizencodeofconduct.org/
      - key: contributor_covenant
        name: Contributor Covenant
        url: https://api.github.com/codes_of_conduct/contributor_covenant
        html_url: https://www.contributor-covenant.org/version/2/0/code_of_conduct/
    code-of-conduct:
      value:
        key: contributor_covenant
        name: Contributor Covenant
        url: https://api.github.com/codes_of_conduct/contributor_covenant
        body: |
          # Contributor Covenant Code of Conduct

          ## Our Pledge

          In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

          ## Our Standards

          Examples of behavior that contributes to creating a positive environment include:

          * Using welcoming and inclusive language
          * Being respectful of differing viewpoints and experiences
          * Gracefully accepting constructive criticism
          * Focusing on what is best for the community
          * Showing empathy towards other community members

          Examples of unacceptable behavior by participants include:

          * The use of sexualized language or imagery and unwelcome sexual attention or advances
          * Trolling, insulting/derogatory comments, and personal or political attacks
          * Public or private harassment
          * Publishing others' private information, such as a physical or electronic address, without explicit permission
          * Other conduct which could reasonably be considered inappropriate in a professional setting

          ## Our Responsibilities

          Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                            to any instances of unacceptable behavior.

          Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

          ## Scope

          This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                            posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

          ## Enforcement

          Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

          Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

          ## Attribution

          This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

          [homepage]: http://contributor-covenant.org
          [version]: http://contributor-covenant.org/version/1/4/
        html_url: http://contributor-covenant.org/version/1/4/
    content-reference-attachment:
      value:
        id: 101
        title: "[A-1234] Error found in core/models.py file'"
        body: |-
          You have used an email that already exists for the user_email_uniq field.
           ## DETAILS:

          The (email)=(Octocat@github.com) already exists.

           The error was found in core/models.py in get_or_create_user at line 62.

           self.save()
    license-info:
      value:
        seats: 1400
        seats_used: 1316
        seats_available: 84
        kind: standard
        days_until_expiration: 365
        expire_at: 2016/02/06 12:41:52 -0600
    enterprise-overview:
      value:
        repos:
          total_repos: 212
          root_repos: 194
          fork_repos: 18
          org_repos: 51
          total_pushes: 3082
          total_wikis: 15
        hooks:
          total_hooks: 27
          active_hooks: 23
          inactive_hooks: 4
        pages:
          total_pages: 36
        orgs:
          total_orgs: 33
          disabled_orgs: 0
          total_teams: 60
          total_team_members: 314
        users:
          total_users: 254
          admin_users: 45
          suspended_users: 21
        pulls:
          total_pulls: 86
          merged_pulls: 60
          mergeable_pulls: 21
          unmergeable_pulls: 3
        issues:
          total_issues: 179
          open_issues: 83
          closed_issues: 96
        milestones:
          total_milestones: 7
          open_milestones: 6
          closed_milestones: 1
        gists:
          total_gists: 178
          private_gists: 151
          public_gists: 25
        comments:
          total_commit_comments: 6
          total_gist_comments: 28
          total_issue_comments: 366
          total_pull_request_comments: 30
    feed:
      value:
        timeline_url: https://github.com/timeline
        user_url: https://github.com/{user}
        current_user_public_url: https://github.com/octocat
        current_user_url: https://github.com/octocat.private?token=abc123
        current_user_actor_url: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url: ''
        current_user_organization_urls:
        - https://github.com/organizations/github/octocat.private.atom?token=abc123
        _links:
        - timeline:
            href: https://github.com/timeline
            type: application/atom+xml
          user:
            href: https://github.com/{user}
            type: application/atom+xml
          current_user_public:
            href: https://github.com/octocat
            type: application/atom+xml
          current_user:
            href: https://github.com/octocat.private?token=abc123
            type: application/atom+xml
          current_user_actor:
            href: https://github.com/octocat.private.actor?token=abc123
            type: application/atom+xml
          current_user_organization:
            href: ''
            type: ''
          current_user_organizations:
          - href: https://github.com/organizations/github/octocat.private.atom?token=abc123
            type: application/atom+xml
    base-gist-items:
      value:
      - url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        files:
          hello_world.rb:
            filename: hello_world.rb
            type: application/x-ruby
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
        public: true
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        user: 
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        truncated: false
    gist:
      value:
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
    gist-3:
      value:
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
    gist-comment-items:
      value:
      - id: 1
        node_id: MDExOkdpc3RDb21tZW50MQ==
        url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body: Just commenting for the sake of commenting
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-18T23:23:56Z'
        updated_at: '2011-04-18T23:23:56Z'
        author_association: collaborator
    gist-comment:
      value:
        id: 1
        node_id: MDExOkdpc3RDb21tZW50MQ==
        url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body: Just commenting for the sake of commenting
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-18T23:23:56Z'
        updated_at: '2011-04-18T23:23:56Z'
        author_association: collaborator
    gist-commit-items:
      value:
      - url: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        version: 57a7f021a713b1c5a6a199b54cc514735d2d462f
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        change_status:
          deletions: 0
          additions: 180
          total: 180
        committed_at: '2010-04-14T02:15:15Z'
    gist-fork-items:
      value:
      - url: https://api.github.com/gists/dee9c42e4998ce2ea439
        id: dee9c42e4998ce2ea439
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    base-gist:
      value:
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        files:
          hello_world.rb:
            filename: hello_world.rb
            type: application/x-ruby
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
        public: true
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        user: 
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        truncated: false
    gist-2:
      value:
        url: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
    gitignore-template:
      value:
        name: C
        source: |
          # Object files
          *.o

          # Libraries
          *.lib
          *.a

          # Shared objects (inc. Windows DLLs)
          *.dll
          *.so
          *.so.*
          *.dylib

          # Executables
          *.exe
          *.out
          *.app
    repository-paginated-2:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: 
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          allow_rebase_merge: true
          template_repository: 
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
    issue-with-repo-items:
      value:
      - id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        closed_at: 
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: 
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: 
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
    license-simple-items:
      value:
      - key: mit
        name: MIT License
        spdx_id: MIT
        url: https://api.github.com/licenses/mit
        node_id: MDc6TGljZW5zZW1pdA==
      - key: lgpl-3.0
        name: GNU Lesser General Public License v3.0
        spdx_id: LGPL-3.0
        url: https://api.github.com/licenses/lgpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: mpl-2.0
        name: Mozilla Public License 2.0
        spdx_id: MPL-2.0
        url: https://api.github.com/licenses/mpl-2.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: agpl-3.0
        name: GNU Affero General Public License v3.0
        spdx_id: AGPL-3.0
        url: https://api.github.com/licenses/agpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: unlicense
        name: The Unlicense
        spdx_id: Unlicense
        url: https://api.github.com/licenses/unlicense
        node_id: MDc6TGljZW5zZW1pdA==
      - key: apache-2.0
        name: Apache License 2.0
        spdx_id: Apache-2.0
        url: https://api.github.com/licenses/apache-2.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: gpl-3.0
        name: GNU General Public License v3.0
        spdx_id: GPL-3.0
        url: https://api.github.com/licenses/gpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
    license:
      value:
        key: mit
        name: MIT License
        spdx_id: MIT
        url: https://api.github.com/licenses/mit
        node_id: MDc6TGljZW5zZW1pdA==
        html_url: http://choosealicense.com/licenses/mit/
        description: A permissive license that is short and to the point. It lets
          people do anything with your code with proper attribution and without warranty.
        implementation: Create a text file (typically named LICENSE or LICENSE.txt)
          in the root of your source code and copy the text of the license into the
          file. Replace [year] with the current year and [fullname] with the name
          (or names) of the copyright holders.
        permissions:
        - commercial-use
        - modifications
        - distribution
        - sublicense
        - private-use
        conditions:
        - include-copyright
        limitations:
        - no-liability
        body: |2


          The MIT License (MIT)

          Copyright (c) [year] [fullname]

          Permission is hereby granted, free of charge, to any person obtaining a copy
          of this software and associated documentation files (the "Software"), to deal
          in the Software without restriction, including without limitation the rights
          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          copies of the Software, and to permit persons to whom the Software is
          furnished to do so, subject to the following conditions:

          The above copyright notice and this permission notice shall be included in all
          copies or substantial portions of the Software.

          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          SOFTWARE.
        featured: true
    api-overview:
      value:
        verifiable_password_authentication: true
        installed_version: 2.21.0
    thread-items:
      value:
      - id: '1'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        subject:
          title: Greetings
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          type: Issue
        reason: subscribed
        unread: true
        updated_at: '2014-11-07T22:01:45Z'
        last_read_at: '2014-11-07T22:01:45Z'
        url: https://api.github.com/notifications/threads/1
    thread:
      value:
        id: '1'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        subject:
          title: Greetings
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          type: Issue
        reason: subscribed
        unread: true
        updated_at: '2014-11-07T22:01:45Z'
        last_read_at: '2014-11-07T22:01:45Z'
        url: https://api.github.com/notifications/threads/1
    thread-subscription:
      value:
        subscribed: true
        ignored: false
        reason: 
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/notifications/threads/1/subscription
        thread_url: https://api.github.com/notifications/threads/1
    organization-simple-items:
      value:
      - login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
    organization-full-default-response:
      summary: Default response
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        name: github
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        twitter_username: github
        is_verified: true
        has_organization_projects: true
        has_repository_projects: true
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        html_url: https://github.com/octocat
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2014-03-03T18:58:10Z'
        type: Organization
        total_private_repos: 100
        owned_private_repos: 100
        private_gists: 81
        disk_usage: 10000
        collaborators: 8
        billing_email: mona@github.com
        plan:
          name: Medium
          space: 400
          private_repos: 20
        default_repository_permission: read
        members_can_create_repositories: true
        two_factor_requirement_enabled: true
        members_allowed_repository_creation_type: all
        members_can_create_public_repositories: false
        members_can_create_private_repositories: false
        members_can_create_internal_repositories: false
        members_can_create_pages: true
    organization-full-response-with-git-hub-plan-information:
      summary: Response with GitHub plan information
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        name: github
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        twitter_username: github
        is_verified: true
        has_organization_projects: true
        has_repository_projects: true
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        html_url: https://github.com/octocat
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2014-03-03T18:58:10Z'
        type: Organization
        plan:
          name: team
          space: 976562499
          private_repos: 999999
          filled_seats: 4
          seats: 5
    organization-full:
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        name: github
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        has_organization_projects: true
        has_repository_projects: true
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        html_url: https://github.com/octocat
        created_at: '2008-01-14T04:33:35Z'
        type: Organization
        total_private_repos: 100
        owned_private_repos: 100
        private_gists: 81
        disk_usage: 10000
        collaborators: 8
        billing_email: mona@github.com
        plan:
          name: Medium
          space: 400
          private_repos: 20
        default_repository_permission: read
        members_can_create_repositories: true
        two_factor_requirement_enabled: true
        members_allowed_repository_creation_type: all
        members_can_create_public_repositories: false
        members_can_create_private_repositories: false
        members_can_create_internal_repositories: false
        members_can_create_pages: true
        updated_at: '2014-03-03T18:58:10Z'
    org-hook-items:
      value:
      - id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook-2:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        name: web
        events:
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    installation:
      value:
        id: 1
        account:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        repository_selection: all
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        created_at: '2018-02-09T20:51:14Z'
        updated_at: '2018-02-09T20:51:14Z'
        single_file_name: 
        app_slug: github-actions
    installation-paginated:
      value:
        total_count: 1
        installations:
        - id: 25381
          account:
            login: octo-org
            id: 6811672
            node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
            avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octo-org
            html_url: https://github.com/octo-org
            followers_url: https://api.github.com/users/octo-org/followers
            following_url: https://api.github.com/users/octo-org/following{/other_user}
            gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
            starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octo-org/subscriptions
            organizations_url: https://api.github.com/users/octo-org/orgs
            repos_url: https://api.github.com/users/octo-org/repos
            events_url: https://api.github.com/users/octo-org/events{/privacy}
            received_events_url: https://api.github.com/users/octo-org/received_events
            type: Organization
            site_admin: false
          repository_selection: selected
          access_tokens_url: https://api.github.com/app/installations/25381/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/octo-org/settings/installations/25381
          app_id: 2218
          target_id: 6811672
          target_type: Organization
          permissions:
            deployments: write
            metadata: read
            pull_requests: read
            statuses: read
          events:
          - deployment
          - deployment_status
          created_at: '2017-05-16T08:47:09.000-07:00'
          updated_at: '2017-06-06T11:23:23.000-07:00'
          single_file_name: 
          app_slug: github-actions
    simple-user-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    org-membership-response-if-user-has-an-active-admin-membership-with-organization:
      summary: Response if user has an active admin membership with organization
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-response-if-user-has-an-active-membership-with-organization:
      summary: Response if user has an active membership with organization
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: member
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-response-if-user-has-a-pending-membership-with-organization:
      summary: Response if user has a pending membership with organization
      value:
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: member
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-response-if-user-was-previously-unaffiliated-with-organization:
      summary: Response if user was previously unaffiliated with organization
      value:
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-response-if-user-already-had-membership-with-organization:
      summary: Response if user already had membership with organization
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-pre-receive-hook-items:
      value:
      - id: 42
        name: Check Commits
        enforcement: disabled
        configuration_url: https://github.example.com/api/v3/admin/pre-receive-hooks/42
        allow_downstream_configuration: true
    org-pre-receive-hook:
      value:
        id: 42
        name: Check Commits
        enforcement: disabled
        configuration_url: https://github.example.com/api/v3/admin/pre-receive-hooks/42
        allow_downstream_configuration: true
    org-pre-receive-hook-2:
      value:
        id: 42
        name: Check Commits
        enforcement: enabled
        configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
        allow_downstream_configuration: false
    project-items:
      value:
      - owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
    project-2:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
    minimal-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: 
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        template_repository: 
        delete_branch_on_merge: true
        subscribers_count: 42
        network_count: 0
        anonymous_access_enabled: false
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks: 9
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues: 0
        open_issues_count: 0
        is_template: true
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        anonymous_access_enabled: false
    team-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://api.github.com/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: 
    team-full:
      value:
        id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://api.github.com/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          updated_at: '2017-08-17T12:37:15Z'
          type: Organization
        ldap_dn: uid=asdf,ou=users,dc=github,dc=com
    team-discussion-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: 
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: 
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 1
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Welcome to our first team post
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: "<p>Do you like apples?</p>"
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: 
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: "<p>Do you like apples?</p>"
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: 
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like pineapples?
        body_html: "<p>Do you like pineapples?</p>"
        body_version: e6907b24d9c93cc0c5024a7af5888116
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    reaction-items:
      value:
      - id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
    reaction:
      value:
        id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
    team-membership-response-if-user-has-an-active-membership-with-team:
      summary: Response if user has an active membership with team
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: active
    team-membership-response-if-user-is-a-team-maintainer:
      summary: Response if user is a team maintainer
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: maintainer
        state: active
    team-membership-response-if-user-has-a-pending-membership-with-team:
      summary: Response if user has a pending membership with team
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: pending
    team-membership-response-if-users-membership-with-team-is-now-active:
      summary: Response if user's membership with team is now active
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: active
    team-membership-response-if-users-membership-with-team-is-now-pending:
      summary: Response if user's membership with team is now pending
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: pending
    team-project-items:
      value:
      - owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-project:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-repository-alternative-response-with-repository-permissions:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
        anonymous_access_enabled: false
    team-items-response-if-child-teams-exist:
      value:
      - id: 2
        node_id: MDQ6VGVhbTI=
        url: https://api.github.com/teams/2
        name: Original Roster
        slug: original-roster
        description: Started it all.
        privacy: closed
        permission: admin
        members_url: https://api.github.com/teams/2/members{/member}
        repositories_url: https://api.github.com/teams/2/repos
        parent:
          id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        html_url: https://github.com/orgs/rails/teams/core
    project-card:
      value:
        url: https://api.github.com/projects/columns/cards/1478
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2016-09-05T14:21:06Z'
        updated_at: '2016-09-05T14:20:22Z'
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url: https://api.github.com/projects/120
    project-column:
      value:
        url: https://api.github.com/projects/columns/367
        project_url: https://api.github.com/projects/120
        cards_url: https://api.github.com/projects/columns/367/cards
        id: 367
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name: To Do
        created_at: '2016-09-05T14:18:44Z'
        updated_at: '2016-09-05T14:22:28Z'
    project-card-items:
      value:
      - url: https://api.github.com/projects/columns/cards/1478
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2016-09-05T14:21:06Z'
        updated_at: '2016-09-05T14:20:22Z'
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url: https://api.github.com/projects/120
    project-3:
      value:
        owner_url: https://api.github.com/repos/api-playground/projects-test
        url: https://api.github.com/projects/1002604
        html_url: https://github.com/api-playground/projects-test/projects/1
        columns_url: https://api.github.com/projects/1002604/columns
        id: 1002604
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        name: Projects Documentation
        body: Developer documentation project for the developer site.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    repository-collaborator-permission:
      value:
        permission: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    project-column-items:
      value:
      - url: https://api.github.com/projects/columns/367
        project_url: https://api.github.com/projects/120
        cards_url: https://api.github.com/projects/columns/367/cards
        id: 367
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name: To Do
        created_at: '2016-09-05T14:18:44Z'
        updated_at: '2016-09-05T14:22:28Z'
    rate-limit-overview:
      value:
        resources:
          core:
            limit: 5000
            remaining: 4999
            reset: 1372700873
          search:
            limit: 30
            remaining: 18
            reset: 1372697452
          graphql:
            limit: 5000
            remaining: 4993
            reset: 1372700389
          integration_manifest:
            limit: 5000
            remaining: 4999
            reset: 1551806725
          code_scanning_upload:
            limit: 500
            remaining: 499
            reset: 1551806725
        rate:
          limit: 5000
          remaining: 4999
          reset: 1372700873
    full-repository-default-response:
      summary: Default response
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          anonymous_access_enabled: false
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          anonymous_access_enabled: false
        anonymous_access_enabled: false
    full-repository-response-with-scarlet-witch-preview-media-type:
      summary: Response with scarlet-witch-preview media type
      value:
        id: 88760408
        node_id: MDEwOlJlcG9zaXRvcnk4ODc2MDQwOA==
        name: cosee
        full_name: LindseyB/cosee
        disabled: false
        archived: false
        owner:
          login: LindseyB
          id: 33750
          node_id: MDQ6VXNlcjMzNzUw
          avatar_url: https://avatars2.githubusercontent.com/u/33750?v=3
          gravatar_id: ''
          url: https://api.github.com/users/LindseyB
          html_url: https://github.com/LindseyB
          followers_url: https://api.github.com/users/LindseyB/followers
          following_url: https://api.github.com/users/LindseyB/following{/other_user}
          gists_url: https://api.github.com/users/LindseyB/gists{/gist_id}
          starred_url: https://api.github.com/users/LindseyB/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/LindseyB/subscriptions
          organizations_url: https://api.github.com/users/LindseyB/orgs
          repos_url: https://api.github.com/users/LindseyB/repos
          events_url: https://api.github.com/users/LindseyB/events{/privacy}
          received_events_url: https://api.github.com/users/LindseyB/received_events
          type: User
          site_admin: true
        private: false
        html_url: https://github.com/LindseyB/cosee
        description: 
        fork: false
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        url: https://api.github.com/repos/LindseyB/cosee
        forks_url: https://api.github.com/repos/LindseyB/cosee/forks
        keys_url: https://api.github.com/repos/LindseyB/cosee/keys{/key_id}
        collaborators_url: https://api.github.com/repos/LindseyB/cosee/collaborators{/collaborator}
        teams_url: https://api.github.com/repos/LindseyB/cosee/teams
        hooks_url: https://api.github.com/repos/LindseyB/cosee/hooks
        issue_events_url: https://api.github.com/repos/LindseyB/cosee/issues/events{/number}
        events_url: https://api.github.com/repos/LindseyB/cosee/events
        assignees_url: https://api.github.com/repos/LindseyB/cosee/assignees{/user}
        branches_url: https://api.github.com/repos/LindseyB/cosee/branches{/branch}
        tags_url: https://api.github.com/repos/LindseyB/cosee/tags
        blobs_url: https://api.github.com/repos/LindseyB/cosee/git/blobs{/sha}
        git_tags_url: https://api.github.com/repos/LindseyB/cosee/git/tags{/sha}
        git_refs_url: https://api.github.com/repos/LindseyB/cosee/git/refs{/sha}
        trees_url: https://api.github.com/repos/LindseyB/cosee/git/trees{/sha}
        statuses_url: https://api.github.com/repos/LindseyB/cosee/statuses/{sha}
        languages_url: https://api.github.com/repos/LindseyB/cosee/languages
        stargazers_url: https://api.github.com/repos/LindseyB/cosee/stargazers
        contributors_url: https://api.github.com/repos/LindseyB/cosee/contributors
        subscribers_url: https://api.github.com/repos/LindseyB/cosee/subscribers
        subscription_url: https://api.github.com/repos/LindseyB/cosee/subscription
        commits_url: https://api.github.com/repos/LindseyB/cosee/commits{/sha}
        git_commits_url: https://api.github.com/repos/LindseyB/cosee/git/commits{/sha}
        comments_url: https://api.github.com/repos/LindseyB/cosee/comments{/number}
        issue_comment_url: https://api.github.com/repos/LindseyB/cosee/issues/comments{/number}
        contents_url: https://api.github.com/repos/LindseyB/cosee/contents/{+path}
        compare_url: https://api.github.com/repos/LindseyB/cosee/compare/{base}...{head}
        merges_url: https://api.github.com/repos/LindseyB/cosee/merges
        archive_url: https://api.github.com/repos/LindseyB/cosee/{archive_format}{/ref}
        downloads_url: https://api.github.com/repos/LindseyB/cosee/downloads
        issues_url: https://api.github.com/repos/LindseyB/cosee/issues{/number}
        pulls_url: https://api.github.com/repos/LindseyB/cosee/pulls{/number}
        milestones_url: https://api.github.com/repos/LindseyB/cosee/milestones{/number}
        notifications_url: https://api.github.com/repos/LindseyB/cosee/notifications{?since,all,participating}
        labels_url: https://api.github.com/repos/LindseyB/cosee/labels{/name}
        releases_url: https://api.github.com/repos/LindseyB/cosee/releases{/id}
        deployments_url: https://api.github.com/repos/LindseyB/cosee/deployments
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        git_url: git://github.com/LindseyB/cosee.git
        ssh_url: git@github.com=>LindseyB/cosee.git
        clone_url: https://github.com/LindseyB/cosee.git
        svn_url: https://github.com/LindseyB/cosee
        homepage: 
        size: 1
        stargazers_count: 0
        watchers_count: 0
        language: 
        has_issues: true
        has_projects: true
        has_downloads: true
        has_wiki: true
        has_pages: false
        forks_count: 0
        mirror_url: 
        open_issues_count: 0
        forks: 0
        open_issues: 0
        watchers: 0
        default_branch: master
        network_count: 0
        subscribers_count: 0
    full-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          anonymous_access_enabled: false
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          anonymous_access_enabled: false
        anonymous_access_enabled: false
    short-branch-items:
      value:
      - name: master
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: true
    short-branch-with-protection-items:
      value:
      - name: master
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: true
        protection:
          enabled: true
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    branch-with-protection:
      value:
        name: master
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==
          commit:
            author:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: |-
              Merge pull request #6 from Spaceghost/patch-1

              New line at end of file.
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            committer:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            verification:
              verified: false
              reason: unsigned
              signature: 
              payload: 
            comment_count: 0
          author:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          parents:
          - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
          - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
            url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          committer:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        _links:
          html: https://github.com/octocat/Hello-World/tree/master
          self: https://api.github.com/repos/octocat/Hello-World/branches/master
        protected: true
        protection:
          enabled: true
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    branch-protection:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection
        enabled: true
        required_status_checks:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
          contexts:
          - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          enforcement_level: non_admins
        enforce_admins:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
          enabled: true
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
            users:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://api.github.com/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: 
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
        restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://api.github.com/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
            parent: 
          apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
    protected-branch-admin-enforced-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled: true
    protected-branch-pull-request-review:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
        dismissal_restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://api.github.com/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
            parent: 
        dismiss_stale_reviews: true
        require_code_owner_reviews: true
        required_approving_review_count: 2
    protected-branch-admin-enforced:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
        enabled: true
    status-check-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict: true
        contexts:
        - continuous-integration/travis-ci
        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
    branch-restriction-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: 
        apps:
        - id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            hooks_url: https://api.github.com/orgs/github/hooks
            issues_url: https://api.github.com/orgs/github/issues
            members_url: https://api.github.com/orgs/github/members{/member}
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            avatar_url: https://github.com/images/error/octocat_happy.gif
            description: A great organization
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
    integration-items:
      value:
      - id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
    check-run-example-of-in-progress-conclusion:
      summary: Example of in_progress conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: '42'
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: in_progress
        conclusion: 
        started_at: '2018-05-04T01:14:52Z'
        completed_at: 
        output:
          title: Mighty Readme Report
          summary: ''
          text: ''
          annotations_count: 1
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run-example-of-completed-conclusion:
      summary: Example of completed conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: ''
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may
            want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run:
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: ''
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may
            want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-annotation-items:
      value:
      - path: README.md
        start_line: 2
        end_line: 2
        start_column: 5
        end_column: 10
        annotation_level: warning
        title: Spell Checker
        message: Check your spelling for 'banaas'.
        raw_details: Do you mean 'bananas' or 'banana'?
        blob_href: https://api.github.com/repos/github/rest-api-description/git/blobs/abc
    check-suite:
      value:
        id: 5
        node_id: MDEwOkNoZWNrU3VpdGU1
        head_branch: master
        head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
        status: completed
        conclusion: neutral
        url: https://api.github.com/repos/github/hello-world/check-suites/5
        before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
        after: d6fde92930d4715a2b49857d24b940956b26d2d3
        pull_requests: []
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          template_repository: octocat/template-repo
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          delete_branch_on_merge: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
        head_commit:
          id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          message: |-
            Merge pull request #6 from Spaceghost/patch-1

            New line at end of file.
          timestamp: '2016-10-10T00:00:00Z'
          author:
            name: The Octocat
            email: octocat@nowhere.com
          committer:
            name: The Octocat
            email: octocat@nowhere.com
        latest_check_runs_count: 1
        check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
    check-suite-preference:
      value:
        preferences:
          auto_trigger_checks:
          - app_id: 2
            setting: true
          - app_id: 4
            setting: false
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: http://choosealicense.com/licenses/mit/
          forks: 1
          open_issues: 1
          watchers: 1
          anonymous_access_enabled: false
    check-run-paginated:
      value:
        total_count: 1
        check_runs:
        - id: 4
          head_sha: ce587453ced02b1526dfb4cb910479d431683101
          node_id: MDg6Q2hlY2tSdW40
          external_id: ''
          url: https://api.github.com/repos/github/hello-world/check-runs/4
          html_url: https://github.com/github/hello-world/runs/4
          details_url: https://example.com
          status: completed
          conclusion: neutral
          started_at: '2018-05-04T01:14:52Z'
          completed_at: '2018-05-04T01:14:52Z'
          output:
            title: Mighty Readme report
            summary: There are 0 failures, 2 warnings, and 1 notice.
            text: You may have some misspelled words on lines 2 and 4. You also may
              want to add a section in your README about how to install your app.
            annotations_count: 2
            annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
          name: mighty_readme
          check_suite:
            id: 5
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          pull_requests:
          - url: https://api.github.com/repos/github/hello-world/pulls/1
            id: 1934
            number: 3956
            head:
              ref: say-hello
              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
            base:
              ref: master
              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
    collaborator-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        permissions:
          pull: true
          push: true
          admin: false
    repository-invitation-response-when-a-new-invitation-is-created:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    repository-collaborator-permission-response-if-user-has-admin-permissions:
      value:
        permission: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    commit-comment-items:
      value:
      - html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        author_association: collaborator
    commit-comment:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: collaborator
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-comment-2:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Nice change
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: collaborator
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    simple-commit-items:
      value:
      - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        message: Fix all the bugs
        timestamp: '2016-10-10T00:00:00Z'
        author:
          name: Monalisa Octocat
          email: mona@github.com
        committer:
          name: Monalisa Octocat
          email: mona@github.com
      - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        message: Fix all the bugs
        timestamp: '2016-10-10T00:00:00Z'
        author:
          name: Monalisa Octocat
          email: mona@github.com
        committer:
          name: Monalisa Octocat
          email: mona@github.com
    branch-short-items:
      value:
      - name: branch_5
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: false
    pull-request-simple-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: 
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: 
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: 
            allow_squash_merge: true
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            anonymous_access_enabled: false
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: 
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: 
            allow_squash_merge: true
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            anonymous_access_enabled: false
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
    commit:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
            signature: 
            payload: 
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        stats:
          additions: 104
          deletions: 4
          total: 108
        files:
        - filename: file1.txt
          additions: 10
          deletions: 2
          changes: 12
          status: modified
          raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          patch: |-
            @@ -29,7 +29,7 @@
            .....
    check-suite-paginated:
      value:
        total_count: 1
        check_suites:
        - id: 5
          node_id: MDEwOkNoZWNrU3VpdGU1
          head_branch: master
          head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
          status: completed
          conclusion: neutral
          url: https://api.github.com/repos/github/hello-world/check-suites/5
          before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          after: d6fde92930d4715a2b49857d24b940956b26d2d3
          pull_requests: []
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: 
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: 
            allow_squash_merge: true
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            anonymous_access_enabled: false
    combined-commit-status:
      value:
        state: success
        statuses:
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/hubot_happy.gif
          id: 1
          node_id: MDY6U3RhdHVzMQ==
          state: success
          description: Build has completed successfully
          target_url: https://ci.example.com/1000/output
          context: continuous-integration/jenkins
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/other_user_happy.gif
          id: 2
          node_id: MDY6U3RhdHVzMg==
          state: success
          description: Testing has completed successfully
          target_url: https://ci.example.com/2000/output
          context: security/brakeman
          created_at: '2012-08-20T01:19:13Z'
          updated_at: '2012-08-20T01:19:13Z'
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        total_count: 2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
    status-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    code-of-conduct-2:
      value:
        key: contributor_covenant
        name: Contributor Covenant
        url: https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md
        body: |
          # Contributor Covenant Code of Conduct

          ## Our Pledge

          In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

          ## Our Standards

          Examples of behavior that contributes to creating a positive environment include=>

          * Using welcoming and inclusive language
          * Being respectful of differing viewpoints and experiences
          * Gracefully accepting constructive criticism
          * Focusing on what is best for the community
          * Showing empathy towards other community members

          Examples of unacceptable behavior by participants include=>

          * The use of sexualized language or imagery and unwelcome sexual attention or advances
          * Trolling, insulting/derogatory comments, and personal or political attacks
          * Public or private harassment
          * Publishing others' private information, such as a physical or electronic address, without explicit permission
          * Other conduct which could reasonably be considered inappropriate in a professional setting

          ## Our Responsibilities

          Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
          to any instances of unacceptable behavior.

          Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

          ## Scope

          This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
          posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

          ## Enforcement

          Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

          Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

          ## Attribution

          This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

          [homepage]: http://contributor-covenant.org
          [version]: http://contributor-covenant.org/version/1/4/
        html_url: https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md
    commit-comparison:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: 
              payload: 
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merge_base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: 
              payload: 
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        status: behind
        ahead_by: 1
        behind_by: 2
        total_commits: 1
        commits:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: 
              payload: 
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        files:
        - sha: bbcd538c8e72b8c175046e27cc8f907076331401
          filename: file1.txt
          status: added
          additions: 103
          deletions: 21
          changes: 124
          blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
          patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
    content-file-response-if-content-is-a-file:
      summary: Response if content is a file
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    content-file-response-if-content-is-a-directory:
      summary: Response if content is a directory
      value:
      - type: file
        size: 625
        name: octokit.rb
        path: lib/octokit.rb
        sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
      - type: dir
        size: 0
        name: octokit
        path: lib/octokit
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
        download_url: 
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
          git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
    content-file-response-if-content-is-a-symlink:
      summary: Response if content is a symlink
      value:
        type: symlink
        target: "/path/to/symlink/target"
        size: 23
        name: some-symlink
        path: bin/some-symlink
        sha: 452a98979c88e093d682cab404a3ec82babebb48
        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
    content-file-response-if-content-is-a-submodule:
      summary: Response if content is a submodule
      value:
        type: submodule
        submodule_git_url: git://github.com/jquery/qunit.git
        size: 0
        name: qunit
        path: test/qunit
        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9
        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
        download_url: 
        _links:
          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
    file-commit-example-for-updating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: a56507ed892d05a37c6d6128c260937ea4d287bd
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
            html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
            sha: da5a433788da5c255edad7979b328b67d79f53f6
          verification:
            verified: false
            reason: unsigned
            signature: 
            payload: 
    file-commit-example-for-creating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: 
            payload: 
    file-commit:
      value:
        content: 
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: 
            payload: 
    contributor-items-response-if-repository-contains-content:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        contributions: 32
    deployment-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-simple-example:
      summary: Simple example
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-advanced-example:
      summary: Advanced example
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-status-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    deployment-status:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    minimal-repository-items-2:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: true
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: 
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        template_repository: 
        delete_branch_on_merge: true
        subscribers_count: 42
        network_count: 0
        anonymous_access_enabled: false
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    short-blob:
      value:
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
    blob:
      value:
        content: Q29udGVudCBvZiB0aGUgYmxvYg==
        encoding: base64
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        size: 19
        node_id: Q29udGVudCBvZiB0aGUgYmxvYg==
    git-commit:
      value:
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        author:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        committer:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        message: my commit message
        tree:
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132
          sha: 827efc6d56897b048c772eb4087f854f46256132
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0
          sha: 7d1b31e74ee336d15cbd21741bc88a537ed063a0
        verification:
          verified: false
          reason: unsigned
          signature: 
          payload: 
    git-commit-2:
      value:
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        author:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        committer:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        message: added readme, because im a good github citizen
        tree:
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
          sha: 691272480426f78a0138979dd3ce63b77f706feb
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
          sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
        verification:
          verified: false
          reason: unsigned
          signature: 
          payload: 
    git-ref-items:
      value:
      - ref: refs/heads/feature-a
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a
        object:
          type: commit
          sha: aa218f56b14c9653891f9e74264a383fa43fefbd
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
      - ref: refs/heads/feature-b
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b
        object:
          type: commit
          sha: 612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
    git-ref:
      value:
        ref: refs/heads/featureA
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
        object:
          type: commit
          sha: aa218f56b14c9653891f9e74264a383fa43fefbd
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
    git-tag:
      value:
        node_id: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        tag: v0.0.1
        sha: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        url: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
        message: initial version
        tagger:
          name: Monalisa Octocat
          email: octocat@github.com
          date: '2014-11-07T22:01:45Z'
        object:
          type: commit
          sha: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
        verification:
          verified: false
          reason: unsigned
          signature: 
          payload: 
    git-tree:
      value:
        sha: cd8274d15fa3ae2ab983129fb037999f264ba9a7
        url: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
        - path: file.rb
          mode: '100644'
          type: blob
          size: 132
          sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: true
    git-tree-default-response:
      summary: Default response
      value:
        sha: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
        url: https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312
        tree:
        - path: file.rb
          mode: '100644'
          type: blob
          size: 30
          sha: 44b4fc6d56897b048c772eb4087f854f46256132
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
        - path: subdir
          mode: '040000'
          type: tree
          sha: f484d249c660418515fb01c2b9662073663c242e
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e
        - path: exec_file
          mode: '100755'
          type: blob
          size: 75
          sha: 45b983be36b73c0788dc9cbcb76cbb80fc7bb057
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057
        truncated: false
    git-tree-response-recursively-retrieving-a-tree:
      summary: Response recursively retrieving a tree
      value:
        sha: fc6274d15fa3ae2ab983129fb037999f264ba9a7
        url: https://api.github.com/repos/octocat/Hello-World/trees/fc6274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
        - path: subdir/file.txt
          mode: '100644'
          type: blob
          size: 132
          sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
          url: https://api.github.com/repos/octocat/Hello-World/git/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: false
    hook-items:
      value:
      - type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        last_response:
          code: 
          status: unused
          message: 
    hook:
      value:
        type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        last_response:
          code: 
          status: unused
          message: 
    repository-invitation-items:
      value:
      - id: 1
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
        node_id: MDQ6VXNlcjE=
    repository-invitation:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    issue-simple-items:
      value:
      - id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        closed_at: 
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        author_association: collaborator
    issue:
      value:
        id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        closed_at: 
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        closed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        author_association: collaborator
    issue-comment-items:
      value:
      - id: 1
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        body: Me too
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        author_association: collaborator
    issue-comment:
      value:
        id: 1
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        body: Me too
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        author_association: collaborator
    issue-event-items:
      value:
      - id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        issue:
          id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
          - id: 208045946
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            name: bug
            description: Something isn't working
            color: f29513
            default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          active_lock_reason: too heated
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          closed_at: 
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          author_association: collaborator
    issue-event:
      value:
        id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        issue:
          id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
          - id: 208045946
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            name: bug
            description: Something isn't working
            color: f29513
            default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          active_lock_reason: too heated
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          closed_at: 
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          author_association: collaborator
    issue-simple:
      value:
        id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        closed_at: 
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        author_association: collaborator
    issue-event-for-issue-items:
      value:
      - id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
    label-items:
      value:
      - id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
      - id: 208045947
        node_id: MDU6TGFiZWwyMDgwNDU5NDc=
        url: https://api.github.com/repos/octocat/Hello-World/labels/enhancement
        name: enhancement
        description: New feature or request
        color: a2eeef
        default: false
    label-items-2:
      value:
      - id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
    deploy-key-items:
      value:
      - id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
    deploy-key:
      value:
        id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
    label:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
    label-2:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: 'https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:'
        name: 'bug :bug:'
        description: Small bug fix required
        color: b01f26
        default: true
    language:
      value:
        C: 78769
        Python: 7769
    license-content:
      value:
        name: LICENSE
        path: LICENSE
        sha: 401c59dcc4570b954dd6d345e76199e1f4e76266
        size: 1077
        url: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
        html_url: https://github.com/benbalter/gman/blob/master/LICENSE
        git_url: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
        download_url: https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true
        type: file
        content: |
          VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu
          IEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
          ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0
          aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls
          ZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg
          d2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
          dGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg
          cHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg
          Y29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z
          IHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK
          c3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv
          dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj
          ZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50
          aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ
          UyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL
          SU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ
          TUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG
          SVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO
          R0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ
          UklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF
          UyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G
          IENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP
          VVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU
          SEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K
        encoding: base64
        _links:
          self: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
          git: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
          html: https://github.com/benbalter/gman/blob/master/LICENSE
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    milestone-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id: 1002604
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        state: open
        title: v1.0
        description: Tracking milestone for version 1.0
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        open_issues: 4
        closed_issues: 8
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
        closed_at: '2013-02-12T13:22:01Z'
        due_on: '2012-10-09T23:39:01Z'
    milestone:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id: 1002604
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        state: open
        title: v1.0
        description: Tracking milestone for version 1.0
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        open_issues: 4
        closed_issues: 8
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
        closed_at: '2013-02-12T13:22:01Z'
        due_on: '2012-10-09T23:39:01Z'
    page:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages
        status: built
        cname: developer.github.com
        custom_404: false
        html_url: https://developer.github.com
        source:
          branch: master
          path: "/"
    page-build-items:
      value:
      - url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error:
          message: 
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    page-build-status:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest
        status: queued
    page-build:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error:
          message: 
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    repository-pre-receive-hook-items:
      value:
      - id: 42
        name: Check Commits
        enforcement: disabled
        configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
    repository-pre-receive-hook:
      value:
        id: 42
        name: Check Commits
        enforcement: disabled
        configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
    repository-pre-receive-hook-2:
      value:
        id: 42
        name: Check Commits
        enforcement: enabled
        configuration_url: https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42
    project-items-2:
      value:
      - owner_url: https://api.github.com/repos/api-playground/projects-test
        url: https://api.github.com/projects/1002604
        html_url: https://github.com/api-playground/projects-test/projects/1
        columns_url: https://api.github.com/projects/1002604/columns
        id: 1002604
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        name: Projects Documentation
        body: Developer documentation project for the developer site.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    pull-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            allow_squash_merge: true
            allow_merge_commit: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
            anonymous_access_enabled: false
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            allow_squash_merge: true
            allow_merge_commit: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
            anonymous_access_enabled: false
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
        merged: false
        mergeable: true
        rebaseable: true
        mergeable_state: clean
        merged_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        comments: 10
        review_comments: 0
        maintainer_can_modify: true
        commits: 3
        additions: 100
        deletions: 3
        changed_files: 5
    pull-request-review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-example-for-a-multi-line-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 426899381
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    diff-entry-items:
      value:
      - sha: bbcd538c8e72b8c175046e27cc8f907076331401
        filename: file1.txt
        status: added
        additions: 103
        deletions: 21
        changes: 124
        blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
    pull-request-merge-result-response-if-merge-was-successful:
      value:
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merged: true
        message: Pull Request successfully merged
    simple-pull-request-review-request:
      value:
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: 
    pull-request-review-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://api.github.com/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            allow_squash_merge: true
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
            anonymous_access_enabled: false
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            allow_squash_merge: true
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
            anonymous_access_enabled: false
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
    pull-request-review-items:
      value:
      - id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: collaborator
    pull-request-review:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: collaborator
    pull-request-review-4:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: collaborator
    pull-request-review-5:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change.
          And add more about this.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: collaborator
    review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
    pull-request-review-3:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: DISMISSED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: collaborator
    content-file:
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    release-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release-asset:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-asset-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-asset-response-for-successful-upload:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    simple-user-items-default-response:
      summary: Default response
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    stargazer-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
      - starred_at: '2011-01-16T19:06:43Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    code-frequency-stat-items:
      value:
      - - 1302998400
        - 1124
        - -435
    commit-activity-items:
      value:
      - days:
        - 0
        - 3
        - 26
        - 20
        - 39
        - 1
        - 0
        total: 89
        week: 1336280400
    contributor-activity-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        total: 135
        weeks:
        - w: '1367712000'
          a: 6898
          d: 77
          c: 10
    participation-stats:
      value:
        all:
        - 11
        - 21
        - 15
        - 2
        - 8
        - 1
        - 8
        - 23
        - 17
        - 21
        - 11
        - 10
        - 33
        - 91
        - 38
        - 34
        - 22
        - 23
        - 32
        - 3
        - 43
        - 87
        - 71
        - 18
        - 13
        - 5
        - 13
        - 16
        - 66
        - 27
        - 12
        - 45
        - 110
        - 117
        - 13
        - 8
        - 18
        - 9
        - 19
        - 26
        - 39
        - 12
        - 20
        - 31
        - 46
        - 91
        - 45
        - 10
        - 24
        - 9
        - 29
        - 7
        owner:
        - 3
        - 2
        - 3
        - 0
        - 2
        - 0
        - 5
        - 14
        - 7
        - 9
        - 1
        - 5
        - 0
        - 48
        - 19
        - 2
        - 0
        - 1
        - 10
        - 2
        - 23
        - 40
        - 35
        - 8
        - 8
        - 2
        - 10
        - 6
        - 30
        - 0
        - 2
        - 9
        - 53
        - 104
        - 3
        - 3
        - 10
        - 4
        - 7
        - 11
        - 21
        - 4
        - 4
        - 22
        - 26
        - 63
        - 11
        - 2
        - 14
        - 1
        - 10
        - 3
    code-frequency-stat-items-2:
      value:
      - - 0
        - 0
        - 5
      - - 0
        - 1
        - 43
      - - 0
        - 2
        - 21
    status:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    repository-subscription-response-if-you-subscribe-to-the-repository:
      value:
        subscribed: true
        ignored: false
        reason: 
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/repos/octocat/example/subscription
        repository_url: https://api.github.com/repos/octocat/example
    repository-subscription:
      value:
        subscribed: true
        ignored: false
        reason: 
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/repos/octocat/example/subscription
        repository_url: https://api.github.com/repos/octocat/example
    tag-items:
      value:
      - name: v0.1
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id: MDQ6VXNlcjE=
    topic:
      value:
        names:
        - octocat
        - atom
        - electron
        - api
    repository-3:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        anonymous_access_enabled: false
        template_repository:
          anonymous_access_enabled: false
    public-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    code-search-result-item-paginated:
      value:
        total_count: 7
        incomplete_results: false
        items:
        - name: classes.js
          path: src/attributes/classes.js
          sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
          url: https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
          git_url: https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
          html_url: https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
          repository:
            id: 167174
            node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
            name: jquery
            full_name: jquery/jquery
            owner:
              login: jquery
              id: 70142
              node_id: MDQ6VXNlcjcwMTQy
              avatar_url: https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
              gravatar_id: ''
              url: https://api.github.com/users/jquery
              html_url: https://github.com/jquery
              followers_url: https://api.github.com/users/jquery/followers
              following_url: https://api.github.com/users/jquery/following{/other_user}
              gists_url: https://api.github.com/users/jquery/gists{/gist_id}
              starred_url: https://api.github.com/users/jquery/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/jquery/subscriptions
              organizations_url: https://api.github.com/users/jquery/orgs
              repos_url: https://api.github.com/users/jquery/repos
              events_url: https://api.github.com/users/jquery/events{/privacy}
              received_events_url: https://api.github.com/users/jquery/received_events
              type: Organization
              site_admin: false
            private: false
            html_url: https://github.com/jquery/jquery
            description: jQuery JavaScript Library
            fork: false
            url: https://api.github.com/repos/jquery/jquery
            forks_url: https://api.github.com/repos/jquery/jquery/forks
            keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
            collaborators_url: https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/jquery/jquery/teams
            hooks_url: https://api.github.com/repos/jquery/jquery/hooks
            issue_events_url: https://api.github.com/repos/jquery/jquery/issues/events{/number}
            events_url: https://api.github.com/repos/jquery/jquery/events
            assignees_url: https://api.github.com/repos/jquery/jquery/assignees{/user}
            branches_url: https://api.github.com/repos/jquery/jquery/branches{/branch}
            tags_url: https://api.github.com/repos/jquery/jquery/tags
            blobs_url: https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/jquery/jquery/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/jquery/jquery/git/refs{/sha}
            trees_url: https://api.github.com/repos/jquery/jquery/git/trees{/sha}
            statuses_url: https://api.github.com/repos/jquery/jquery/statuses/{sha}
            languages_url: https://api.github.com/repos/jquery/jquery/languages
            stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
            contributors_url: https://api.github.com/repos/jquery/jquery/contributors
            subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
            subscription_url: https://api.github.com/repos/jquery/jquery/subscription
            commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
            git_commits_url: https://api.github.com/repos/jquery/jquery/git/commits{/sha}
            comments_url: https://api.github.com/repos/jquery/jquery/comments{/number}
            issue_comment_url: https://api.github.com/repos/jquery/jquery/issues/comments/{number}
            contents_url: https://api.github.com/repos/jquery/jquery/contents/{+path}
            compare_url: https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
            merges_url: https://api.github.com/repos/jquery/jquery/merges
            archive_url: https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/jquery/jquery/downloads
            issues_url: https://api.github.com/repos/jquery/jquery/issues{/number}
            pulls_url: https://api.github.com/repos/jquery/jquery/pulls{/number}
            milestones_url: https://api.github.com/repos/jquery/jquery/milestones{/number}
            notifications_url: https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
            deployments_url: http://api.github.com/repos/octocat/Hello-World/deployments
            releases_url: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          score: 1
    commit-search-result-item-paginated:
      value:
        total_count: 1
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          html_url: https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          comments_url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
          commit:
            url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            author:
              date: '2014-02-04T14:38:36-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            committer:
              date: '2014-02-12T15:18:55-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            message: Create styles.css and updated README
            tree:
              url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
              sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
            comment_count: 8
          author:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer: {}
          parents:
          - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            html_url: https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
          repository:
            id: 1300192
            node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
            name: Spoon-Knife
            full_name: octocat/Spoon-Knife
            owner:
              login: octocat
              id: 583231
              node_id: MDQ6VXNlcjU4MzIzMQ==
              avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Spoon-Knife
            description: This repo is for demonstration purposes only.
            fork: false
            url: https://api.github.com/repos/octocat/Spoon-Knife
            forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
            keys_url: https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
            collaborators_url: https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
            hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
            issue_events_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
            events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
            assignees_url: https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
            branches_url: https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
            tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
            blobs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
            trees_url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
            statuses_url: https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
            languages_url: https://api.github.com/repos/octocat/Spoon-Knife/languages
            stargazers_url: https://api.github.com/repos/octocat/Spoon-Knife/stargazers
            contributors_url: https://api.github.com/repos/octocat/Spoon-Knife/contributors
            subscribers_url: https://api.github.com/repos/octocat/Spoon-Knife/subscribers
            subscription_url: https://api.github.com/repos/octocat/Spoon-Knife/subscription
            commits_url: https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
            git_commits_url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
            comments_url: https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
            issue_comment_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
            contents_url: https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
            compare_url: https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
            merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
            archive_url: https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/octocat/Spoon-Knife/downloads
            issues_url: https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
            pulls_url: https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
            milestones_url: https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
            releases_url: https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
            deployments_url: https://api.github.com/repos/octocat/Spoon-Knife/deployments
          score: 1
          node_id: MDQ6VXNlcjU4MzIzMQ==
    issue-search-result-item-paginated:
      value:
        total_count: 280
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
          repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
          labels_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
          comments_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
          events_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
          html_url: https://github.com/batterseapower/pinyin-toolkit/issues/132
          id: 35802
          node_id: MDU6SXNzdWUzNTgwMg==
          number: 132
          title: Line Number Indexes Beyond 20 Not Displayed
          user:
            login: Nick3C
            id: 90254
            node_id: MDQ6VXNlcjkwMjU0
            avatar_url: https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/Nick3C
            html_url: https://github.com/Nick3C
            followers_url: https://api.github.com/users/Nick3C/followers
            following_url: https://api.github.com/users/Nick3C/following{/other_user}
            gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
            starred_url: https://api.github.com/users/Nick3C/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
            organizations_url: https://api.github.com/users/Nick3C/orgs
            repos_url: https://api.github.com/users/Nick3C/repos
            events_url: https://api.github.com/users/Nick3C/events{/privacy}
            received_events_url: https://api.github.com/users/Nick3C/received_events
            type: User
            site_admin: true
          labels:
          - id: 4
            node_id: MDU6TGFiZWw0
            url: https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
            name: bug
            color: ff0000
          state: open
          assignee: 
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          comments: 15
          created_at: '2009-07-12T20:10:41Z'
          updated_at: '2009-07-19T09:23:43Z'
          closed_at: 
          pull_request:
            url: https://api/github.com/repos/octocat/Hello-World/pull/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          body: "..."
          score: 1
          locked: true
          author_association: collaborator
    label-search-result-item-paginated:
      value:
        total_count: 2
        incomplete_results: false
        items:
        - id: 418327088
          node_id: MDU6TGFiZWw0MTgzMjcwODg=
          url: https://api.github.com/repos/octocat/linguist/labels/enhancement
          name: enhancement
          color: 84b6eb
          default: true
          description: New feature or request.
          score: 1
        - id: 418327086
          node_id: MDU6TGFiZWw0MTgzMjcwODY=
          url: https://api.github.com/repos/octocat/linguist/labels/bug
          name: bug
          color: ee0701
          default: true
          description: Something isn't working.
          score: 1
    repo-search-result-item-paginated:
      value:
        total_count: 40
        incomplete_results: false
        items:
        - id: 3081286
          node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
          name: Tetris
          full_name: dtrupenn/Tetris
          owner:
            login: dtrupenn
            id: 872147
            node_id: MDQ6VXNlcjg3MjE0Nw==
            avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/dtrupenn
            received_events_url: https://api.github.com/users/dtrupenn/received_events
            type: User
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            site_admin: true
          private: false
          html_url: https://github.com/dtrupenn/Tetris
          description: A C implementation of Tetris using Pennsim through LC4
          fork: false
          url: https://api.github.com/repos/dtrupenn/Tetris
          created_at: '2012-01-01T00:31:50Z'
          updated_at: '2013-01-05T17:58:47Z'
          pushed_at: '2012-01-01T00:37:02Z'
          homepage: https://github.com
          size: 524
          stargazers_count: 1
          watchers_count: 1
          language: Assembly
          forks_count: 0
          open_issues_count: 0
          master_branch: master
          default_branch: master
          score: 1
          archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
          blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
          branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
          collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
          commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
          compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
          contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
          contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
          deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
          downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
          events_url: https://api.github.com/repos/dtrupenn/Tetris/events
          forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
          git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
          git_url: git:github.com/dtrupenn/Tetris.git
          issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
          issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
          keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
          labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
          languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
          merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
          milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
          notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
          releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
          ssh_url: git@github.com:dtrupenn/Tetris.git
          stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
          statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
          subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
          subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
          tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
          teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
          trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
          clone_url: https://github.com/dtrupenn/Tetris.git
          mirror_url: git:git.example.com/dtrupenn/Tetris
          hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
          svn_url: https://svn.github.com/dtrupenn/Tetris
          forks: 1
          open_issues: 1
          watchers: 1
          has_issues: true
          has_projects: true
          has_pages: true
          has_wiki: true
          has_downloads: true
          archived: true
          disabled: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
    topic-search-result-item-paginated:
      value:
        total_count: 6
        incomplete_results: false
        items:
        - name: ruby
          display_name: Ruby
          short_description: Ruby is a scripting language designed for simplified
            object-oriented programming.
          description: Ruby was developed by Yukihiro "Matz" Matsumoto in 1995 with
            the intent of having an easily readable programming language. It is integrated
            with the Rails framework to create dynamic web-applications. Ruby's syntax
            is similar to that of Perl and Python.
          created_by: Yukihiro Matsumoto
          released: December 21, 1995
          created_at: '2016-11-28T22:03:59Z'
          updated_at: '2017-10-30T18:16:32Z'
          featured: true
          curated: true
          score: 1
        - name: rails
          display_name: Rails
          short_description: Ruby on Rails (Rails) is a web application framework
            written in Ruby.
          description: Ruby on Rails (Rails) is a web application framework written
            in Ruby. It is meant to help simplify the building of complex websites.
          created_by: David Heinemeier Hansson
          released: December 13 2005
          created_at: '2016-12-09T17:03:50Z'
          updated_at: '2017-10-30T16:20:19Z'
          featured: true
          curated: true
          score: 1
        - name: python
          display_name: Python
          short_description: Python is a dynamically typed programming language.
          description: Python is a dynamically typed programming language designed
            by Guido Van Rossum. Much like the programming language Ruby, Python was
            designed to be easily read by programmers. Because of its large following
            and many libraries, Python can be implemented and used to do anything
            from webpages to scientific research.
          created_by: Guido van Rossum
          released: February 20, 1991
          created_at: '2016-12-07T00:07:02Z'
          updated_at: '2017-10-27T22:45:43Z'
          featured: true
          curated: true
          score: 1
        - name: jekyll
          display_name: Jekyll
          short_description: Jekyll is a simple, blog-aware static site generator.
          description: Jekyll is a blog-aware, site generator written in Ruby. It
            takes raw text files, runs it through a renderer and produces a publishable
            static website.
          created_by: Tom Preston-Werner
          released: '2008'
          created_at: '2016-12-16T21:53:08Z'
          updated_at: '2017-10-27T19:00:24Z'
          featured: true
          curated: true
          score: 1
        - name: sass
          display_name: Sass
          short_description: Sass is a stable extension to classic CSS.
          description: Sass is a stylesheet language with a main implementation in
            Ruby. It is an extension of CSS that makes improvements to the old stylesheet
            format, such as being able to declare variables and using a cleaner nesting
            syntax.
          created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
          released: November 28, 2006
          created_at: '2016-12-16T21:53:45Z'
          updated_at: '2018-01-16T16:30:40Z'
          featured: true
          curated: true
          score: 1
        - name: homebrew
          display_name: Homebrew
          short_description: Homebrew is a package manager for macOS.
          description: Homebrew is a package manager for Apple's macOS operating system.
            It simplifies the installation of software and is popular in the Ruby
            on Rails community.
          created_by: Max Howell
          released: '2009'
          created_at: '2016-12-17T20:30:44Z'
          updated_at: '2018-02-06T16:14:56Z'
          featured: true
          curated: true
          score: 1
    user-search-result-item-paginated:
      value:
        total_count: 12
        incomplete_results: false
        items:
        - login: mojombo
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
          gravatar_id: ''
          url: https://api.github.com/users/mojombo
          html_url: https://github.com/mojombo
          followers_url: https://api.github.com/users/mojombo/followers
          subscriptions_url: https://api.github.com/users/mojombo/subscriptions
          organizations_url: https://api.github.com/users/mojombo/orgs
          repos_url: https://api.github.com/users/mojombo/repos
          received_events_url: https://api.github.com/users/mojombo/received_events
          type: User
          score: 1
          following_url: https://api.github.com/users/mojombo/following{/other_user}
          gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
          starred_url: https://api.github.com/users/mojombo/starred{/owner}{/repo}
          events_url: https://api.github.com/users/mojombo/events{/privacy}
          site_admin: true
    configuration-status:
      value:
        status: running
        progress:
        - status: DONE
          key: Appliance core components
        - status: DONE
          key: GitHub utilities
        - status: DONE
          key: GitHub applications
        - status: CONFIGURING
          key: GitHub services
        - status: PENDING
          key: Reloading appliance services
    maintenance-status:
      value:
        status: scheduled
        scheduled_time: Tuesday, January 22 at 15 => 34 -0800
        connection_services:
        - name: git operations
          number: 0
        - name: mysql queries
          number: 233
        - name: resque jobs
          number: 54
    enterprise-settings:
      value:
        enterprise:
          private_mode: false
          public_pages: false
          subdomain_isolation: true
          signup_enabled: false
          github_hostname: ghe.local
          identicons_host: dotcom
          http_proxy: 
          auth_mode: default
          expire_sessions: false
          admin_password: 
          configuration_id: 1401777404
          configuration_run_count: 4
          avatar:
            enabled: false
            uri: ''
          customer:
            name: GitHub
            email: stannis@themannis.biz
            uuid: af6cac80-e4e1-012e-d822-1231380e52e9
            secret_key_data: |
              -----BEGIN PGP PRIVATE KEY BLOCK-----
              Version: GnuPG v1.4.10 (GNU/Linux)

              lQcYBE5TCgsBEACk4yHpUcapplebaumBMXYMiLF+nCQ0lxpx...
              -----END PGP PRIVATE KEY BLOCK-----
            public_key_data: |
              -----BEGIN PGP PUBLIC KEY BLOCK-----
              Version: GnuPG v1.4.10 (GNU/Linux)

              mI0ETqzZYgEEALSe6snowdenXyqvLfSQ34HWD6C7....
              -----END PGP PUBLIC KEY BLOCK-----
          license:
            seats: 0
            evaluation: false
            perpetual: false
            unlimited_seating: true
            support_key: ssh-rsa AAAAB3N....
            ssh_allowed: true
            cluster_support: false
            expire_at: '2016-04-27T00:00:00-07:00'
          github_ssl:
            enabled: false
            cert: 
            key: 
          ldap:
            host: 
            port: 0
            base: []
            uid: 
            bind_dn: 
            password: 
            method: Plain
            search_strategy: detect
            user_groups: []
            admin_group: 
            virtual_attribute_enabled: false
            recursive_group_search: false
            posix_support: true
            user_sync_emails: false
            user_sync_keys: false
            user_sync_interval: 4
            team_sync_interval: 4
            sync_enabled: false
            reconciliation:
              user: 
              org: 
            profile:
              uid: uid
              name: 
              mail: 
              key: 
          cas:
            url: 
          saml:
            sso_url: 
            certificate: 
            certificate_path: 
            issuer: 
            idp_initiated_sso: false
            disable_admin_demote: false
          github_oauth:
            client_id: '12313412'
            client_secret: kj123131132
            organization_name: Homestar Runners
            organization_team: homestarrunners/characters
          smtp:
            enabled: true
            address: smtp.example.com
            authentication: plain
            port: '1234'
            domain: blah
            username: foo
            user_name: mr_foo
            enable_starttls_auto: true
            password: bar
            discard-to-noreply-address: true
            support_address: enterprise@github.com
            support_address_type: email
            noreply_address: noreply@github.com
          ntp:
            primary_server: 0.pool.ntp.org
            secondary_server: 1.pool.ntp.org
          timezone: 
          snmp:
            enabled: false
            community: ''
          syslog:
            enabled: false
            server: 
            protocol_name: udp
          assets: 
          pages:
            enabled: true
          collectd:
            enabled: false
            server: 
            port: 0
            encryption: 
            username: 
            password: 
          mapping:
            enabled: true
            tileserver: 
            basemap: company.map-qsz2zrvs
            token: 
          load_balancer: 
        run_list:
        - recipe[enterprise-configure]
    ssh-key-items-2:
      value:
      - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
        pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
      - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
        pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
    ssh-key-items:
      value:
      - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
        pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
      - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
        pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
      - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
        pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
    team-repository-alternative-response-with-extra-repository-information:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
        anonymous_access_enabled: false
    private-user-response-with-public-and-private-profile-information:
      summary: Response with public and private profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    private-user-response-with-public-profile-information:
      summary: Response with public profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    private-user:
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    email-items-2:
      value:
      - email: octocat@github.com
        verified: true
        primary: true
        visibility: public
    email-items:
      value:
      - email: octocat@octocat.org
        primary: false
        verified: false
        visibility: public
      - email: octocat@github.com
        primary: false
        verified: false
        visibility: 
      - email: mona@github.com
        primary: false
        verified: false
        visibility: 
    gpg-key-items:
      value:
      - id: 3
        primary_key_id: 2
        key_id: 3262EFF25BA0D270
        public_key: xsBNBFayYZ...
        emails:
        - email: mastahyeti@users.noreply.github.com
          verified: true
        subkeys:
        - id: 4
          primary_key_id: 3
          key_id: 4A595D4C72EE49C7
          public_key: zsBNBFayYZ...
          emails: []
          subkeys: []
          can_sign: false
          can_encrypt_comms: true
          can_encrypt_storage: true
          can_certify: false
          created_at: '2016-03-24T11:31:04-06:00'
          expires_at: '2016-03-24T11:31:04-07:00'
        can_sign: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_certify: true
        created_at: '2016-03-24T11:31:04-06:00'
        expires_at: '2016-03-24T11:31:04-07:00'
        raw_key: string
    gpg-key:
      value:
        id: 3
        primary_key_id: 2
        key_id: 3262EFF25BA0D270
        public_key: xsBNBFayYZ...
        emails:
        - email: mastahyeti@users.noreply.github.com
          verified: true
        subkeys:
        - id: 4
          primary_key_id: 3
          key_id: 4A595D4C72EE49C7
          public_key: zsBNBFayYZ...
          emails: []
          subkeys: []
          can_sign: false
          can_encrypt_comms: true
          can_encrypt_storage: true
          can_certify: false
          created_at: '2016-03-24T11:31:04-06:00'
          expires_at: '2016-03-24T11:31:04-07:00'
        can_sign: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_certify: true
        created_at: '2016-03-24T11:31:04-06:00'
        expires_at: '2016-03-24T11:31:04-07:00'
        raw_key: '"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END
          PGP PUBLIC KEY BLOCK-----"'
    base-installation-for-auth-user-paginated:
      value:
        total_count: 2
        installations:
        - id: 1
          account:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          access_tokens_url: https://api.github.com/installations/1/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/github/settings/installations/1
          app_id: 1
          target_id: 1
          target_type: Organization
          permissions:
            checks: write
            metadata: read
            contents: read
          events:
          - push
          - pull_request
          single_file_name: config.yaml
          repository_selection: all
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          app_slug: github-actions
        - id: 3
          account:
            login: octocat
            id: 2
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          access_tokens_url: https://api.github.com/installations/1/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/github/settings/installations/1
          app_id: 1
          target_id: 1
          target_type: Organization
          permissions:
            checks: write
            metadata: read
            contents: read
          events:
          - push
          - pull_request
          single_file_name: config.yaml
          repository_selection: all
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          app_slug: github-actions
    repository-paginated:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: 
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: 
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
    key-items:
      value:
      - key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
        verified: false
        read_only: false
      - key_id: '012345678912345608'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
        id: 3
        url: https://api.github.com/user/keys/3
        title: ssh-rsa AAAAB3NzaC1yc2EAAB
        created_at: '2020-07-11T21:31:57Z'
        verified: false
        read_only: false
    key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
        verified: false
        read_only: false
    org-membership-items:
      value:
      - url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
      - url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership:
      value:
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-2:
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    project:
      value:
        owner_url: https://api.github.com/users/octocat
        url: https://api.github.com/projects/1002603
        html_url: https://github.com/users/octocat/projects/1
        columns_url: https://api.github.com/projects/1002603/columns
        id: 1002603
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        name: My Projects
        body: A board to manage my personal projects.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    repository-items-default-response:
      summary: Default response
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: 
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        template_repository: 
        allow_squash_merge: true
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        anonymous_access_enabled: false
    starred-repository-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
      - starred_at: '2011-01-16T19:06:43Z'
        repo:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: 
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: 
          allow_squash_merge: true
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          anonymous_access_enabled: false
    team-full-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://api.github.com/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: 
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          type: Organization
        ldap_dn: uid=asdf,ou=users,dc=github,dc=com
    public-user-default-response:
      summary: Default response
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    public-user-response-with-git-hub-plan-information:
      summary: Response with GitHub plan information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        plan:
          name: pro
          space: 976562499
          collaborators: 0
          private_repos: 9999
    hovercard:
      value:
        contexts:
        - message: Owns this repository
          octicon: repo
    key-simple-items:
      value:
      - id: 1
        key: ssh-rsa AAA...
    project-items-3:
      value:
      - owner_url: https://api.github.com/users/octocat
        url: https://api.github.com/projects/1002603
        html_url: https://github.com/users/octocat/projects/1
        columns_url: https://api.github.com/projects/1002603/columns
        id: 1002603
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        name: My Projects
        body: A board to manage my personal projects.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>;
        rel="last"
      schema:
        type: string
    content-type:
      example: text/html
      schema:
        type: string
    x-common-marker-version:
      example: 0.17.4
      schema:
        type: string
    x-rate-limit-limit:
      example: '5000'
      schema:
        type: integer
    x-rate-limit-remaining:
      example: '4999'
      schema:
        type: integer
    x-rate-limit-reset:
      example: '1590701888'
      schema:
        type: integer
        format: timestamp
  responses:
    not_found:
      description: Resource Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    validation_failed_simple:
      description: Validation Failed
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/validation-error-simple"
    preview_header_missing:
      description: Preview Header Missing
      content:
        application/json:
          schema:
            type: object
            required:
            - message
            - documentation_url
            properties:
              message:
                type: string
              documentation_url:
                type: string
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    requires_authentication:
      description: Requires Authentication
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    validation_failed:
      description: Validation Failed
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/validation-error"
    not_modified:
      description: Not Modified
    gone:
      description: Gone
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    service_unavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    forbidden_gist:
      description: Forbidden Gist
      content:
        application/json:
          schema:
            type: object
            properties:
              block:
                type: object
                properties:
                  reason:
                    type: string
                  created_at:
                    type: string
                  html_url:
                    type: string
                    nullable: true
              message:
                type: string
              documentation_url:
                type: string
    moved_permanently:
      description: Moved Permanently
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
        application/scim+json:
          schema:
            "$ref": "#/components/schemas/scim-error"
    found:
      description: Found
